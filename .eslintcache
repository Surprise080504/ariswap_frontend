[{"/Users/maryamsaleem/Desktop/ariswap/frontend/src/index.js":"1","/Users/maryamsaleem/Desktop/ariswap/frontend/src/App.js":"2","/Users/maryamsaleem/Desktop/ariswap/frontend/src/serviceWorker.js":"3","/Users/maryamsaleem/Desktop/ariswap/frontend/src/store.js":"4","/Users/maryamsaleem/Desktop/ariswap/frontend/src/routes.js":"5","/Users/maryamsaleem/Desktop/ariswap/frontend/src/privateRoute.js":"6","/Users/maryamsaleem/Desktop/ariswap/frontend/src/redux/index.js":"7","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/full-page-loader/full-page-loader.js":"8","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/home/home.js":"9","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/blog/blog.js":"10","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/item-detail/item-detail.js":"11","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/auctions/live-auctions-list.js":"12","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/collections/my-collections.js":"13","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/collections/collection-details.js":"14","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/author/author.js":"15","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/create-collection/create-collection.js":"16","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/help-center/help-center.js":"17","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/wallet/wallet.js":"18","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/signup/signup.js":"19","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/authors-list/authors-list.js":"20","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/blog-single/blog-single.js":"21","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/profile/profile.js":"22","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/not-found/not-found.js":"23","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/contact/contact.js":"24","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/how-it-works/how-it-works.js":"25","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/explore/explore-all.js":"26","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/home/home.reducer.js":"27","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/nfts/sell-nft.js":"28","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/privacy-&-terms/privacy-&-terms.js":"29","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/activity/activity.js":"30","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/nfts/nfts.reducer.js":"31","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/collections/collections.reducer.js":"32","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/auctions/auctions.reducer.js":"33","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/wallet/wallet.reducer.js":"34","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/contact/contact.reducer.js":"35","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/create-nft/create-nft.js":"36","/Users/maryamsaleem/Desktop/ariswap/frontend/src/layouts/layout4/layout4.js":"37","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/categories/categories.reducer.js":"38","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/faq/faq.reducer.js":"39","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/footer/footer.reducer.js":"40","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/user/user.reducer.js":"41","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/bids/bids.reducer.js":"42","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/offers/offers.reducer.js":"43","/Users/maryamsaleem/Desktop/ariswap/frontend/src/redux/shared/error/error.reducer.js":"44","/Users/maryamsaleem/Desktop/ariswap/frontend/src/layouts/layout1/layout1.jsx":"45","/Users/maryamsaleem/Desktop/ariswap/frontend/src/layouts/layout2/layout2.jsx":"46","/Users/maryamsaleem/Desktop/ariswap/frontend/src/layouts/layout3/layout3.jsx":"47","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/auctions/home-auctions.js":"48","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/collections/popular-collections.js":"49","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/explore/explore-home.js":"50","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/auctions/auctions.action.js":"51","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/collections/collection-preview.js":"52","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/categories/categories.action.js":"53","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/collections/collections.js":"54","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/user/user.action.js":"55","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/collections/collections.actions.js":"56","/Users/maryamsaleem/Desktop/ariswap/frontend/src/redux/types.js":"57","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/nfts/nfts.action.js":"58","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/explore/explore-items.js":"59","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/contact/contact.action.js":"60","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/wallet/wallet.action.js":"61","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/hero/hero.js":"62","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/top-seller/topseller2.js":"63","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/authors/authors.js":"64","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/item-details/item-details.js":"65","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/work/work.js":"66","/Users/maryamsaleem/Desktop/ariswap/frontend/src/config/config.js":"67","/Users/maryamsaleem/Desktop/ariswap/frontend/src/utils/functions.js":"68","/Users/maryamsaleem/Desktop/ariswap/frontend/src/utils/web3.js":"69","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/nft-preview/nft-preview.js":"70","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/author-profile/author-profile.js":"71","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/faq/faq.js":"72","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/sidebar/sidebar.js":"73","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/collections/components/NftCard/NftCard.js":"74","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/help/help.js":"75","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/scroll-up/sroll-up.js":"76","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/modal-menu/modal-menu.js":"77","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/footer/footer.js":"78","/Users/maryamsaleem/Desktop/ariswap/frontend/src/redux/shared/error/error.action.js":"79","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/modal-search/modal-search.js":"80","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/header/header.js":"81","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/breadcrumb/breadcrumb.js":"82","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/filter-search2/filtersearch2.js":"83","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/filter-search/filtersearch.js":"84","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/bids/bids.action.js":"85","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/offers/offers.action.js":"86","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/faq/faq.action.js":"87","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/footer/footer.action.js":"88","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/history/index.js":"89","/Users/maryamsaleem/Desktop/ariswap/frontend/src/utils/abiSetup.js":"90"},{"size":707,"mtime":1636353656160,"results":"91","hashOfConfig":"92"},{"size":1080,"mtime":1636353656133,"results":"93","hashOfConfig":"92"},{"size":5086,"mtime":1636353656163,"results":"94","hashOfConfig":"92"},{"size":343,"mtime":1636353656164,"results":"95","hashOfConfig":"92"},{"size":4401,"mtime":1636966597909,"results":"96","hashOfConfig":"92"},{"size":326,"mtime":1636353656162,"results":"97","hashOfConfig":"92"},{"size":1257,"mtime":1636353656162,"results":"98","hashOfConfig":"92"},{"size":748,"mtime":1636353656150,"results":"99","hashOfConfig":"92"},{"size":870,"mtime":1636966597899,"results":"100","hashOfConfig":"92"},{"size":2633,"mtime":1636657485392,"results":"101","hashOfConfig":"92"},{"size":320,"mtime":1636353656152,"results":"102","hashOfConfig":"92"},{"size":7621,"mtime":1636967776101,"results":"103","hashOfConfig":"92"},{"size":4184,"mtime":1636966597892,"results":"104","hashOfConfig":"92"},{"size":5455,"mtime":1636966597889,"results":"105","hashOfConfig":"92"},{"size":4715,"mtime":1636353656141,"results":"106","hashOfConfig":"92"},{"size":13928,"mtime":1637083700029,"results":"107","hashOfConfig":"92"},{"size":371,"mtime":1636353656150,"results":"108","hashOfConfig":"92"},{"size":12023,"mtime":1637144170169,"results":"109","hashOfConfig":"92"},{"size":5285,"mtime":1636966597905,"results":"110","hashOfConfig":"92"},{"size":374,"mtime":1636353656141,"results":"111","hashOfConfig":"92"},{"size":4569,"mtime":1636657485392,"results":"112","hashOfConfig":"92"},{"size":12523,"mtime":1637067481503,"results":"113","hashOfConfig":"92"},{"size":137,"mtime":1636353656155,"results":"114","hashOfConfig":"92"},{"size":9678,"mtime":1636966597893,"results":"115","hashOfConfig":"92"},{"size":2692,"mtime":1636353656152,"results":"116","hashOfConfig":"92"},{"size":7796,"mtime":1637144113531,"results":"117","hashOfConfig":"92"},{"size":675,"mtime":1636353656152,"results":"118","hashOfConfig":"92"},{"size":31186,"mtime":1637144146819,"results":"119","hashOfConfig":"92"},{"size":13804,"mtime":1636966597904,"results":"120","hashOfConfig":"92"},{"size":9370,"mtime":1636657485386,"results":"121","hashOfConfig":"92"},{"size":1178,"mtime":1636355563111,"results":"122","hashOfConfig":"92"},{"size":1882,"mtime":1637143094074,"results":"123","hashOfConfig":"92"},{"size":754,"mtime":1636353656139,"results":"124","hashOfConfig":"92"},{"size":768,"mtime":1636353656159,"results":"125","hashOfConfig":"92"},{"size":535,"mtime":1636353656146,"results":"126","hashOfConfig":"92"},{"size":17136,"mtime":1637144649534,"results":"127","hashOfConfig":"92"},{"size":245,"mtime":1636353656161,"results":"128","hashOfConfig":"92"},{"size":625,"mtime":1636353656144,"results":"129","hashOfConfig":"92"},{"size":588,"mtime":1636353656148,"results":"130","hashOfConfig":"92"},{"size":620,"mtime":1636353656149,"results":"131","hashOfConfig":"92"},{"size":1460,"mtime":1636353656158,"results":"132","hashOfConfig":"92"},{"size":1544,"mtime":1636353656142,"results":"133","hashOfConfig":"92"},{"size":1459,"mtime":1636353656156,"results":"134","hashOfConfig":"92"},{"size":341,"mtime":1636353656163,"results":"135","hashOfConfig":"92"},{"size":1709,"mtime":1636353656160,"results":"136","hashOfConfig":"92"},{"size":690,"mtime":1636353656161,"results":"137","hashOfConfig":"92"},{"size":610,"mtime":1636353656161,"results":"138","hashOfConfig":"92"},{"size":7905,"mtime":1637144056046,"results":"139","hashOfConfig":"92"},{"size":1988,"mtime":1636966597892,"results":"140","hashOfConfig":"92"},{"size":1533,"mtime":1636355563110,"results":"141","hashOfConfig":"92"},{"size":1308,"mtime":1637071527986,"results":"142","hashOfConfig":"92"},{"size":3652,"mtime":1636966597890,"results":"143","hashOfConfig":"92"},{"size":1479,"mtime":1636966597889,"results":"144","hashOfConfig":"92"},{"size":5367,"mtime":1636966597891,"results":"145","hashOfConfig":"92"},{"size":7554,"mtime":1637144157122,"results":"146","hashOfConfig":"92"},{"size":5658,"mtime":1637144080933,"results":"147","hashOfConfig":"92"},{"size":2095,"mtime":1637143064936,"results":"148","hashOfConfig":"92"},{"size":3928,"mtime":1637067481502,"results":"149","hashOfConfig":"92"},{"size":6186,"mtime":1636966597895,"results":"150","hashOfConfig":"92"},{"size":1227,"mtime":1636966597892,"results":"151","hashOfConfig":"92"},{"size":556,"mtime":1636353656159,"results":"152","hashOfConfig":"92"},{"size":4125,"mtime":1636353656151,"results":"153","hashOfConfig":"92"},{"size":3256,"mtime":1636966597906,"results":"154","hashOfConfig":"92"},{"size":3119,"mtime":1636966597887,"results":"155","hashOfConfig":"92"},{"size":47580,"mtime":1637153945750,"results":"156","hashOfConfig":"92"},{"size":3600,"mtime":1637144178341,"results":"157","hashOfConfig":"92"},{"size":5829,"mtime":1637153988860,"results":"158","hashOfConfig":"92"},{"size":7580,"mtime":1637153695680,"results":"159","hashOfConfig":"92"},{"size":16505,"mtime":1637153827923,"results":"160","hashOfConfig":"92"},{"size":1158,"mtime":1636353656154,"results":"161","hashOfConfig":"92"},{"size":2616,"mtime":1636353656141,"results":"162","hashOfConfig":"92"},{"size":3596,"mtime":1636966597895,"results":"163","hashOfConfig":"92"},{"size":3317,"mtime":1636353656157,"results":"164","hashOfConfig":"92"},{"size":1718,"mtime":1637144101105,"results":"165","hashOfConfig":"92"},{"size":3404,"mtime":1636966597897,"results":"166","hashOfConfig":"92"},{"size":299,"mtime":1636353656157,"results":"167","hashOfConfig":"92"},{"size":742,"mtime":1636353656153,"results":"168","hashOfConfig":"92"},{"size":6965,"mtime":1636353656149,"results":"169","hashOfConfig":"92"},{"size":271,"mtime":1636353656162,"results":"170","hashOfConfig":"92"},{"size":2342,"mtime":1636966597900,"results":"171","hashOfConfig":"92"},{"size":7672,"mtime":1636524735140,"results":"172","hashOfConfig":"92"},{"size":675,"mtime":1636353656143,"results":"173","hashOfConfig":"92"},{"size":2873,"mtime":1636353656149,"results":"174","hashOfConfig":"92"},{"size":2122,"mtime":1636353656148,"results":"175","hashOfConfig":"92"},{"size":5675,"mtime":1637155655770,"results":"176","hashOfConfig":"92"},{"size":5524,"mtime":1636966597903,"results":"177","hashOfConfig":"92"},{"size":1218,"mtime":1636966597895,"results":"178","hashOfConfig":"92"},{"size":1198,"mtime":1637067481500,"results":"179","hashOfConfig":"92"},{"size":3354,"mtime":1636966597897,"results":"180","hashOfConfig":"92"},{"size":578,"mtime":1637130389692,"results":"181","hashOfConfig":"92"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1g5jmzm",{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":4,"source":"218"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":4,"source":"370"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":5,"source":"389"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417"},"/Users/maryamsaleem/Desktop/ariswap/frontend/src/index.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/App.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/serviceWorker.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/store.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/routes.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/privateRoute.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/redux/index.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/full-page-loader/full-page-loader.js",["418"],"import React, { useEffect, useState } from 'react';\nimport AOS from 'aos';\nimport './full-page-loader.css';\n\nfunction FullPageLoader() {\n    useEffect(() => {\n        AOS.init();\n    }, []);\n\n    return (\n        <React.Fragment>\n            <div className=\"fullpage-loader-holder\">\n                <div className=\"fullpage-loader\">\n                    <div className=\"circle\"></div>\n                    <div className=\"circle\"></div>\n                    <div className=\"circle\"></div>\n                    <div className=\"shadow\"></div>\n                    <div className=\"shadow\"></div>\n                    <div className=\"shadow\"></div>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default FullPageLoader;","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/home/home.js",["419","420","421","422"],"import React, { useEffect } from 'react';\nimport { Table, Pagination } from 'react-bootstrap';\nimport Hero from '../hero/hero';\nimport Auctions from '../auctions/home-auctions';\nimport TopSeller from '../top-seller/topseller2';\nimport Collections from '../collections/popular-collections';\nimport MyCollections from '../collections/my-collections'\nimport Explore from '../explore/explore-home';\nimport Work from '../work/work';\nimport Authors from '../authors/authors'\n\nfunction Home() {\n  useEffect(() => {\n    window.scroll(0, 0)\n  }, [])\n\n  return (\n    <>\n      <Hero />\n       {/* <button onClick={()=>Redirection('/explore-all')}>test cases</button>  */}\n      <Auctions />\n      <TopSeller viewAll={\"View All\"} />\n      <Collections />\n      <Authors />\n      {/* <MyCollections/>  */}\n      {/* <Explore /> */}\n      <Work />\n    </>\n  );\n}\n\nexport default Home;","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/blog/blog.js",["423","424"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-2/blog\";\r\n\r\nclass Blog extends Component {\r\n    state = {\r\n        data: []\r\n    }\r\n    componentDidMount(){\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data.blogData\r\n                })\r\n              \r\n            })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"blog-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row items\">\r\n                        {this.state.data.map((item, idx) => {\r\n                            return (\r\n                                <div key={`bd_${idx}`} className=\"col-12 col-md-4 item\">\r\n                                    {/* Single Blog */}\r\n                                    <div className=\"card blog-card\">\r\n                                        {/* Blog Thumb */}\r\n                                        <div className=\"blog-thumb\">\r\n                                            <a href=\"/blog-single\"><img src={item.img} alt=\"\" /></a>\r\n                                        </div>\r\n                                        {/* Blog Content */}\r\n                                        <div className=\"blog-content\">\r\n                                            {/* Meta Info */}\r\n                                            <ul className=\"meta-info d-flex justify-content-between list-unstyled mt-4\">\r\n                                                <li>By <a href=\"#\">{item.author}</a></li>\r\n                                                <li><a href=\"#\">{item.date}</a></li>\r\n                                            </ul>\r\n                                            {/* Blog Title */}\r\n                                            <a href=\"/blog-single\">\r\n                                                <h4>{item.title}</h4>\r\n                                            </a>\r\n                                            <p>{item.content}</p>\r\n                                            {/* Blog Button */}\r\n                                            <a className=\"btn content-btn\" href=\"/blog-single\">{item.btnText}</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Blog;","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/item-detail/item-detail.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/auctions/live-auctions-list.js",["425","426","427","428","429","430","431","432","433"],"import React, { useState, useEffect } from 'react';\nimport FullPageLoader from '../../components/full-page-loader/full-page-loader';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { beforeAuction, getLiveAuctions } from './auctions.action';\nimport { ENV } from '../../config/config';\nimport Countdown from 'react-countdown';\nimport {getCreators, beforeUser} from './../user/user.action';\nimport image from '../../assets/images/placeholder.png'\nconst { globalPlaceholderImage, countDownRenderer } = ENV\n\nconst initData = {\n    pre_heading: \"Auctions\",\n    heading: \"Live Auctions\",\n    content: \"\",\n    btn_1: \"Load More\"\n}\n\nconst LiveAuctions = (props) => {\n    const [pagination, setPagination] = useState(null);\n    const [auctions, setAuctions] = useState(null)\n    const [loader, setLoader] = useState(true) // auctions loader\n    const [loadMoreBtn, setLoadMoreBtn] = useState(false);\n    const [creators,setCreator]=useState([])\n\n    useEffect(() => {\n        window.scroll(0, 0)\n        // get live auctions\n        getLiveAuctions()\n        props.getCreators()\n    }, [])\n\n    useEffect(()=>{\n      \n        if(props.user.topSellersAuth ){\n        //    console.log(props.user.sellers,\"sellers blah blah blah\");\n           setCreator(props.user.sellers)\n           setLoader(false)\n           \n        }\n      },[props.user.topSellersAuth])\n    // set live auctions\n    useEffect(() => {\n        if (props.auction.getAuth) {\n            const { auctions, pagination } = props.auction\n            if (auctions) {\n                setAuctions(auctions)\n                setPagination(pagination)\n                props.beforeAuction()\n             \n            }\n        }\n    }, [props.auction.getAuth])\n\n    // handle show load more button state when pagination is set\n    useEffect(() => {\n        if (pagination)\n            setLoadMoreBtn((pagination.total > 0 && pagination.total > auctions.length && auctions.length > 0))\n    }, [pagination])\n\n    const loadMore = () => {\n        const { page, limit } = pagination\n        setLoader(true)\n\n        // get more live auctions\n        getLiveAuctions(1, limit * (page + 1))\n    }\n\n    const getLiveAuctions = (page = 1, limit = 8) => {\n        const qs = ENV.objectToQueryString({ page, limit })\n        props.getLiveAuctions(qs)\n    }\n    const filterCreator=(nft,field)=>{\n        const result= creators.find((item)=>item._id===nft.nftOwnerId)\n     \n        if(field===\"userName\"){\n\n         if(result?.username){\n       \n             return result?.username\n         }\n         else {\n             return \"no username found\"\n         }\n        }\n        else if(field==\"profileImage\"){\n            if(result?.profileImage)\n            {\n\n                return result?.profileImage\n            }\n            else {\n                return image\n            }\n        }\n\n\n       }\n\n\n\n    return (\n        <section className=\"live-auctions-area load-more padding-wrapper\">\n            {\n                loader ?\n                    <FullPageLoader /> :\n                    <div className=\"container\">\n                        <div className=\"row justify-content-center\">\n                            <div className=\"col-12 col-md-8 col-lg-7\">\n                                {/* Intro */}\n                                <div className=\"intro text-center\">\n                                    <span>{initData.pre_heading}</span>\n                                    <h3 className=\"mt-3 mb-0\">{initData.heading}</h3>\n                                    <p>{initData.content}</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row items\">\n                            {auctions && auctions.length > 0 ?\n                                auctions.map((item, idx) => {\n                                    return (\n                                        <div className=\"col-4\" key={`auc_${idx}`} id={`#auc-${idx}`}>\n                                            <div className=\"card m-3\">\n                                                <div className=\"image-over\">\n                                                    <Link to={`/item-details?item=${window.btoa(item._id)}`}>\n                                                        <img className=\"card-img-top\" src={item.image} alt=\"NFT image\" width=\"600\" height=\"600\" />\n                                                    </Link>\n                                                </div>\n                                                <div className=\"card-caption col-12 p-0\">\n                                                    <div className=\"card-body\">\n                                                        <div className=\"mb-3\">\n                                                            <Countdown\n                                                                // date={new Date(item.auctionEndDate) + 10000}\n                                                                date={1651851923270}\n                                                                renderer={countDownRenderer}\n                                                            />\n                                                        </div>\n                                                        <Link to={`/item-details?item=${window.btoa(item._id)}`}>\n                                                            <h5 className=\"mb-0\">{item.name}</h5>\n                                                        </Link>\n                                                        <Link className=\"seller d-flex align-items-center my-3\" to={`/author`}>\n                                                            \n                                                           <img className=\"avatar-sm rounded-circle\" src={filterCreator(item,\"profileImage\")} alt=\"User Avatar\" />\n                                                             <span className=\"ml-2\">{filterCreator(item,\"userName\")}</span> \n                                                        </Link>\n                                                        <div className=\"card-bottom d-flex justify-content-between\">\n                                                            <span>{item.currentPrice} {ENV.currency}</span>\n                                                            <span>{item.sold} of {item.copies}</span>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    );\n                                })\n                                : <p className=\"text-center ml-3\">No Live Auctions Found</p>\n                            }\n                        </div>\n                        {\n                            loadMoreBtn &&\n                            <div className=\"row\">\n                                <div className=\"col-12 text-center\">\n                                    <a id=\"load-btn\" className=\"btn btn-bordered-white mt-5\" onClick={() => loadMore()}>{initData.btn_1}</a>\n                                </div>\n                            </div>\n                        }\n                    </div>\n            }\n        </section>\n    );\n}\n\nconst mapStateToProps = state => ({\n    auction: state.auction,\n    error: state.error,\n    user: state.user,\n});\n\nexport default connect(mapStateToProps, { beforeAuction,getCreators, getLiveAuctions })(LiveAuctions);","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/collections/my-collections.js",["434","435"],"import React, { useState, useEffect, useRef } from 'react';\nimport FullPageLoader from '../../components/full-page-loader/full-page-loader';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { beforeCategory, getCategories } from '../categories/categories.action';\nimport Collections from './collections';\n\nconst initData = {\n    pre_heading: \"Collections\",\n    heading: \"My Collections\",\n    content: \"\",\n    btnText: \"Create New\"\n}\n\nconst MyCollections = (props) => {\n    const [categories, setCategories] = useState(null)\n    const [categoriesLoader, setCatLoader] = useState(true) // categories loader\n    const [collectionsLoader, setColLoader] = useState(true) // collections loader\n    const collectionsRef = useRef(null)\n\n    useEffect(() => {\n        window.scroll(0, 0)\n        props.getCategories()\n    }, [])\n\n    // when categories data is received\n    useEffect(() => {\n        if (props.category.getAuth) {\n            const { categories } = props.category\n            const allCat = { active: true, name: 'all' }\n            setCategories([allCat, ...categories])\n            props.beforeCategory()\n            setCatLoader(false)\n        }\n    }, [props.category.getAuth])\n\n    const getColLoader = (loader) => {\n        setColLoader(loader)\n    }\n\n    const getCatCollections = (catId) => {\n        collectionsRef.current?.getCatCollections(catId)\n    }\n    // alert(\"cdskjfdkjf\")\n\n    return (\n        <>\n            {(categoriesLoader || collectionsLoader) && <FullPageLoader />}\n            <section className=\"explore-area padding-wrapper\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"intro d-flex justify-content-between align-items-end m-0\">\n                                <div className=\"intro-content\">\n                                    <span>{initData.pre_heading}</span>\n                                    <h3 className=\"mt-3 mb-0\">{initData.heading}</h3>\n                                </div>\n                                <div className=\"intro-btn\">\n                                    <Link className=\"btn content-btn text-left\" to=\"/collection/create\">{initData.btnText}</Link>\n                                </div>\n                            </div>\n                            <div className=\"intro my-3\">\n                                <p>{initData.content}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row justify-content-center text-center\">\n                        <div className=\"col-12\">\n                            {/* Explore Menu */}\n                            <div className=\"explore-menu btn-group btn-group-toggle flex-wrap justify-content-center text-center mb-4\" data-toggle=\"buttons\">\n                                {\n                                    categories && categories.length > 0 &&\n                                    categories.map((item, index) => {\n                                        return (\n                                            <label onClick={() => getCatCollections(item._id)} key={`cat_${index}`} className={`btn ${item.active ? 'active' : ''} d-table text-uppercase p-2`}>\n                                                <input type=\"radio\" defaultValue={item.name} defaultChecked className=\"explore-btn\" />\n                                                <span>{item.name}</span>\n                                            </label>\n                                        )\n                                    })\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Collections all={true} userId='61408000cef27850fdea272b' setLoader={getColLoader} ref={collectionsRef} mycollections />\n            </section>\n        </>\n    );\n}\n\nconst mapStateToProps = state => ({\n    error: state.error,\n    category: state.category\n});\n\nexport default connect(mapStateToProps, { beforeCategory, getCategories })(MyCollections);\n","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/collections/collection-details.js",["436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454"],"import React, { useState, useEffect, useRef } from \"react\";\nimport CollectionPreview from \"./collection-preview\";\nimport Explore from \"../explore/explore-all\";\nimport FullPageLoader from \"../../components/full-page-loader/full-page-loader\";\nimport { connect } from \"react-redux\";\nimport { beforeCollection, getCollection } from \"../collections/collections.actions\";\nimport { Link } from \"react-router-dom\";\nimport { ENV } from \"../../config/config\";\nimport { Accordion, Dropdown } from \"react-bootstrap\";\nimport Select from 'react-select'\nimport FilterSearch from \"../filter-search/filtersearch\";\nimport NftCard from './components/NftCard/NftCard';\nimport {getNFTs} from '../nfts/nfts.action'\nimport {getCreators, beforeUser} from './../user/user.action';\nconst { collectionFeaturedImg, userDefaultImg, categoryDefaultImg } = ENV;\n\nconst CollectionDetails = (props) => {\n  const [collection, setCollection] = useState(null);\n  const [nfts, setNfts] = useState(null);\n  const [nftPagination, setNFTPagination] = useState(null);\n  const [loadMoreBtn, setLoadMoreBtn] = useState(false);\n  const [loader, setLoader] = useState(true);\n  const [limit, setLimit] = useState(2);\n  const [collectionLoader, setColLoader] = useState(true); // collections loader\n  const [nftsLoader, setNftsLoader] = useState(true); // NFTs loader\n  const [creators,setCreator]=useState([])\n  const nftsRef = useRef(null);\n\n  useEffect(() => {\n   \n    props.getNFTs()\n    window.scroll(0, 0);\n    const { collectionId } = props.match.params;\n    if (collectionId) props.getCollection(window.atob(collectionId));\n    else props.history.push(\"/collections\");\n  }, []);\n\n  // when collection data is received\n  useEffect(() => {\n    if (props.collection.getAuth) {\n      const { collection } = props.collection;\n  \n      setCollection(collection);\n      props.beforeCollection();\n      setColLoader(false);\n    }\n  }, [props.collection.getAuth]);\n   \n  useEffect(()=>{\n      \n    if(props.user.topSellersAuth ){\n    \n       setCreator(props.user.sellers)\n\n    }\n  },[props.user.topSellersAuth])\n\n  // handle show load more button state when pagination is set\n  useEffect(() => {\n   \n    if (nftPagination)\n        setLoadMoreBtn((nftPagination.total > 0 && nftPagination.total > nfts.length && nfts.length > 0))\n  }, [nftPagination])\n\n  const loadMore = () => {\n    \n    // const { page, limit } = nftPagination\n    setLoader(true)\n    setLimit(limit + 2)\n    // get more NFTs for explore section\n    // getNFTs(1, limit * (page + 1));\n  }\n\n  const filterNfts=(nfts)=>{\n\n    if(collection)\n    {\n      const result_nft = nfts.filter((nft)=>nft?.collectionId===collection._id);\n      nfts.pagination = { page: 1, limit: 10, total: result_nft.length, pages: 1 }\n      setNfts(result_nft.slice(0, limit));\n      setNFTPagination(nfts.pagination)\n      getNftsLoader(false);\n    }\n  }\n\n\n\n\n  const getNFTs = (page = 1, limit = 2) => {\n      const nftQS = { page, limit }\n      if (props.collectionId)\n          nftQS.collectionId = props.collectionId\n      const qs = ENV.objectToQueryString(nftQS)\n      props.getNFTs(qs)\n  }\n\n  useEffect(()=>{\n    if(props.nft.nftsAuth)\n    {\n      const {nftsData}=props.nft;\n      filterNfts(nftsData)  \n    }\n\n  },[props?.nft?.nftsAuth,collection, limit])\n\n\n\n  const getNftsLoader = (loader) => {\n    setNftsLoader(loader);\n  };\n\n  return (\n    <section\n      className=\"author-area explore-area  popular-collections-area\"\n      style={{ padding: \"0px\" }}\n    >\n      {(collectionLoader || nftsLoader) && <FullPageLoader />}\n      <div className=\"\">\n        {collection  && (\n          <div className=\"row p-5\" style={{width:\"80%\",margin:\"auto\"}}>\n            <div className=\"col-4 p-4\">\n              <CollectionPreview collection={collection} creators={creators} />\n            </div>\n            <div className=\"col-8 \">\n              <div className=\"row justify-content-center mt-5\">\n                <div className=\"col-12 col-md-8 col-lg-7\">\n                  <div className=\"intro text-center mb-4\">\n                      {/* <span>{initData.pre_heading}</span> */}\n                      <span>Explore</span>\n                      {/* <h3 className=\"mt-3 mb-0\">{\"initData.heading\"}</h3> */}\n                          <h3 className=\"mt-3 mb-0\">{\"Exclusce digital assets\"}</h3>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row gx-5 p-4\">\n              \n                {\n                  nfts && creators && nfts.map((nft)=>{\n                  return (\n                    <div className=\"col-6 mt-5\" style={{}}>\n                      <NftCard nft={nft} creators={creators}/>\n                    </div>\n                    )\n                  })\n                }\n                {\n                  loadMoreBtn &&\n                  <div className=\"row w-100\">\n                      <div className=\"col-12 w-100 text-center\">\n                          <a id=\"load-btn\" className=\"btn btn-bordered-white mt-5\" onClick={() => loadMore()}>Load More</a>\n                      </div>\n                  </div>\n                }\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => (\n  {\n\n  error: state.error,\n  collection: state.collection,\n  nft:state.nft,\n  user: state.user,\n});\n\nexport default connect(mapStateToProps, {\n  beforeCollection,\n  getCollection,\n  getNFTs,\n  getCreators\n})(CollectionDetails);\n","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/author/author.js",["455","456","457","458","459","460","461","462"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AuthorProfile from \"../author-profile/author-profile\";\r\nimport Explore from \"../explore/explore-all\";\r\nimport { getUserById, beforeUser } from \"./../user/user.action\";\r\nimport FilterSearch from \"../filter-search2/filtersearch2\";\r\nimport { ENV } from \"./../../config/config\";\r\n\r\nconst Author = (props) => {\r\n  const params = useParams();\r\n  const [authorProfile, setAuthorProfile] = useState({});\r\n  useEffect(() => {\r\n    props.getUserById(params.authorId);\r\n  }, []);\r\n  useEffect(() => {\r\n    if (props.user.individualUserAuth) {\r\n      setAuthorProfile(props.user.individualUser);\r\n      props.beforeUser();\r\n    }\r\n  }, [props.user.individualUserAuth]);\r\n  return (\r\n    <section\r\n      className=\"author-area explore-area popular-collections-area\"\r\n      style={{ padding: \"0px\" }}\r\n    >\r\n      <div className=\"\">\r\n        <div className=\"d-flex author-detail-container\">\r\n          <div className=\"author-preview author-card\">\r\n            <div className=\"seller\">\r\n              <div className=\"seller-thumb avatar-lg\">\r\n                <img\r\n                  className=\"rounded-circle\"\r\n                  src={props.profileImage ? props.profileImage : ENV.globalPlaceholderImage}\r\n                  alt=\"User Profile\"\r\n                  style={{ height: \"110px\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-caption p-0 text-center\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"mb-3\">{authorProfile.username}</h5>\r\n              <p className=\"my-3\">{authorProfile.description}</p>\r\n              <div className=\"input-group\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"0x000000000000000000\" readOnly value={authorProfile.address}\r\n                  style={{\r\n                    borderRadius: \"100px\",\r\n                    backgroundColor: \"transparent\",\r\n                    border: \"2px solid\",\r\n                    height: \"40px\",\r\n                    padding: \"1.5rem\",\r\n                    boxShadow: \"none\",\r\n                    outline: \"none\",\r\n\r\n                  }}\r\n                />\r\n                <div className=\"input-group-append\"\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    height: \"100%\",\r\n                    top: \"0\",\r\n                    right: \"0\",\r\n                    borderRadius: \"100px\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <button style={{\r\n                    marginRight: \"5px\",\r\n                    padding: \"12px 16px\",\r\n                    backgroundColor: \"transparent\",\r\n                    color: \"#fff\",\r\n                    border: \"0\",\r\n                    outline: \"none\",\r\n                  }}><i className=\"icon-docs\" /></button>\r\n                </div>\r\n              </div>\r\n              <div className=\"social-icons d-flex justify-content-center my-3\">\r\n                {\r\n                  authorProfile.facebookLink && <a className=\"facebook\" href={authorProfile.facebookLink} target=\"_blank\">\r\n                    <i className=\"fab fa-facebook-f\" />\r\n                  </a>\r\n                }\r\n                {\r\n                  authorProfile.twitterLink && <a className=\"twitter\" href={authorProfile.twitterLink} target=\"_blank\">\r\n                    <i className=\"fab fa-twitter\" />\r\n                  </a>\r\n                }\r\n                {\r\n                  authorProfile.gPlusLink && <a className=\"google-plus\" href={authorProfile.gPlusLink} target=\"_blank\">\r\n                    <i className=\"fab fa-google-plus-g\" />\r\n                  </a>\r\n                }\r\n                {\r\n                  authorProfile.vineLink && <a className=\"vine\" href={authorProfile.vineLink} target=\"_blank\">\r\n                    <i className=\"fab fa-vine\" />\r\n                  </a>\r\n                }\r\n              </div>\r\n              {\r\n                props.followText &&\r\n                <a className=\"btn btn-bordered-white btn-smaller\" href=\"#\">{props.followText}</a>\r\n              }\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex collection-wrapper\">\r\n            <FilterSearch />\r\n            <div className=\"nfts-collection-wrapper w-100\">\r\n              <Explore />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.error,\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserById, beforeUser })(Author);\r\n","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/create-collection/create-collection.js",["463","464"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { beforeCollection, upsertCollection } from '../collections/collections.actions';\nimport { beforeCategory, getCategories } from '../categories/categories.action';\nimport { getUser } from '../user/user.action';\nimport { emptyError } from '../../redux/shared/error/error.action';\nimport $ from 'jquery';\nimport { ENV } from '../../config/config';\nimport SimpleReactValidator from 'simple-react-validator'\nimport FullPageLoader from '../../components/full-page-loader/full-page-loader';\nimport { toast } from 'react-toastify'\nclass CreateCollection extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isSubmitted: false,\n            formValid: true,\n            loader: true,\n            errors: '',\n            collection: {\n                userId: '',\n                categoryId: '',\n                logo: '',\n                featuredImg: '',\n                banner: '',\n                name: '',\n                url: '',\n                description: ''\n            },\n            categories: null\n        }\n        this.validator = new SimpleReactValidator({\n            autoForceUpdate: this,\n            messages: {\n                required: 'This field is required.'  // will override all messages\n            },\n        })\n    }\n\n    componentDidMount() {\n        window.scroll(0, 0)\n        this.props.getCategories();\n        // this.props.getUser()\n    }\n\n    componentDidUpdate() {\n        if (this.props.error) {\n            this.setState({ loader: false }, () => {\n                this.props.emptyError()\n            })\n        }\n\n        if (this.props.collection.upsertAuth) {\n            this.props.beforeCollection()\n            this.props.history.push('/collections')\n        }\n\n        if (this.props.category.getAuth) {\n            const { categories } = this.props.category\n            this.setState({ categories, loader: false }, () => {\n                this.props.beforeCategory()\n            })\n        }\n    }\n\n    onFileChange(e) {\n        let file = e.target.files[0];\n        if (file)\n            if (file.type.includes('image')) {\n                let { collection } = this.state\n                collection = { ...collection, [e.target.name]: file }\n                if (e.target.name) {\n                    collection[`${e.target.name}Url`] = URL.createObjectURL(e.target.files[0])\n                    $(`#collection-${e.target.name}-label`).html('File selected')\n                }\n                this.setState({ collection })\n            }\n    }\n\n    onChange(e) {\n        let { name, value } = e.target\n        const userId = ENV.getUserKeys('_id')._id;\n        let { collection } = this.state;\n        collection = { ...collection, [name]: value , userId: userId}\n        this.setState({ collection })\n    }\n\n    reset = () => {\n        const collection = {\n            userId: '',\n            categoryId: '',\n            logo: '',\n            featuredImg: '',\n            banner: '',\n            name: '',\n            url: '',\n            description: '',\n        }\n        this.setState({ collection, isSubmitted: false })\n    }\n    \n\n\n    submit = (e) => {\n        e.preventDefault();\n        const userId = ENV.getUserKeys('_id')._id;\n        this.setState({ isSubmitted: true, formValid: this.validator.allValid() ? true : false }, () => {\n            const { formValid } = this.state\n            if (formValid) {\n                this.setState({\n                    loader: true,\n                }, async () => {\n                    const { collection } = this.state\n                 \n                    var formData = new FormData();\n                    for (var val in collection)\n                    {\n                 \n                        if (collection[val])\n                        {\n                            formData.append(val, collection[val])\n                        }\n                \n                    }\n                          \n                    this.props.upsertCollection('collection/create', formData)\n             \n                })\n            } else {\n                this.validator.showMessages()\n                this.setState({\n                    errors: 'Please fill all required fields in valid format.',\n                    formValid: false\n                }, () => {\n                    $('#create-collection').scrollTop(0, 0)\n                })\n            }\n        })\n    }\n\n    render() {\n        const { collection, errors, loader, isSubmitted, categories } = this.state\n        if(!ENV.getUserKeys('_id')._id){\n            toast.error(\"Please login to create Collection\")\n            this.props.history.push('/')\n               return \" \"\n           }\n           else {\n        \n        return (\n            <section className=\"author-area padding-wrapper\">\n                {loader && <FullPageLoader />}\n                <div className=\"container\">\n                    <div className=\"row justify-content-between\">\n                        <div className=\"col-12 col-md-12\">\n                            <div className=\"mt-5 mt-lg-0 mb-4 mb-lg-5\">\n                                <div className=\"intro\">\n                                    <div className=\"intro-content\">\n                                        <span>Get Started</span>\n                                        <h3 className=\"mt-3 mb-0\">Create Collection</h3>\n                                    </div>\n                                </div>\n                                {\n                                    isSubmitted && errors &&\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <span id=\"create-collection-err\" className=\"text-danger\">{errors}</span>\n                                        </div>\n                                    </div>\n                                }\n                            </div>\n                            <form id=\"create-collection\" className=\"item-form card no-hover\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <div className=\"input-group form-group\">\n                                            <div className=\"custom-file\">\n                                                <input type=\"file\" className=\"custom-file-input\" id=\"logo\" accept=\".png,.jpeg,.jpg\" onChange={(e) => this.onFileChange(e)} name=\"logo\" />\n                                                <label id=\"collection-logo-label\" className=\"custom-file-label\" htmlFor=\"logo\">Choose Logo *</label>\n                                            </div>\n                                            <span className=\"text-danger\">{this.validator.message('logo', collection.logo, 'required')}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-12 col-md-2\">\n                                        <div className=\"card no-hover text-center\">\n                                            <div className=\"image-over\">\n                                                <img id=\"logo-placeholder\" className=\"card-img-top create-collection-placeholder\" src={collection.logoUrl ? collection.logoUrl : \"/img/placeholder.png\"} alt=\"\" />\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-12\">\n                                        <div className=\"input-group form-group\">\n                                            <div className=\"custom-file\">\n                                                <input type=\"file\" className=\"custom-file-input\" id=\"featuredImg\" accept=\".png,.jpeg,.jpg\" onChange={(e) => this.onFileChange(e)} name=\"featuredImg\" />\n                                                <label id=\"collection-featuredImg-label\" className=\"custom-file-label\" htmlFor=\"featuredImg\"> Choose Featured Image</label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-12 col-md-3\">\n                                        <div className=\"card no-hover text-center\">\n                                            <div className=\"image-over\">\n                                                <img id=\"featuredImg-placeholder\" className=\"card-img-top create-collection-placeholder\" src={collection.featuredImgUrl ? collection.featuredImgUrl : \"/img/placeholder.png\"} alt=\"\" />\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-12\">\n                                        <div className=\"input-group form-group\">\n                                            <div className=\"custom-file\">\n                                                <input type=\"file\" className=\"custom-file-input\" id=\"banner\" accept=\".png,.jpeg,.jpg\" onChange={(e) => this.onFileChange(e)} name=\"banner\" />\n                                                <label id=\"collection-banner-label\" className=\"custom-file-label\" htmlFor=\"banner\">Choose Banner</label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-12\">\n                                        <div className=\"card no-hover text-center\">\n                                            <div className=\"image-over\">\n                                                <img id=\"banner-placeholder\" className=\"card-img-top create-collection-placeholder\" src={collection.bannerUrl ? collection.bannerUrl : \"/img/placeholder.png\"} alt=\"\" />\n                                           \n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-6\">\n                                        <div className=\"form-group mt-3\">\n                                            <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Name *\" onChange={(e) => this.onChange(e)} defaultValue={collection.name} maxLength=\"55\" />\n                                            <span className=\"text-danger\">{this.validator.message('name', collection.name, 'required')}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-6\">\n                                        <div className=\"form-group mt-3\">\n                                            <input type=\"text\" className=\"form-control\" name=\"url\" placeholder=\"URL\" onChange={(e) => this.onChange(e)} defaultValue={collection.url}  maxLength=\"70\" />\n                                            <span className=\"text-danger\">{this.validator.message('url', collection.url, 'url')}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-12\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"category\" className=\"pos-rel\">Select Category *</label>\n                                            <select className=\"form-control p-0\" id=\"category\" name=\"categoryId\" onChange={(e) => this.onChange(e)}>\n                                                <option value=\"\">Select Category</option>\n                                                {\n                                                    categories && categories.map((category, index) => {\n                                                        return (\n                                                            <option key={index} value={category._id}>{category.name}</option>\n                                                        )\n                                                    })\n                                                }\n                                            </select>\n                                            <span className=\"text-danger\">{this.validator.message('category', collection.categoryId, 'required')}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-12\">\n                                        <div className=\"form-group\">\n                                            <textarea className=\"form-control\" name=\"description\" placeholder=\"Description\" cols={30} rows={3} onChange={(e) => this.onChange(e)} defaultValue={collection.description} maxLength=\"230\"/>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-12\">\n                                        <button disabled={loader} className=\"btn w-100 mt-3 mt-sm-4\" type=\"button\" onClick={(e) => this.submit(e)}>Create Collection</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div >\n            </section >\n        )\n                                                }\n    }\n}\n\nconst mapStateToProps = state => ({\n    collection: state.collection,\n    // user: state.user,\n    error: state.error,\n    category: state.category\n});\n\nexport default connect(mapStateToProps, { beforeCollection, upsertCollection, emptyError, beforeCategory, getCategories })(CreateCollection);","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/help-center/help-center.js",["465"],"import React, { Component } from 'react';\nimport Help from '../help/help';\nimport Faq from '../faq/faq';\n\nclass HelpCenter extends Component {\n\n    componentDidMount() {\n        window.scroll(0, 0)\n    }\n\n    render() {\n        return (\n            <>\n                {/* <Help /> */}\n                <Faq />\n            </>\n        );\n    }\n}\n\nexport default HelpCenter;","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/wallet/wallet.js",["466","467"],"import React, { useState, useEffect } from 'react';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport validator from 'validator'\nimport { connect } from 'react-redux';\nimport { connectMetamaskCopy, signRequest } from '../../utils/web3'\nimport { beforeWallet, setWalletAddress } from '../wallet/wallet.action';\nimport { toast } from 'react-toastify';\n// import { getCollections } from '../collections/collections.actions'\nimport { ENV } from '../../config/config';\nimport { login, signup } from '../user/user.action';\n\nconst Wallet = (props) => {\n    const history = useHistory();\n    const [connectedAddress, setConnectedAddress] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const [showSignUp, setShowSignUp] = useState(false);\n    const [showSignUpComponent, setShowSignUpComponent] = useState(false);\n    const [email, setEmail] = useState('');\n    const [username, setUsername] = useState('');\n\n    const connectMetamaskCall = async () => {\n        let connectedAddress = await connectMetamaskCopy();\n        setConnectedAddress(connectedAddress);\n        setWalletAddress(connectedAddress);\n\n    }\n\n    useEffect(() => {\n        if (props.error) {\n            console.log('errors', props.error)\n            \n            setErrorMessage(props.error.message);\n            if (props.error.notExist) {\n                setShowSignUp(true);\n            } else {\n                setShowSignUp(false);\n            }\n        }\n    }, [props.error]);\n\n    useEffect(() => {\n        // console.log(\"dskms;kdncksjdncksjdcnkjscnd\", props.user.userAuth);\n        if(props.collection.getAuth === true) {\n            let collections = props.collection.collections;\n            // console.log('collections',collections)\n            const userId = ENV.getUserKeys('_id')._id;\n            // console.log(\"userID\", userId);\n            let myCollections = collections.filter(el => el.userId === userId);\n            // console.log(\"myCollections\", myCollections);\n            if(myCollections && myCollections.length > 0){\n                history.push('/create')\n            }\n            else {\n                history.push('/collection/create');\n            }\n        }\n    }, [props.collection.getAuth])\n\n\n\n\n    const signup = async (e) => {\n        e.preventDefault();\n        try {\n\n            if (validator.isEmail(email)) {\n                let sign = await signRequest();\n                let payload = {\n                    address: connectedAddress,\n                    password: sign,\n                    email: email,\n                    username: username\n                }\n            props.signup(payload);\n              } else {\n                setErrorMessage('please enter valid email')\n              }\n           \n        }\n        catch(err){\n        \n            toast.error(err.message)\n        }\n\n\n    }\n\n    const login = async () => {\n        try {\n\n            let sign = await signRequest();\n            let payload = {\n                address: connectedAddress,\n                password: sign\n            }\n            props.login(payload);\n        }\n        catch(err){\n         \n            toast.error(err.message)\n        }\n   \n    }\n\n    const switchSignup = () => {\n        setShowSignUpComponent(true);\n    }\n\n    // if (props.user.userAuth) {\n    //     console.log(\"@@@@Collection-----@\", collections);\n    //     if(collections && collections.length>){\n    //         console.log(\"In Upper\")\n    //         return <Redirect to=\"/create\" />\n    //     }\n    //     else {\n    //         console.log(\"In Down\");\n    //         return <Redirect to=\"/collection/create\" />\n    //     }\n    // }\n\n    return (\n        <section className={!showSignUpComponent ? `wallet-connect-area` : `author-area`}>\n            <div className=\"container\">\n                {\n                    connectedAddress && !showSignUpComponent ?\n                        <>\n                            <div className=\"row justify-content-center\">\n                                <div className=\"col-12 col-md-8 col-lg-7\">\n                                    {/* Intro */}\n                                    <div className=\"intro text-center\">\n                                        <span>Sign In</span>\n                                        <h3 className=\"mt-3 mb-0\">SignIn to your account</h3>\n                                        {/* <p>Please select the wallet you want to connect to.</p> */}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row justify-content-center items\">\n                                <div className=\"col-12 col-md-6 col-lg-4 item\">\n                                    <div className=\"card single-wallet\">\n                                        <span className=\"d-block text-center\" href=\"/login\">\n                                            <h4 className=\"mb-0\">Address</h4>\n                                            <p id=\"connected-address\">{connectedAddress}</p>\n                                            {\n                                                errorMessage && <p className=\"text-white\">{errorMessage}</p>\n                                            }\n                                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"button\" onClick={() => login()}>Sign In</button>\n                                            {\n                                                showSignUp && <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"button\" onClick={() => switchSignup()}>Would you like to Signup?</button>\n                                            }\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                        </>\n                        :\n                        showSignUpComponent ?\n                            <div className=\"row justify-content-center\">\n                                <div className=\"col-12 col-md-8 col-lg-7\">\n                                    {/* Intro */}\n                                    <div className=\"intro text-center\">\n                                        <span>SIGNUP</span>\n                                        <h3 className=\"mt-3 mb-0\">Create an Account</h3>\n                                        <p>Create the account with the address</p>\n                                    </div>\n                                    {/* Item Form */}\n                                    <form className=\"item-form card no-hover\" onSubmit={(e) => signup(e)}>\n                                        <div className=\"row\">\n                                            {\n                                                errorMessage && <p className=\"text-red\">{errorMessage}</p>\n                                            }\n                                            <div className=\"col-12\">\n                                                <div className=\"form-group mt-3\">\n                                                    <input type=\"text\" className=\"form-control\" name=\"address\" placeholder=\"Address\" required=\"required\" disabled={true} value={connectedAddress} />\n                                                </div>\n                                            </div>\n                                            <div className=\"col-12\">\n                                                <div className=\"form-group mt-3\">\n                                                    <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Enter your Email\" required=\"required\" defaultValue={email} onChange={(e) => setEmail(e.target.value)} />\n                                                </div>\n                                            </div>\n                                            <div className=\"col-12\">\n                                                <div className=\"form-group mt-3\">\n                                                    <input type=\"text\" className=\"form-control\" name=\"username\" placeholder=\"Enter your Username\" required=\"required\" defaultValue={username} onChange={(e) => setUsername(e.target.value)} />\n                                                </div>\n                                            </div>\n                                            <div className=\"col-12\">\n                                                <div className=\"form-group mt-3\">\n                                                    <div className=\"form-check form-check-inline\">\n                                                        <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" />\n                                                        <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">I agree to <a href=\"/privacy-and-terms\">Privacy Policy</a></label>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"col-12\">\n                                                <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Sign Up</button>\n                                            </div>\n                                            {/* <div className=\"col-12\">\n                                        <span className=\"d-block text-center mt-4\">Already have an account? <a href=\"/login\">Login</a></span>\n                                    </div> */}\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                            :\n                            <>\n                                <div className=\"row justify-content-center\">\n                                    <div className=\"col-12 col-md-8 col-lg-7\">\n                                        {/* Intro */}\n                                        <div className=\"intro text-center\">\n                                            <span>Wallet Connect</span>\n                                            <h3 className=\"mt-3 mb-0\">Connect your Wallet</h3>\n                                            <p>Please select the wallet you want to connect to.</p>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center items\">\n                                    {\n                                        errorMessage && <p className=\"text-white\">{errorMessage}</p>\n                                    }\n                                    <div className=\"col-12 col-md-6 col-lg-4 item\" onClick={() => connectMetamaskCall()}>\n                                        {/* Single Wallet */}\n                                        <div className=\"card single-wallet whole-hover\">\n                                            <span className=\"d-block text-center\" href=\"/login\">\n                                                <img className=\"avatar-lg\" src=\"/img/metamask2.png\" alt=\"\" />\n                                                <h4 className=\"mb-0\">MetaMask</h4>\n                                                <p>A browser extension with great flexibility. The web's most popular wallet</p>\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </>\n                }\n            </div>\n        </section>\n    );\n}\n\n\nconst mapStateToProps = state => (\n    {\n        wallet: state.wallet,\n        collection: state.collection,\n        user: state.user,\n        error: state.error\n});\n\nexport default connect(mapStateToProps, { beforeWallet, setWalletAddress, login, signup })(Wallet);","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/signup/signup.js",["468","469"],"import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"Signup\",\r\n    heading: \"Create an Account\",\r\n    content: \"\"\r\n}\r\n\r\nconst socialData = [\r\n    {\r\n        id: \"1\",\r\n        link: \"facebook\",\r\n        icon: \"fab fa-facebook-f\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        link: \"twitter\",\r\n        icon: \"fab fa-twitter\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        link: \"google-plus\",\r\n        icon: \"fab fa-google-plus-g\"\r\n    }\r\n]\r\n\r\nclass Signup extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            initData: initData,\r\n            data: socialData\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"author-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.initData.pre_heading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\r\n                                <p>{this.state.initData.content}</p>\r\n                            </div>\r\n                            {/* Item Form */}\r\n                            <form className=\"item-form card no-hover\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Enter your Name\" required=\"required\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Enter your Email\" required=\"required\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Enter your Password\" required=\"required\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <div className=\"form-check form-check-inline\">\r\n                                                <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" />\r\n                                                <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">I agree to <a href=\"#\">Privacy Policy</a></label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Sign Up</button>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <span className=\"d-block text-center mt-4\">Already have an account? <a href=\"/login\">Login</a></span>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <hr />\r\n                                        <div className=\"other-option\">\r\n                                            <span className=\"d-block text-center mb-4\">Or</span>\r\n                                            {/* Social Icons */}\r\n                                            <div className=\"social-icons d-flex justify-content-center\">\r\n                                                {this.state.data.map((item, idx) => {\r\n                                                    return (\r\n                                                        <a key={`lsd_${idx}`} className={item.link} href=\"#\">\r\n                                                            <i className={item.icon} />\r\n                                                            <i className={item.icon} />\r\n                                                        </a>\r\n                                                    );\r\n                                                })}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signup;","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/authors-list/authors-list.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/blog-single/blog-single.js",["470","471"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Sidebar from '../sidebar/sidebar';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-2/blogSingle\";\r\n\r\nclass BlogSingle extends Component {\r\n    state = {\r\n        data: {}\r\n    }\r\n    componentDidMount(){\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data\r\n                })\r\n            \r\n            })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"single featured post-details\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {/* Main */}\r\n                        <div className=\"col-12 col-lg-8 p-0\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 align-self-center\">\r\n                                    {/* Image */}\r\n                                    <div className=\"blog-thumb\">\r\n                                        <img className=\"w-100\" src={this.state.data.image} alt=\"\" />\r\n                                    </div>\r\n                                    <h2 className=\"featured ml-0\">{this.state.data.title}</h2>\r\n                                    <p>{this.state.data.content_1}</p>\r\n                                    <p>\r\n                                    </p>\r\n                                    <blockquote>{this.state.data.quote}</blockquote>\r\n                                    <p>{this.state.data.content_2}</p>\r\n                                    <p>{this.state.data.content_3}</p>\r\n                                    {/* Post Holder */}\r\n                                    <ul className=\"mb-5 post-holder\">\r\n                                        <li className=\"post-meta-item\">\r\n                                            <div className=\"date\">\r\n                                                <span className=\"posted-on\">Posted On <a href=\"#\" rel=\"bookmark\"><time className=\"entry-date published updated\" dateTime=\"2018-11-01T06:18:46+00:00\">{this.state.data.date}</time></a></span>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                    {/* Comments */}\r\n                                    <h3 className=\"comments-reply-text mb-3\">{this.state.data.commentTitle}</h3>\r\n                                    <p className=\"mt-3\">{this.state.data.commentContent}</p>\r\n                                    <form>\r\n                                        <fieldset>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 col-lg-6 input-group p-0 pr-lg-3 mb-3\">\r\n                                                    <input type=\"text\" name=\"name\" data-minlength={3} placeholder=\"Name\" required />\r\n                                                </div>\r\n                                                <div className=\"col-12 col-lg-6 input-group p-0 mb-3\">\r\n                                                    <input type=\"email\" name=\"email\" data-minlength={3} placeholder=\"Email\" required />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 input-group p-0 mb-3\">\r\n                                                    <textarea name=\"message\" data-minlength={3} rows={4} placeholder=\"Message\" required defaultValue={\"\"} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-12 input-group p-0\">\r\n                                                <a className=\"btn btn-bordered-white text-white\">{this.state.data.commentBtn}<i className=\"icon-login ml-2\" /></a>\r\n                                            </div>\r\n                                        </fieldset>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* Sidebar */}\r\n                        <Sidebar />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BlogSingle;","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/profile/profile.js",["472","473","474","475","476"],"import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux';\nimport AuthorProfile from \"../author-profile/author-profile\"\nimport { SET_INDIVIDUAL_USER } from '../../redux/types';\nimport 'react-toastify/dist/ReactToastify.css'\nimport $ from 'jquery'\nimport SimpleReactValidator from 'simple-react-validator'\nimport {updateProfile, setIndividualUserData, beforeUser} from './../user/user.action';\nimport {signRequest} from './../../utils/web3';\nimport {ENV} from './../../config/config';\nimport { toast } from 'react-toastify';\nimport {useHistory} from 'react-router-dom'\n\nconst Profile = (props) => {\n    const [isSubmitted, setIsSubmitted] = useState(false)\n    const [loader, setLoader] = useState(false)\n    const [errors, setErrors] = useState('')\n    const [connectedAddress, setConnectedAddress] = useState('')\n    const [image, setImage] = useState('')\n    const [imageUrl, setImageUrl] = useState('')\n    const [banner, setBannerImage] = useState('')\n    const [bannerUrl, setBannerUrl] = useState('')\n    const [address, setAddress] = useState('')\n    const [email, setEmail] = useState('')\n    const [username, setUsername] = useState('')\n    const [description, setDescription] = useState('')\n    const [facebookLink, setFbLink] = useState('')\n    const [twitterLink, setTwitterLink] = useState('')\n    const [gPlusLink, setgPlusLink] = useState('')\n    const [vineLink, setVineLink] = useState('')\n    const [_id, setUserId] = useState('')\n    const history=useHistory()\n    let validator = new SimpleReactValidator({\n        autoForceUpdate: this,\n        messages: {\n            required: 'This field is required.'  // will override all messages\n        },\n    })\n    useEffect(()=>{\n        let user = ENV.getUserKeys('');\n        props.setIndividualUserData(user);\n        setConnectedAddress( user.address ? user.address : '' );\n        setAddress( user.address ? user.address : '');\n        setEmail( user.email ? user.email : '' );\n        setUserId( user._id ? user._id : '' );\n        setDescription( user.description ? user.description : '' );\n        setFbLink( user.facebookLink ? user.facebookLink : '' );\n        setgPlusLink( user.gPlusLink ? user.gPlusLink : '' );\n        setTwitterLink( user.twitterLink ? user.twitterLink : '' );\n        setVineLink( user.vineLink ? user.vineLink : '' );\n        setUsername( user.username ? user.username : '' );\n        setImageUrl( user.profileImage ? user.profileImage : '' );\n    }, []);\n\n    useEffect(()=>{\n        if (props.user.userAuth) {\n            props.beforeUser();\n            setLoader(false);\n        }\n    }, [props.user.userAuth]);\n\n    useEffect(() => {\n        if (props.error) {\n            setErrors(props.error.message);\n            goToTop();\n        }\n    }, [props.error]);\n\n    const goToTop = () => {\n        $('html, body').animate({\n            scrollTop: 0\n        }, 600)\n    }\n\n    const onFileChange = (e) => {\n        let file = e.target.files[0];\n        let fileURL = '';\n        if (file) {\n            if (file.type.includes('image')) {\n                fileURL = URL.createObjectURL(file)\n            } else {\n                file = {};\n                fileURL = '';\n            }\n            setImageUrl(fileURL);\n            setImage(file);\n        }\n    }\n\n    const onBannerChange = (e) => {\n        let file = e.target.files[0];\n        let fileURL = '';\n        if (file) {\n            if (file.type.includes('image')) {\n                fileURL = URL.createObjectURL(file)\n            } else {\n                file = {};\n                fileURL = '';\n            }\n            setBannerUrl(fileURL);\n            setBannerImage(file);\n        }\n    }\n\n    const submit = async (e) => {\n        e.preventDefault();\n        setErrors(\"\");\n        setIsSubmitted(true);\n        let isFormValid = validator.allValid() ? true : false;\n        if(isFormValid) {\n            try {\n                let signature = await signRequest();\n                setLoader(true);\n                var formData = new FormData();\n                formData.append('profileImage', image)\n                formData.append('bannerImage', banner)\n                formData.append('description', description)\n                formData.append('facebookLink', facebookLink)\n                formData.append('twitterLink', twitterLink)\n                formData.append('gPlusLink', gPlusLink)\n                formData.append('vineLink', vineLink)\n                formData.append('username', username)\n                formData.append('signature', signature)\n                props.updateProfile(formData);\n            }\n            catch (e) {\n\n            }\n            \n        }\n        else {\n            validator.showMessages();\n            setErrors('Please fill all required fields in valid format.');\n            goToTop();\n        }\n    }\n    if(!ENV.getUserKeys('_id')._id){\n        toast.error(\"Please login to view profile\")\n        history.push('/')\n           return \" \"\n       }\n       else {\n\n    return (\n        <section className=\"author-area\">\n            <div className=\"container\">\n                <div className=\"row justify-content-between\">\n                    <div className=\"col-12 col-md-4\">\n                        <AuthorProfile profileImage={imageUrl} username={username} description={description} address={connectedAddress} facebookLink={facebookLink} twitterLink={twitterLink} gPlusLink={gPlusLink} vineLink={vineLink} />\n                    </div>\n                    <div className=\"col-12 col-md-7\">\n                        <div className=\"mt-5 mt-lg-0 mb-4 mb-lg-5\">\n                            <div className=\"intro\">\n                                <div className=\"intro-content\">\n                                    <span>Your Profile</span>\n                                    <h3 className=\"mt-3 mb-0\">Update your profile</h3>\n                                </div>\n                            </div>\n                        </div>\n                        <form id=\"create-nft\" className=\"item-form card no-hover\">\n                            {\n                                isSubmitted && errors &&\n                                <div className=\"row pb-2\">\n                                    <div className=\"col-12\">\n                                        <span id=\"create-nft-err\" className=\"text-danger\">{errors}</span>\n                                    </div>\n                                </div>\n                            }\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <div className=\"input-group form-group\">\n                                        <div className=\"custom-file\">\n                                            <input type=\"file\" className=\"custom-file-input\" id=\"banner\" accept=\".png,.jpeg,.jpg\" onChange={(e) => onBannerChange(e)} name=\"banner\" />\n                                            <label id=\"nft-imasge-label\" className=\"custom-file-label\" htmlFor=\"banner\">\n                                                {banner && banner.name ? banner.name : \"Choose Banner Image\"}\n                                            </label>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-12\">\n                                    <div className=\"input-group form-group\">\n                                        <div className=\"custom-file\">\n                                            <input type=\"file\" className=\"custom-file-input\" id=\"image\" accept=\".png,.jpeg,.jpg\" onChange={(e) => onFileChange(e)} name=\"image\" />\n                                            <label id=\"nft-imasge-label\" className=\"custom-file-label\" htmlFor=\"image\">\n                                                {image && image.name ? image.name : \"Choose Profile Picture\"}\n                                            </label>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-12\">\n                                    <div className=\"form-group mt-3\">\n                                        <input type=\"text\" className=\"form-control\" name=\"address\" placeholder=\"Wallet Address *\" required=\"required\" value={address} readOnly/>\n                                        <span className=\"text-danger\">{validator.message('address', address, 'required')}</span>\n                                    </div>\n                                </div>\n                                <div className=\"col-12\">\n                                    <div className=\"form-group mt-3\">\n                                        <input type=\"text\" className=\"form-control\" name=\"email\" placeholder=\"Email *\" required=\"required\" value={email} readOnly/>\n                                        <span className=\"text-danger\">{validator.message('email', email, 'required')}</span>\n                                    </div>\n                                </div>\n                                <div className=\"col-12\">\n                                    <div className=\"form-group mt-3\">\n                                        <input type=\"text\" className=\"form-control\" name=\"username\" placeholder=\"Username *\" required=\"required\" onChange={(e) => setUsername(e.target.value)} defaultValue={username} />\n                                        <span className=\"text-danger\">{validator.message('username', username, 'required')}</span>\n                                    </div>\n                                </div>\n                                <div className=\"col-12\">\n                                    <div className=\"form-group\">\n                                        <textarea className=\"form-control\" name=\"description\" placeholder=\"About\" cols={30} rows={3} onChange={(e) => setDescription(e.target.value)} defaultValue={description} />\n                                    </div>\n                                </div>\n                                <div className=\"col-12\">\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" className=\"form-control\" name=\"facebookLink\" placeholder=\"Facebook Link\" cols={30} rows={3} onChange={(e) => setFbLink(e.target.value)} defaultValue={facebookLink} />\n                                    </div>\n                                </div>\n                                <div className=\"col-12\">\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" className=\"form-control\" name=\"twitterLink\" placeholder=\"Twitter Link\" cols={30} rows={3} onChange={(e) => setTwitterLink(e.target.value)} defaultValue={twitterLink} />\n                                    </div>\n                                </div>\n                                <div className=\"col-12\">\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" className=\"form-control\" name=\"gPlusLink\" placeholder=\"Google Plus Link\" cols={30} rows={3} onChange={(e) => setgPlusLink(e.target.value)} defaultValue={gPlusLink} />\n                                    </div>\n                                </div>\n                                <div className=\"col-12\">\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" className=\"form-control\" name=\"vineLink\" placeholder=\"Vine Link\" cols={30} rows={3} onChange={(e) => setVineLink(e.target.value)} defaultValue={vineLink} />\n                                    </div>\n                                </div>\n                                \n                                <div className=\"col-12\">\n                                    <button disabled={loader} className=\"btn w-100 mt-3 mt-sm-4\" type=\"button\" onClick={(e) => submit(e)}>Update Profile</button>\n                                </div>\n                            </div> \n                        </form>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n                        }\n}\n\nconst mapStateToProps = state => ({\n    wallet: state.wallet,\n    user: state.user,\n    error: state.error\n});\n\nexport default connect(mapStateToProps, { updateProfile, setIndividualUserData, beforeUser })(Profile);","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/not-found/not-found.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/contact/contact.js",["477"],"import { useEffect, useState } from 'react';\r\n\r\nimport validator from 'validator';\r\nimport { connect } from \"react-redux\";\r\nimport { beforeContact, submitContact } from \"./contact.action\";\r\n\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nconst Contact = (props) => {\r\n\r\n    const [data, setData] = useState({\r\n        name: '',\r\n        email: '',\r\n        subject: '',\r\n        message: ''\r\n    })\r\n\r\n    const [msg, setMsg] = useState({\r\n        name: '',\r\n        email: '',\r\n        subject: '',\r\n        message: ''\r\n    })\r\n\r\n    const [submitCheck, setSubmitCheck] = useState(false)\r\n    const [alertCheck, setAlertCheck] = useState(false)\r\n\r\n    useEffect(() => {\r\n        window.scroll(0, 0)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (props.contact.contactAuth) {\r\n            setAlertCheck(true)\r\n            setTimeout(()=>{\r\n                setAlertCheck(false)\r\n            }, 3000)\r\n            props.beforeContact()\r\n        }\r\n    }, [props.contact.contactAuth])\r\n\r\n    const showAlert = () => {\r\n        if (alertCheck) {\r\n            return (\r\n                <Alert variant=\"success\" onClose={() => setAlertCheck(false)} dismissible>\r\n                    <span>\r\n                        Contact message sent successfully.\r\n                    </span>\r\n                </Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    const formSubmission = (e) => {\r\n        e.preventDefault()\r\n        setSubmitCheck(true)\r\n        if (!validator.isEmpty(data.name) && validator.isEmail(data.email)\r\n            && !validator.isEmpty(data.subject) && !validator.isEmpty(data.message)) {\r\n            let formData = new FormData()\r\n            for (const key in data)\r\n                formData.append(key, data[key])\r\n            props.submitContact(formData)\r\n            setData({ name: '', email: '', subject: '', message: '' })\r\n            setMsg({ name: '', email: '', subject: '', message: '' })\r\n            e.target[0].value = ''\r\n            e.target[1].value = ''\r\n            e.target[2].value = ''\r\n            e.target[3].value = ''\r\n        }\r\n        else {\r\n            let name = ''\r\n            let email = ''\r\n            let subject = ''\r\n            let message = ''\r\n            if (validator.isEmpty(data.name)) {\r\n                name = 'Name Is Required.'\r\n            }\r\n            if (!validator.isEmail(data.email)) {\r\n                email = 'Email Is Required.'\r\n            }\r\n            if (validator.isEmpty(data.subject)) {\r\n                subject = 'Subject Is Required.'\r\n            }\r\n            if (validator.isEmpty(data.message)) {\r\n                message = 'Message Is Required.'\r\n            }\r\n            setMsg({ name, email, subject, message })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span>{\"Contact\"}</span>\r\n                            <h3 className=\"mt-3 mb-0\">{\"Get In Touch\"}</h3>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <form id=\"contact-form\" className=\"item-form card no-hover\" onSubmit={(e) => formSubmission(e)}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    {showAlert()}\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Name\" value={data.name}\r\n                                            id=\"contact-name\"\r\n                                            onChange={(e) => {\r\n                                                setData({ ...data, name: e.target.value });\r\n                                                if (submitCheck) {\r\n                                                    if (e.target.value) {\r\n                                                        setMsg({ ...msg, name: '' })\r\n                                                    }\r\n                                                    else {\r\n                                                        setMsg({ ...msg, name: 'Name Is Required.' })\r\n                                                    }\r\n\r\n                                                }\r\n                                            }\r\n                                            } />\r\n                                        <label className={`text-danger pl-1 ${msg.name ? `` : `d-none`}`}>{msg.name}</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input type=\"text\" className=\"form-control\" name=\"email\" placeholder=\"Email\" value={data.email}\r\n                                            id=\"contact-email\"\r\n                                            onChange={(e) => {\r\n                                                setData({ ...data, email: e.target.value });\r\n                                                if (submitCheck) {\r\n                                                    if (validator.isEmail(e.target.value)) {\r\n                                                        setMsg({ ...msg, email: '' })\r\n                                                    }\r\n                                                    else {\r\n                                                        setMsg({ ...msg, email: 'Email Is Required.' })\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            } />\r\n                                        <label className={`text-danger pl-1 ${msg.email ? `` : `d-none`}`}>{msg.email}</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input type=\"text\" className=\"form-control\" name=\"subject\" placeholder=\"Subject\" value={data.subject}\r\n                                            id=\"contact-subject\"\r\n                                            onChange={(e) => {\r\n                                                setData({ ...data, subject: e.target.value });\r\n                                                if (submitCheck) {\r\n                                                    if (e.target.value) {\r\n                                                        setMsg({ ...msg, subject: '' })\r\n                                                    }\r\n                                                    else {\r\n                                                        setMsg({ ...msg, subject: 'Subject Is Required.' })\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            }\r\n                                        />\r\n                                        <label className={`text-danger pl-1 ${msg.subject ? `` : `d-none`}`}>{msg.subject}</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <textarea className=\"form-control\" name=\"message\" placeholder=\"Message\" cols={30} rows={3} defaultValue={\"\"} value={data.message}\r\n                                            id=\"contact-message\"\r\n                                            onChange={(e) => {\r\n                                                setData({ ...data, message: e.target.value });\r\n                                                if (submitCheck) {\r\n                                                    if (e.target.value) {\r\n                                                        setMsg({ ...msg, message: '' })\r\n                                                    }\r\n                                                    else {\r\n                                                        setMsg({ ...msg, message: 'Message Is Required.' })\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            } />\r\n                                        <label className={`text-danger pl-1 ${msg.message ? `` : `d-none`}`}>{msg.message}</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\"><i className=\"icon-paper-plane mr-2\" />Send Message</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        <p className=\"form-message\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    error: state.error,\r\n    contact: state.contact,\r\n});\r\n\r\nexport default connect(mapStateToProps, { beforeContact, submitContact })(Contact);","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/how-it-works/how-it-works.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/explore/explore-all.js",["478","479","480","481","482","483","484","485","486"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { beforeNFT, getNFTs } from '../nfts/nfts.action';\nimport { ENV } from '../../config/config';\nimport FullPageLoader from '../full-page-loader/full-page-loader'\nimport ExploreItems from './explore-items';\nimport NftCard from '../collections/components/NftCard/NftCard';\nimport { Link, useHistory } from 'react-router-dom';\nimport {getCreators, beforeUser} from './../user/user.action';\n\nconst initData = {\n    pre_heading: \"Explore\",\n    heading: \"Exclusive Digital Assets\",\n    content: \"\",\n    btn_1: \"Load More\"\n}\n\nfunction ExploreAll(props) {\n    const [nftPagination, setNFTPagination] = useState(null);\n    const [nfts, setNFTs] = useState([]); // NFTs for explore section\n    const [loader, setLoader] = useState(true);\n    const [loadMoreBtn, setLoadMoreBtn] = useState(false);\n    const [intro, setIntro] = useState(false);\n    const [creators,setCreator]=useState([])\n    const pathname = useHistory().location.pathname\n\n    useEffect(() => {\n        window.scroll(0, 0)\n\n        // set intro section\n        if (pathname === '/explore-all')\n            setIntro(true)\n      \n        // get NFTs for explore section\n        getNFTs()\n        props.getCreators()\n    }, [])\n  useEffect(()=>{\n      \n    if(props.user.topSellersAuth ){\n    //    console.log(props.user.sellers,\"sellers blah blah blah\");\n       setCreator(props.user.sellers)\n       \n    }\n  },[props.user.topSellersAuth])\n  useEffect(()=>{\n    if(props.user.creatorsAuth ){\n    //    console.log(props.user.creators,\"sellers blah blah blah\");\n       setCreator(props.user.creators)\n       setLoader(false)\n    }\n  },[props.user.creatorsAuth])\n    // set NFTs for explore section\n    useEffect(() => {\n        if (props.nft.nftsAuth) {\n            const { nftsData } = props.nft\n            // console.log(nftsData,\"nftsData==>\")\n            if (nftsData) {\n             \n                // console.log(nftsData,\"checking nfts\" )\n                setNFTs(nftsData)\n                setNFTPagination(nftsData.pagination)\n                props.beforeNFT()\n            \n                // setLoader(false)\n                if (props.setLoader)\n                    props.setLoader(false)\n                    \n            }\n            setLoader(false)\n        }\n    }, [props.nft.nftsAuth])\n\n    // handle show load more button state when pagination is set\n    useEffect(() => {\n        if (nftPagination)\n            setLoadMoreBtn((nftPagination.total > 0 && nftPagination.total > nfts.length && nfts.length > 0))\n    }, [nftPagination])\n\n    const loadMore = () => {\n        const { page, limit } = nftPagination\n        setLoader(true)\n        // get more NFTs for explore section\n        getNFTs(1, limit * (page + 1))\n    }\n\n    const getNFTs = (page = 1, limit = 4) => {\n        const nftQS = { page, limit, explore: true }\n\n        if (props.collectionId)\n            nftQS.collectionId = props.collectionId\n\n        const qs = ENV.objectToQueryString(nftQS)\n        props.getNFTs(qs)\n    }\n\n//     <div className=\"row gx-5 p-4\">\n//     {\n//       nfts && nfts.map((nft)=>{\n//     return (\n\n// <div className=\"col-6 mt-5\" style={{}}>\n\n//   <NftCard nft={nft}/>\n// </div>\n//     )\n//       })\n//     }\n// console.log(nfts,\"checking nfts==>\")\n\n    return (\n        <section className=\"explore-area\" style={{ paddingTop: `${intro ? '150' : '30'}px` }}>\n            {loader && <FullPageLoader />}\n            <div className=\"container\">\n                {\n                    intro &&\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-12 col-md-8 col-lg-7\">\n                            <div className=\"intro text-center mb-4\">\n                                <span>{initData.pre_heading}</span>\n                                <h3 className=\"mt-3 mb-0\">{initData.heading}</h3>\n                                {/* <p>{initData.content}</p> */}\n                            </div>\n                        </div>\n                    </div>\n                }\n                <div className=\"row items gx-4 explore-items\">\n                    {nfts && nfts.length > 0 && creators.length>0 ?\n                        nfts.map((item, idx) => {\n                            return (\n                                <div className=\"col-3 mt-5\" style={{}}>\n\n                               <NftCard nft={item} creators={creators} userId={ENV.getUserKeys('_id')._id}/>\n                                </div>\n                                // <div key={`edth_${idx}`} className={`col-12 col-sm-6 col-lg-${props.lgCols ? props.lgCols : '3'} item explore-item`} data-groups={item.group ? item.group : '[\"art\",\"sports\"]'}>\n                                //     <div className=\"card\">\n                                //         <div className=\"image-over\">\n                                //             <Link to={`/item-details?item=${window.btoa(item._id)}`}>\n                                //                 <img className=\"card-img-top\" src={item.image} alt=\"Item Image\" />\n                                //             </Link>\n                                //         </div>\n                                //         <div className=\"card-caption col-12 p-0\">\n                                //             <div className=\"card-body\">\n                                //                 <Link to={`/item-details?item=${window.btoa(item._id)}`}>\n                                //                     <h5 className=\"mb-0\">{item.name}</h5>\n                                //                 </Link>\n                                //                 <div className=\"seller d-flex align-items-center my-3\">\n                                //                     <span>Owned By</span>\n                                //                     <a href=\"/author\">\n                                //                         <h6 className=\"ml-4 mb-0\">{\"usama asghar\"}</h6>\n                                //                         {/* <h6 className=\"ml-2 mb-0\">{item.owner.username}</h6> */}\n                                //                     </a>\n                                //                 </div>\n                                //                 <div className=\"card-bottom d-flex justify-content-between\">\n                                //                     <span>{item.currentPrice}</span>\n                                //                     <span>{\"0\"} of {\"5\"}</span>\n                                //                 </div>\n                                //                 {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" href=\"/login\"><i className=\"icon-handbag mr-2\" />Place a Bid</a> */}\n                                //             </div>\n                                //         </div>\n                                //     </div>\n                                // </div>\n                            );\n                        })\n                        : <p className=\"text-center\">No Items Found to Exploree</p>\n                    }\n                </div>\n                {\n                    loadMoreBtn &&\n                    <div className=\"row\">\n                        <div className=\"col-12 text-center\">\n                            <a id=\"load-btn\" className=\"btn btn-bordered-white mt-5\" onClick={() => loadMore()}>{initData.btn_1}</a>\n                        </div>\n                    </div>\n                }\n                {/* <ExploreItems class1=\"explore-items\" class2=\"explore-item\" key=\"edth\" /> */}\n            </div>\n        </section>\n    )\n}\n\nconst mapStateToProps = state => ({\n    nft: state.nft,\n    user: state.user,\n});\n\nexport default connect(mapStateToProps, { beforeNFT, getNFTs ,getCreators})(ExploreAll);","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/home/home.reducer.js",["487","488"],"import { BEFORE_HOME, HOME_PAGE_DATA } from '../../redux/types';\n\nconst initialState = {\n    featuredItems: [], // list of featured items\n    featuredItemsAuth: false\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case HOME_PAGE_DATA:\n            return {\n                ...state,\n                featuredItems: true,\n                featuredItems: action.payload\n            }\n        case BEFORE_HOME:\n            return {\n                ...state,\n                featuredItems: [],\n                featuredItemsAuth: false,\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/nfts/sell-nft.js",["489","490","491","492","493","494","495","496"],"import React, {\r\n  useState,\r\n  useEffect,\r\n} from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  beforeNFT,\r\n  getNFT,\r\n  upsertNFT,\r\n} from \"./nfts.action\";\r\nimport FullPageLoader from \"../../components/full-page-loader/full-page-loader\";\r\nimport NFTPreview from \"../nft-preview/nft-preview\";\r\nimport { decimalNumberValidator } from \"../../utils/functions\";\r\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\r\nimport \"bootstrap-daterangepicker/daterangepicker.css\";\r\nimport moment from \"moment\";\r\nimport currencyIcon from \"../../assets/images/binance.svg\";\r\nimport { ENV } from \"../../config/config\";\r\nimport {openNFTForBidding} from '../../utils/web3';\r\nimport {SellOnFixedPrice} from '../../utils/web3'\r\nimport { toast } from \"react-toastify\";\r\nconst {\r\n  currencies,\r\n  dateRangeInitialSettings,\r\n  serviceFee,\r\n} = ENV;\r\n\r\nconst config1 = {\r\n  price: {\r\n    currency: ENV.currency,\r\n    amount: \"\",\r\n  },\r\n  listingSchedule: {\r\n    startDate: moment(),\r\n    endDate: moment().add(6, \"months\"),\r\n    startTime: moment(new Date()).format(\"HH:mm\"),\r\n    endTime: \"23:59\",\r\n  },\r\n  reserveFor: \"\", // if user selects reserve buyer\r\n};\r\nconst config2 = {\r\n  method: 1, // 1 = Sell to the highest bidder or 2 = Sell with the declining price\r\n  startPrice: {\r\n    currency: ENV.currency,\r\n    amount: \"\",\r\n  },\r\n  duration: {\r\n    startDate: moment(),\r\n    endDate: moment().add(6, \"months\"),\r\n    startTime: moment(new Date()).format(\"HH:mm\"),\r\n    endTime: \"23:59\",\r\n  },\r\n  // if user includes reserve price\r\n  reservePrice: {\r\n    currency: ENV.currency,\r\n    amount: \"\",\r\n  },\r\n};\r\n\r\nconst SellNFT = (props) => {\r\n  const [sellingMethod, setSellingMethod] =\r\n    useState(1); // 1 = Fixed Price, 2 = Timed Auction\r\n  const [fixedPriceConfig, setFixedPriceConfig] =\r\n    useState(config1);\r\n  const [\r\n    timedAuctionConfig,\r\n    setTimedAuctionConfig,\r\n  ] = useState(config2);\r\n  const [nft, setNft] = useState(null);\r\n  const [loader, setLoader] = useState(true); // NFT loader\r\n  const [reserveBuyer, setReserveBuyer] =\r\n    useState(false);\r\n  const [reservePrice, setReservePrice] =\r\n    useState(false);\r\n    const [tokensData,setTokensData]=useState([])\r\n\r\n  useEffect(() => {\r\n    window.scroll(0, 0);\r\n    const { itemId } = props.match.params;\r\n    if (itemId) props.getNFT(window.atob(itemId));\r\n    else props.history.push(\"/explore-all\");\r\n    getTokens()\r\n  }, []);\r\n\r\n  // when NFT data is received\r\n  useEffect(() => {\r\n    if (props.nft.nftsAuth) {\r\n      const nft = props.nft.nftsData;\r\n      setNft(nft);\r\n      setLoader(false);\r\n      props.beforeNFT();\r\n    }\r\n  }, [props.nft.nftsAuth]);\r\n\r\n  // when NFT data is updated\r\n  useEffect(() => {\r\n    if (props.nft.upsertAuth) {\r\n      const { nft } = props.nft.nftsData;\r\n      const pathname = nft.sellingMethod === 1 ? '/explore-all' : '/auctions'\r\n      setLoader(false);\r\n      props.beforeNFT();\r\n      props.history.push(pathname);\r\n    }\r\n  }, [props.nft.upsertAuth]);\r\n\r\n  // when an error is received\r\n  useEffect(() => {\r\n    setLoader(false);\r\n  }, [props.error]);\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let data = null;\r\n    if (sellingMethod === 1)\r\n      data = fixedPriceConfig;\r\n    else data = timedAuctionConfig;\r\n\r\n    const keys = name.split(\".\"); // fixedPriceConfig, price, currency\r\n    if (keys && keys[2])\r\n      data[keys[1]][keys[2]] = value;\r\n    else if (keys && keys[1])\r\n      data[keys[1]] = value;\r\n\r\n    if (sellingMethod === 1)\r\n      setFixedPriceConfig({ ...data });\r\n    else setTimedAuctionConfig({ ...data });\r\n  };\r\n\r\n  const handleDateChange = (e, picker) => {\r\n    const { name } = e.target;\r\n    const { startDate, endDate } = picker;\r\n\r\n    // set start date\r\n    onChange({\r\n      target: {\r\n        name: `${name}.startDate`,\r\n        value: startDate,\r\n      },\r\n    });\r\n\r\n    // set end date\r\n    onChange({\r\n      target: {\r\n        name: `${name}.endDate`,\r\n        value: endDate,\r\n      },\r\n    });\r\n  };\r\n\r\n  const submit = () => {\r\n \r\n    const payload = {\r\n      _id: nft._id,\r\n      sellingMethod,\r\n      sellingConfig: JSON.stringify(\r\n        sellingMethod === 1\r\n          ? fixedPriceConfig\r\n          : timedAuctionConfig\r\n      ),\r\n    };\r\n \r\n\r\n    let test=new Date(timedAuctionConfig.duration.endDate).getTime()\r\n    let time=timedAuctionConfig.duration.endTime\r\n\r\nvar r = Number(time.split(':')[0])*60+Number(time.split(':')[1])*1000;\r\n// \r\n  const timeInMiliSeconds=r+test;\r\n \r\n  // console.log('yoken data', tokensData)\r\n  const nftToken=tokensData.data.find((item)=>item?.nftId===nft?._id)\r\n\r\n   if(nftToken){\r\n    sellingMethod==1?SellOnFixedPrice(nftToken?.nftToken,fixedPriceConfig.price.amount):openNFTForBidding(nftToken.nftToken,timeInMiliSeconds)\r\n\r\n    setLoader(true);\r\n\r\n    var formData = new FormData();\r\n    for (const key in payload)\r\n      formData.append(key, payload[key]);\r\n\r\n    props.upsertNFT(\"edit\", formData, \"PUT\");\r\n   }\r\n   else {\r\n    toast.error(\"there was an issue while creating nft, please try later\")\r\n   }\r\n \r\n  };\r\n\r\n\r\n  const getTokens=()=>{\r\n    const url= process.env.REACT_APP_BASE_URL + 'nftTokens/tokens' \r\n  \r\n  fetch(url, {\r\n   method: 'GET',\r\n   headers: {\r\n      'content-type': 'application/json',\r\n      'Authorization': ENV.Authorization,\r\n      'x-auth-token': ENV.x_auth_token,\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\r\n  },\r\n\r\n}).then(res => res.json()).then(data => {\r\n\r\n  setTokensData(data)\r\n\r\n  \r\n}).catch(error => {\r\n  \r\n  console.log(error,\"error in catch blcok\")\r\n  \r\n\r\n})\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"padding-wrapper\">\r\n      {loader && <FullPageLoader />}\r\n      <div\r\n        className=\"\"\r\n        style={{\r\n          maxWidth: \"85%\",\r\n          margin: \"auto\",\r\n        }}\r\n      >\r\n        <div className=\"d-flex\">\r\n          <div className=\"tabs-container\">\r\n            <span className=\"head-wrapper\">\r\n              List of Bundle for Sale\r\n            </span>\r\n            <div className=\"market-tabs-wrapper\">\r\n              <Tab.Container\r\n                id=\"marketplace-tabs\"\r\n                defaultActiveKey=\"fixedPrice\"\r\n              >\r\n                <Row>\r\n                  <Col\r\n                    lg=\"12\"\r\n                    md=\"12\"\r\n                    sm=\"12\"\r\n                    xs=\"12\"\r\n                  >\r\n                    <Nav\r\n                      variant=\"pills\"\r\n                      className=\"flex-row\"\r\n                    >\r\n                      <Nav.Item className=\"nav-item-wrapper\">\r\n                        <div className=\"mb-2\">\r\n                          Type\r\n                        </div>\r\n                        <Nav.Link\r\n                          eventKey=\"fixedPrice\"\r\n                          onClick={() =>\r\n                            setSellingMethod(1)\r\n                          }\r\n                        >\r\n                          <i className=\"fas fa-dollar-sign\" />\r\n                          <div>Fixed Price</div>\r\n                        </Nav.Link>\r\n                      </Nav.Item>\r\n                      <Nav.Item className=\"nav-item-wrapper\">\r\n                        <div className=\"text-right mr-4 mb-2\">\r\n                          <i className=\"fas fa-exclamation-circle ml-2\" />\r\n                        </div>\r\n                        <Nav.Link\r\n                          eventKey=\"timedAuction\"\r\n                          onClick={() =>\r\n                            setSellingMethod(2)\r\n                          }\r\n                        >\r\n                          <i className=\"fas fa-clock\" />\r\n                          <div>Timed Auction</div>\r\n                        </Nav.Link>\r\n                      </Nav.Item>\r\n                    </Nav>\r\n                  </Col>\r\n                </Row>\r\n                <div className=\"market-tab-content\">\r\n                  <Container fluid>\r\n                    <Tab.Content>\r\n                      <Tab.Pane eventKey=\"fixedPrice\">\r\n                        <div className=\"price-wrapper d-flex\">\r\n                          <div className=\"price-text position-relative\">\r\n                            <div className=\"text-white mb-2 absolute-wrapper\">\r\n                              <b>Price</b>\r\n                            </div>\r\n                            <div className=\"text-right mb-2\">\r\n                              <i className=\"fas fa-exclamation-circle ml-2\" />\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"ethereum-btn\"\r\n                              >\r\n                                <svg\r\n                                  viewBox=\"0 0 126.61 126.61\"\r\n                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  fill=\"currentColor\"\r\n                                  height=\"18\"\r\n                                  width=\"18\"\r\n                                >\r\n                                  <g>\r\n                                    <path d=\"m38.73 53.2 24.59-24.58 24.6 24.6 14.3-14.31-38.9-38.91-38.9 38.9z\" />\r\n                                    <path d=\"m0 63.31 14.3-14.31 14.31 14.31-14.31 14.3z\" />\r\n                                    <path d=\"m38.73 73.41 24.59 24.59 24.6-24.6 14.31 14.29-38.9 38.91-38.91-38.88z\" />\r\n                                    <path d=\"m98 63.31 14.3-14.31 14.31 14.3-14.31 14.32z\" />\r\n                                    <path d=\"m77.83 63.3-14.51-14.52-10.73 10.73-1.24 1.23-2.54 2.54 14.51 14.5 14.51-14.47z\" />\r\n                                  </g>\r\n                                </svg>\r\n                                <span className=\"ml-2\">\r\n                                  {ENV.currency}\r\n                                </span>\r\n                              </button>\r\n                              <input\r\n                                type=\"text\"\r\n                                name=\"fixedPriceConfig.price.amount\"\r\n                                placeholder=\"Amount\"\r\n                                className=\"amount-btn ml-3\"\r\n                                style={{\r\n                                  borderRadius:\r\n                                    \"4px\",\r\n                                }}\r\n                                onChange={(e) =>\r\n                                  onChange(e)\r\n                                }\r\n                                onKeyDown={(e) =>\r\n                                  decimalNumberValidator(\r\n                                    e\r\n                                  )\r\n                                }\r\n                                defaultValue={\r\n                                  fixedPriceConfig\r\n                                    .price.amount\r\n                                }\r\n                                required\r\n                              />\r\n                              {/* <div className=\"text-right mb-2 dollar-wrapper\">\r\n                                $ 0.00\r\n                              </div> */}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"price-wrapper d-flex\">\r\n                          <div className=\"price-text\">\r\n                            <div className=\"text-white\">\r\n                              <b>\r\n                                Schedule Listing\r\n                              </b>\r\n                            </div>\r\n                            <div className=\"date-picker\">\r\n                              <DateRangePicker\r\n                                initialSettings={\r\n                                  dateRangeInitialSettings\r\n                                }\r\n                                onApply={\r\n                                  handleDateChange\r\n                                }\r\n                              >\r\n                                <button\r\n                                  name=\"fixedPriceConfig.listingSchedule\"\r\n                                  className=\"calender-btn\"\r\n                                >\r\n\r\n                                  {fixedPriceConfig.listingSchedule.startDate.format(\r\n                                    \"MMMM D, YYYY\"\r\n                                  )}{\" \"}\r\n                                  -{\" \"}\r\n                                  {fixedPriceConfig.listingSchedule.endDate.format(\r\n                                    \"MMMM D, YYYY\"\r\n                                  )}\r\n                                  &nbsp;&nbsp;&nbsp;\r\n                                  <i className=\"fas fa-calendar-week\" />\r\n                                </button>\r\n                              </DateRangePicker>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                              <div className=\"mr-auto my-3 budle-wrapper\">\r\n                                <input\r\n                                  type=\"time\"\r\n                                  name=\"fixedPriceConfig.listingSchedule.startTime\"\r\n                                  placeholder=\"Start Time\"\r\n                                  onChange={(e) =>\r\n                                    onChange(e)\r\n                                  }\r\n                                  defaultValue={\r\n                                    fixedPriceConfig\r\n                                      .listingSchedule\r\n                                      .startTime\r\n                                  }\r\n                                  required\r\n                                />\r\n                              </div>\r\n\r\n                              <div className=\"ml-auto my-3 budle-wrapper\">\r\n                                <input\r\n                                  type=\"time\"\r\n                                  name=\"fixedPriceConfig.listingSchedule.endTime\"\r\n                                  placeholder=\"End Time\"\r\n                                  onChange={(e) =>\r\n                                    onChange(e)\r\n                                  }\r\n                                  defaultValue={\r\n                                    fixedPriceConfig\r\n                                      .listingSchedule\r\n                                      .endTime\r\n                                  }\r\n                                  required\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* <div className=\"price-wrapper d-flex\">\r\n                          <div className=\"price-text\">\r\n                            <div className=\"text-white\">\r\n                              <b>\r\n                                Reserve for\r\n                                specific buyer\r\n                              </b>\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            <label className=\"switch\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                checked={\r\n                                  reserveBuyer\r\n                                }\r\n                                onChange={() =>\r\n                                  setReserveBuyer(\r\n                                    !reserveBuyer\r\n                                  )\r\n                                }\r\n                              />\r\n                              <span className=\"slider round\"></span>\r\n                            </label>\r\n                          </div>\r\n                        </div> */}\r\n                        {reserveBuyer && (\r\n                          <div\r\n                            className=\"mb-3 budle-wrapper\"\r\n                            style={{\r\n                              borderBottom:\r\n                                \"1px solid\",\r\n                              paddingBottom:\r\n                                \"2rem\",\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <input\r\n                                type=\"text\"\r\n                                placeholder=\"0xf45a189...\"\r\n                                required\r\n                                defaultValue={\r\n                                  fixedPriceConfig.reserveFor\r\n                                }\r\n                                onChange={(e) =>\r\n                                  onChange(e)\r\n                                }\r\n                                name=\"fixedPriceConfig.reserveFor\"\r\n                              />\r\n                            </span>\r\n                          </div>\r\n                        )}\r\n                      </Tab.Pane>\r\n                      <Tab.Pane eventKey=\"timedAuction\">\r\n                        <div className=\"form-group\">\r\n                          <label\r\n                            htmlFor=\"method\"\r\n                            className=\"text-white mb-2\"\r\n                          >\r\n                            <b>Method</b>\r\n                          </label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            id=\"timed-auction-method\"\r\n                            name=\"timedAuctionConfig.method\"\r\n                            onChange={(e) =>\r\n                              onChange(e)\r\n                            }\r\n                          >\r\n                            <option value={1}>\r\n                              Sell to the highest\r\n                              bidder\r\n                            </option>\r\n                            {/* <option value={2}>\r\n                              Sell with the\r\n                              declining price\r\n                            </option> */}\r\n                          </select>\r\n                        </div>\r\n\r\n                        <div className=\"price-wrapper d-flex\">\r\n                          <div className=\"price-text position-relative\">\r\n                            <div className=\"text-white mb-2 absolute-wrapper\">\r\n                              <b>\r\n                                Starting Price\r\n                              </b>\r\n                            </div>\r\n                            <div className=\"text-right mb-2\">\r\n                              <i className=\"fas fa-exclamation-circle ml-2\" />\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"ethereum-btn\"\r\n                              >\r\n                                <svg\r\n                                  viewBox=\"0 0 126.61 126.61\"\r\n                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  fill=\"currentColor\"\r\n                                  height=\"18\"\r\n                                  width=\"18\"\r\n                                >\r\n                                  <g>\r\n                                    <path d=\"m38.73 53.2 24.59-24.58 24.6 24.6 14.3-14.31-38.9-38.91-38.9 38.9z\" />\r\n                                    <path d=\"m0 63.31 14.3-14.31 14.31 14.31-14.31 14.3z\" />\r\n                                    <path d=\"m38.73 73.41 24.59 24.59 24.6-24.6 14.31 14.29-38.9 38.91-38.91-38.88z\" />\r\n                                    <path d=\"m98 63.31 14.3-14.31 14.31 14.3-14.31 14.32z\" />\r\n                                    <path d=\"m77.83 63.3-14.51-14.52-10.73 10.73-1.24 1.23-2.54 2.54 14.51 14.5 14.51-14.47z\" />\r\n                                  </g>\r\n                                </svg>\r\n                                <span className=\"ml-2\">\r\n                                  {ENV.currency}\r\n                                </span>\r\n                              </button>\r\n                              <input\r\n                                type=\"text\"\r\n                                name=\"timedAuctionConfig.startPrice.amount\"\r\n                                placeholder=\"Amount\"\r\n                                className=\"amount-btn ml-3\"\r\n                                style={{\r\n                                  borderRadius:\r\n                                    \"4px\",\r\n                                }}\r\n                                onChange={(e) =>\r\n                                  onChange(e)\r\n                                }\r\n                                onKeyDown={(e) =>\r\n                                  decimalNumberValidator(\r\n                                    e\r\n                                  )\r\n                                }\r\n                                defaultValue={\r\n                                  timedAuctionConfig\r\n                                    .startPrice\r\n                                    .amount\r\n                                }\r\n                                required\r\n                              />\r\n                              {/* <div className=\"text-right mb-2 dollar-wrapper\">\r\n                                $ 0.00\r\n                              </div> */}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"price-wrapper d-flex\">\r\n                          <div className=\"price-text\">\r\n                            <div className=\"text-white\">\r\n                              <b>Duration</b>\r\n                            </div>\r\n                            <div className=\"date-picker\">\r\n                              <DateRangePicker\r\n                                initialSettings={\r\n                                  dateRangeInitialSettings\r\n                                }\r\n                                onApply={\r\n                                  handleDateChange\r\n                                }\r\n                              >\r\n                                <button\r\n                                  name=\"timedAuctionConfig.duration\"\r\n                                  className=\"calender-btn\"\r\n                                >\r\n                                  <i className=\"fas fa-calendar-week\" />\r\n                                  &nbsp;&nbsp;&nbsp;\r\n                                  {timedAuctionConfig.duration.startDate.format(\r\n                                    \"MMMM D, YYYY\"\r\n                                  )}{\" \"}\r\n                                  -{\" \"}\r\n                                  {timedAuctionConfig.duration.endDate.format(\r\n                                    \"MMMM D, YYYY\"\r\n                                  )}\r\n                                </button>\r\n                              </DateRangePicker>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                              <div className=\"mr-auto my-3 budle-wrapper\">\r\n                                <input\r\n                                  type=\"time\"\r\n                                  name=\"timedAuctionConfig.duration.startTime\"\r\n                                  placeholder=\"Start Time\"\r\n                                  onChange={(e) =>\r\n                                    onChange(e)\r\n                                  }\r\n                                  defaultValue={\r\n                                    timedAuctionConfig\r\n                                      .duration\r\n                                      .startTime\r\n                                  }\r\n                                  required\r\n                                />\r\n                              </div>\r\n\r\n                              <div className=\"ml-auto my-3 budle-wrapper\">\r\n                                <input\r\n                                  type=\"time\"\r\n                                  name=\"timedAuctionConfig.duration.endTime\"\r\n                                  placeholder=\"End Time\"\r\n                                  onChange={(e) =>\r\n                                    onChange(e)\r\n                                  }\r\n                                  defaultValue={\r\n                                    timedAuctionConfig\r\n                                      .duration\r\n                                      .endTime\r\n                                  }\r\n                                  required\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* <div className=\"reverse-price d-flex\">\r\n                          <div className=\"price-text\">\r\n                            <div className=\"text-white\">\r\n                              <b>\r\n                                Include reserve\r\n                                price\r\n                              </b>\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            <label className=\"switch\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                checked={\r\n                                  reservePrice\r\n                                }\r\n                                onChange={() =>\r\n                                  setReservePrice(\r\n                                    !reservePrice\r\n                                  )\r\n                                }\r\n                              />\r\n                              <span className=\"slider round\"></span>\r\n                            </label>\r\n                          </div>\r\n                        </div> */}\r\n                        {reservePrice && (\r\n                          <div className=\"d-flex\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"ethereum-btn\"\r\n                            >\r\n                              <svg\r\n                                viewBox=\"0 0 126.61 126.61\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                fill=\"currentColor\"\r\n                                height=\"18\"\r\n                                width=\"18\"\r\n                              >\r\n                                <g>\r\n                                  <path d=\"m38.73 53.2 24.59-24.58 24.6 24.6 14.3-14.31-38.9-38.91-38.9 38.9z\" />\r\n                                  <path d=\"m0 63.31 14.3-14.31 14.31 14.31-14.31 14.3z\" />\r\n                                  <path d=\"m38.73 73.41 24.59 24.59 24.6-24.6 14.31 14.29-38.9 38.91-38.91-38.88z\" />\r\n                                  <path d=\"m98 63.31 14.3-14.31 14.31 14.3-14.31 14.32z\" />\r\n                                  <path d=\"m77.83 63.3-14.51-14.52-10.73 10.73-1.24 1.23-2.54 2.54 14.51 14.5 14.51-14.47z\" />\r\n                                </g>\r\n                              </svg>\r\n                              <span className=\"ml-2\">\r\n                                {ENV.currency}\r\n                              </span>\r\n                            </button>\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"timedAuctionConfig.reservePrice.amount\"\r\n                              placeholder=\"Amount\"\r\n                              className=\"amount-btn ml-3\"\r\n                              style={{\r\n                                borderRadius:\r\n                                  \"4px\",\r\n                              }}\r\n                              onChange={(e) =>\r\n                                onChange(e)\r\n                              }\r\n                              onKeyDown={(e) =>\r\n                                decimalNumberValidator(\r\n                                  e\r\n                                )\r\n                              }\r\n                              defaultValue={\r\n                                timedAuctionConfig\r\n                                  .reservePrice\r\n                                  .amount\r\n                              }\r\n                              required\r\n                            />\r\n                            {/* <div className=\"text-right mb-2 dollar-wrapper\">\r\n                              $ 0.00\r\n                            </div> */}\r\n                          </div>\r\n                        )}\r\n                      </Tab.Pane>\r\n                    </Tab.Content>\r\n\r\n                    <div className=\"d-flex justify-content-between my-3 text-white\">\r\n                      <div>\r\n                        <b>Fees</b>\r\n                      </div>\r\n                      <div>\r\n                        <i className=\"fas fa-exclamation-circle\" />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-between text-white mb-4\">\r\n                      <div>Service Fee</div>\r\n                      <div>{serviceFee}%</div>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-between text-white mb-4\">\r\n                      <div>Creator Royalty</div>\r\n                      <div>\r\n                        {nft?.royalty || 0}%\r\n                      </div>\r\n                    </div>\r\n\r\n                    <button\r\n                      className=\"complete-listing-btn p-3\"\r\n                      onClick={() => submit()}\r\n                    >\r\n                      Complete Listing\r\n                    </button>\r\n                  </Container>\r\n                </div>\r\n              </Tab.Container>\r\n            </div>\r\n          </div>\r\n          <div className=\"summary-container\">\r\n            {nft && <NFTPreview {...nft} />}\r\n            {/* IMPORTED NFT PREVIEW SO THIS CODE IS NOT NEEDED ANYMORE */}\r\n            {/* <div className=\"d-flex justify-content-center align-items-center\">\r\n              <img src=\"img/auction_1.jpg\" className=\"img-fluid\" style={{ height: \"250px\", width: \"300px\" }} />\r\n            </div>\r\n            <div className=\"pt-3 pb-3\">\r\n              <div className=\"d-flex justify-content-between text-white pb-2\">\r\n                <div>WannaPanda - PnPIbqI9ZF</div>\r\n                <div>Price</div>\r\n              </div>\r\n              <div className=\"d-flex justify-content-between text-white pb-2\">\r\n                <div>1</div>\r\n                <div><i className=\"fab fa-ethereum\" />0</div>\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  nft: state.nft,\r\n  error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  beforeNFT,\r\n  getNFT,\r\n  upsertNFT,\r\n})(SellNFT);\r\n","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/privacy-&-terms/privacy-&-terms.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/activity/activity.js",["497"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-1/activity\";\r\n\r\nconst Activity = ()  => {\r\n    const [data, setData] = useState({});\r\n    const [tabData_1, setTabData_1] = useState([]);\r\n    const [tabData_2, setTabData_2] = useState([]);\r\n    const [tabData_3, setTabData_3] = useState([]);\r\n    const [filterData, setFilterData] = useState([]);\r\n    \r\n    useEffect(()=>{\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                setData(res.data)\r\n                setTabData_1(res.data.tabData_1)\r\n                setTabData_2(res.data.tabData_2)\r\n                setTabData_3(res.data.tabData_3)\r\n                setFilterData(res.data.filterData)\r\n            })\r\n            \r\n    }, [])\r\n\r\n    return (\r\n        <section className=\"activity-area load-more padding-wrapper\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro mb-4\">\r\n                            <div className=\"intro-content\">\r\n                                <span>{data.preHeading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{data.heading}</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    <div className=\"col-12 col-md-6 col-lg-8\">\r\n                        {/* Netstorm Tab */}\r\n                        <ul className=\"netstorm-tab nav nav-tabs\" id=\"nav-tab\">\r\n                            <li>\r\n                                <a className=\"active\" id=\"nav-home-tab\" data-toggle=\"pill\" href=\"#nav-home\">\r\n                                    <h5 className=\"m-0\">{data.tabTitle_1}</h5>\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a id=\"nav-profile-tab\" data-toggle=\"pill\" href=\"#nav-profile\">\r\n                                    <h5 className=\"m-0\">{data.tabTitle_2}</h5>\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a id=\"nav-contact-tab\" data-toggle=\"pill\" href=\"#nav-contact\">\r\n                                    <h5 className=\"m-0\">{data.tabTitle_3}</h5>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                        {/* Tab Content */}\r\n                        <div className=\"tab-content\" id=\"nav-tabContent\">\r\n                            <div className=\"tab-pane fade show active\" id=\"nav-home\">\r\n                                <ul className=\"list-unstyled\">\r\n                                    {/* Single Tab List */}\r\n                                    {tabData_1.map((item, idx) => {\r\n                                        return (\r\n                                            <li key={`ato_${idx}`} className=\"single-tab-list d-flex align-items-center\">\r\n                                                <a href=\"/item-details\">\r\n                                                    <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                                </a>\r\n                                                {/* Activity Content */}\r\n                                                <div className=\"activity-content ml-4\">\r\n                                                    <a href=\"/item-details\">\r\n                                                        <h5 className=\"mt-0 mb-2\">{item.title}</h5>\r\n                                                    </a>\r\n                                                    <p className=\"m-0\">Bid listed for <strong>{item.price}</strong> {item.time} <br />by <a href=\"/author\">{item.seller}</a></p>\r\n                                                </div>\r\n                                            </li>\r\n                                        );\r\n                                    })}\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"tab-pane fade\" id=\"nav-profile\">\r\n                                <ul className=\"list-unstyled\">\r\n                                    {/* Single Tab List */}\r\n                                    {tabData_2.map((item, idx) => {\r\n                                        return (\r\n                                            <li key={`att_${idx}`} className=\"single-tab-list d-flex align-items-center\">\r\n                                                <a href=\"/item-details\">\r\n                                                    <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                                </a>\r\n                                                {/* Activity Content */}\r\n                                                <div className=\"activity-content ml-4\">\r\n                                                    <a href=\"/item-details\">\r\n                                                        <h5 className=\"mt-0 mb-2\">{item.title}</h5>\r\n                                                    </a>\r\n                                                    <p className=\"m-0\">Bid listed for <strong>{item.price}</strong> {item.time} <br />by <a href=\"/author\">{item.seller}</a></p>\r\n                                                </div>\r\n                                            </li>\r\n                                        );\r\n                                    })}\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"tab-pane fade\" id=\"nav-contact\">\r\n                                <ul className=\"list-unstyled\">\r\n                                    {/* Single Tab List */}\r\n                                    {tabData_3.map((item, idx) => {\r\n                                        return (\r\n                                            <li key={`atth_${idx}`} className=\"single-tab-list d-flex align-items-center\">\r\n                                                <a href=\"/item-details\">\r\n                                                    <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                                </a>\r\n                                                {/* Activity Content */}\r\n                                                <div className=\"activity-content ml-4\">\r\n                                                    <a href=\"/item-details\">\r\n                                                        <h5 className=\"mt-0 mb-2\">{item.title}</h5>\r\n                                                    </a>\r\n                                                    <p className=\"m-0\">Bid listed for <strong>{item.price}</strong> {item.time} <br />by <a href=\"/author\">{item.seller}</a></p>\r\n                                                </div>\r\n                                            </li>\r\n                                        );\r\n                                    })}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6 col-lg-4\">\r\n                        {/* Activity Content */}\r\n                        <div className=\"activity-content mt-5 mt-lg-0\">\r\n                            {/* Single Widget */}\r\n                            <div className=\"single-widget\">\r\n                                {/* Search Widget */}\r\n                                <div className=\"widget-content search-widget\">\r\n                                    <form action=\"#\">\r\n                                        <input type=\"text\" placeholder=\"Enter your keywords\" />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                            {/* Single Widget */}\r\n                            <div className=\"single-widget\">\r\n                                {/* Filter Widget */}\r\n                                <div className=\"widget filter-widget\">\r\n                                    <h4 className=\"title\">{data.widgetTitle}</h4>\r\n                                    {/* Filter Widget Content */}\r\n                                    <div className=\"widget-content\">\r\n                                        {/* Tags Widget Items */}\r\n                                        <div className=\"widget-content filter-widget-items mt-3\">\r\n                                            {filterData.map((item, idx) => {\r\n                                                return (\r\n                                                    <a key={`fd_${idx}`} href=\"#\" className=\"badge tag\">{item.title}</a>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nexport default Activity;\r\n","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/nfts/nfts.reducer.js",["498"],"import { BEFORE_NFT, GET_NFTS, GET_NFT, UPSERT_NFT,NFTALL } from '../../redux/types';\n\nconst initialState = {\n    nftsData: {},\n    nftAll:{},\n    nftsAuth: false,\n    upsertAuth: false\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case UPSERT_NFT:\n            return {\n                ...state,\n                nftsData: action.payload,\n                upsertAuth: true\n            }\n        case GET_NFT:\n            return {\n                ...state,\n                nftsData: action.payload,\n                nftsAuth: true\n            }\n            case NFTALL:\n        \n                return {\n                    ...state,\n                    nftAll: action.payload,\n                }\n            \n        case GET_NFTS:\n            return {\n                ...state,\n                nftsData: action.payload,\n                nftsAuth: true\n            }\n        case BEFORE_NFT:\n            return {\n                ...state,\n                nftsData: {},\n                nftsAuth: false,\n                upsertAuth: false\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/collections/collections.reducer.js",["499"],"import { BEFORE_COLLECTION, GET_COLLECTION, SET_AUTH_STATE, GET_COLLECTIONS, UPSERT_COLLECTION, DELETE_COLLECTION, ALL_COLLECTIONS } from '../../redux/types';\n\nconst initialState = {\n    collection: null,\n    collections: null,\n    allCollections:null,\n    pagination: null,\n    deleteAuth: false,\n    upsertAuth: false,\n    getAuth: false\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_COLLECTION:\n            return {\n                ...state,\n                collection: action.payload.collection,\n                getAuth: true\n            }\n            case ALL_COLLECTIONS:\n                return {\n                    ...state,\n                    collection: action.payload.allCollections,\n                    getAuth: true\n                }\n        case SET_AUTH_STATE:\n            return {\n                ...state,\n                getAuth: false\n            }\n\n        case UPSERT_COLLECTION:\n            return {\n                ...state,\n                collection: action.payload,\n                upsertAuth: true\n            }\n        case DELETE_COLLECTION:\n            return {\n                ...state,\n                collection: action.payload,\n                deleteAuth: true\n            }\n        case GET_COLLECTIONS:\n            return {\n                ...state,\n                collections: action.payload.collections,\n                pagination: action.payload.pagination,\n                getAuth: true\n            }\n        case BEFORE_COLLECTION:\n            return {\n                ...state,\n                collection: null,\n                collections: null,\n                pagination: null,\n                deleteAuth: false,\n                upsertAuth: false,\n                getAuth: false\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/auctions/auctions.reducer.js",["500"],"import { BEFORE_AUCTION, GET_AUCTIONS } from '../../redux/types';\n\nconst initialState = {\n    auctions: null,\n    pagination: null,\n    getAuth: false,\n\n    auctionsData: {},\n    auctionsAuth: false\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_AUCTIONS:\n            return {\n                ...state,\n                auctions: action.payload.auctions,\n                pagination: action.payload.pagination,\n                getAuth: true\n            }\n        case BEFORE_AUCTION:\n            return {\n                ...state,\n                auctionsData: {},\n                auctionsAuth: false\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/wallet/wallet.reducer.js",["501"],"import { BEFORE_WALLET, SET_WALLET, GET_WALLET } from '../../redux/types';\n\nconst initialState = {\n    connectedAddress: '',\n    walletAuth: false,\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_WALLET:\n            return {\n                ...state,\n                connectedAddress: action.payload,\n                walletAuth: true\n            }\n        case GET_WALLET:\n            return {\n                ...state\n            }\n        case BEFORE_WALLET:\n            return {\n                ...state,\n                connectedAddress: '',\n                walletAuth: false,\n                userAuth: false,\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/contact/contact.reducer.js",["502"],"import { BEFORE_CONTACT, CREATE_CONTACT } from '../../redux/types';\n\nconst initialState = {\n    contactAuth: false\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case CREATE_CONTACT:\n            return {\n                ...state,\n                contactAuth: true\n            }\n        case BEFORE_CONTACT:\n            return {\n                ...state,\n                contactAuth: false\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/create-nft/create-nft.js",["503"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport NFTPreview from \"../nft-preview/nft-preview\"\nimport { axiosPostFormData, decimalNumberValidator } from './../../utils/functions'\nimport { createNft } from './../../utils/web3'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport {ENV} from '../../config/config'\nimport $ from 'jquery'\nimport SimpleReactValidator from 'simple-react-validator'\nimport FullPageLoader from '../../components/full-page-loader/full-page-loader';\n// import {ENV} from '../../config/config'\nimport { beforeCollection, getCollections } from '../collections/collections.actions';\nimport {getCurrentAddress} from '../../utils/web3'\nimport {RiArrowDropDownLine} from 'react'\nimport './createNft.css'\nconst placeholderImg = ''\n\nclass CreateNFT extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isSubmitted: false,\n            formValid: true,\n            loader: true,\n            errors: '',\n            nft: {\n                userId:ENV.getUserKeys('_id')._id,\n                nftOwnerId:ENV.getUserKeys('_id')._id,\n                image: '',\n                name: '',\n                description: '',\n                currentPrice: '',\n                royalty: '',\n                size: '',\n                copies: '',\n                collectionId: '',\n                ownerAddress: '',\n                status: 1 // 1 = put on sale, 2 = instant sale price, 3 = unlock purchased\n            },\n            collections: null,\n            allcollections:null\n        }\n        this.validator = new SimpleReactValidator({\n            autoForceUpdate: this,\n            messages: {\n                required: 'This field is required.'  // will override all messages\n            },\n        })\n    }\n\n    componentDidMount = async ()=> {\n        window.scroll(0, 0)\n        this.props.getCollections()\n        let ownerAddress=await getCurrentAddress()\n       \n        let { nft } = this.state\n        nft = { ...nft, ownerAddress: ownerAddress }\n        this.setState({\n            nft\n        })\n    }\n\n    componentDidUpdate() {\n        if (this.props.collection.getAuth) {\n            const { collections } = this.props.collection\n            this.props.beforeCollection()\n            if (!collections) {\n                toast.info('Please add a collection first')\n                return this.props.history.push('/collection/create')\n            }\n            else\n         var myCollections= collections.filter((item)=>item.userId===ENV.getUserKeys('_id')._id)\n                this.setState({\n                    collections:myCollections,\n                    loader: false\n                })\n        }\n    }\n\n    onFileChange(e) {\n        let file = e.target.files[0]\n        let fileId = e.target.id\n        if (file)\n            if (file.type.includes('image')) {\n                let { nft } = this.state\n                nft = { ...nft, [e.target.name]: file }\n                this.setState({\n                    nft\n                }, () => {\n                    if (file) {\n                        var reader = new FileReader()\n\n                        reader.onload = function (e) {\n                            $(`#nft-${fileId}`).attr('src', e.target.result)\n                            $('#nft-image-label').html('File selected')\n                        }\n                        reader.readAsDataURL(file)\n                    }\n                })\n            } else {\n                $(`#nft-${fileId}`).attr('src', placeholderImg)\n                file = {}\n            }\n    }\n\n    onChange(e, status = null) {\n        let { name, value } = e.target\n\n        // if status is provided\n        if (status)\n            value = status\n\n        let { nft } = this.state\n        nft = { ...nft, [name]: value }\n        this.setState({ nft })\n    }\n\n    reset = () => {\n        const nft = {\n            userId:ENV.getUserKeys('_id')._id,\n            image: '',\n            name: '',\n            description: '',\n            currentPrice: '',\n            royalty: '',\n            size: '',\n            copies: '',\n            collectionId: '',\n            ownerAddress:this.state.ownerAddress,\n            status: 1 // 1 = put on sale, 2 = instant sale price, 3 = unlock purchased\n        }\n        this.setState({ nft })\n    }\n    submit = (e) => {\n        \n        e.preventDefault()\n      \n        const { nft } = this.state\n        this.setState({ isSubmitted: true, formValid: this.validator.allValid() && nft.collectionId ? true : false }, () => {\n            const { formValid } = this.state\n            if (formValid) {\n                this.setState({\n                    loader: true,\n                }, async () => {\n                    var formData = new FormData()\n                    for (const key in nft)\n                        if (nft[key])\n                            formData.append(key, nft[key])\n                 \n                    // this.props.createNFT(nft)\n                    const res = await axiosPostFormData('nfts/create', formData, true)\n                    if (res.success) {\n                   \n                        this.reset()\n                        // toast.success(`Success! ${res.message}`)\n                        if(res.nft && res.nft.metaData) {\n                     \n                             await createNft(res.nft.metaData,res.nft._id);\n                             this.setState({\n                                loader:true\n                            })\n                          setTimeout(()=>{\n\n                              this.setState({loader:false});\n                              this.props.history.push('/collections')\n                          },11000)\n                        }\n                    }\n                    else\n                        this.setState({ errors: res.message, loader: false })\n                })\n            } else {\n                this.validator.showMessages()\n                this.setState({\n                    errors: 'Please fill all required fields in valid format.',\n                    formValid: false\n                }, () => {\n                    $('#create-nft').scrollTop(0, 0)\n                })\n            }\n        })\n    }\n\n    render() {\n        const { nft, errors, loader, isSubmitted, collections } = this.state\n               if(!ENV.getUserKeys('_id')._id){\n                toast.error(\"Please login to create NFT\")\n                this.props.history.push('/')\n                   return \" \"\n               }\n               else {\n          \n           return (\n            <section className=\"author-area mt-5\">\n                <br />\n                <br />\n                {loader && <FullPageLoader />}\n                <div className=\"container\">\n                    <div className=\"row justify-content-between\">\n                        <div className=\"col-12 col-md-4\">\n                            <NFTPreview {...nft} />\n                        </div>\n                        <div className=\"col-12 col-md-7\">\n                            <div className=\"mt-5 mt-lg-0 mb-1 mb-lg-1\">\n                                {/* Intro */}\n                                <div className=\"intro\">\n                                    <div className=\"intro-content\">\n                                        <span>Get Started</span>\n                                        <h3 className=\"mt-3 mb-0\">Create Item</h3>\n                                    </div>\n                                </div>\n                                {/* Form Error */}\n                                {\n                                    isSubmitted && errors &&\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <span id=\"create-nft-err\" className=\"form-error-msg text-danger\">{errors}</span>\n                                        </div>\n                                    </div>\n                                }\n                            </div>\n                            {/* Item Form */}\n                            <form id=\"create-nft\" className=\"item-form card no-hover\">\n                                {/* onClick={(e) => this.submit(e)} */}\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <div className=\"input-group form-group\">\n                                            <div className=\"custom-file\">\n                                                <input type=\"file\" className=\"custom-file-input\" id=\"image\" accept=\".png,.jpeg,.jpg\" onChange={(e) => this.onFileChange(e)} name=\"image\" />\n                                                <label id=\"nft-image-label\" className=\"custom-file-label\" htmlFor=\"image\">Choose file *</label>\n                                            </div>\n                                            <span className=\"text-danger\">{this.validator.message('image', nft.image, 'required')}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-12\">\n                                        <div className=\"form-group mt-3\">\n                                            <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Item Name *\" required=\"required\" onChange={(e) => this.onChange(e)} defaultValue={nft.name} />\n                                            <span className=\"text-danger\">{this.validator.message('name', nft.name, 'required')}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-12\">\n                                        <div className=\"form-group\">\n                                            <textarea className=\"form-control\" name=\"description\" placeholder=\"Description *\" cols={30} rows={3} onChange={(e) => this.onChange(e)} defaultValue={nft.description} />\n                                            <span className=\"text-danger\">{this.validator.message('description', nft.description, 'required')}</span>\n                                        </div>\n                                    </div>\n\n\n                                    <div className=\"col-12 col-md-6\">\n                                        <div className=\"form-group\">\n                                            <input type=\"text\" className=\"form-control\" name=\"currentPrice\" placeholder=\"Item Price *\" required=\"required\" onChange={(e) => this.onChange(e)} onKeyDown={(e) => decimalNumberValidator(e)} defaultValue={nft.currentPrice} />\n                                            <span className=\"text-danger\">{this.validator.message('currentPrice', nft.currentPrice, 'required')}</span>\n                                        </div>\n                                    </div> \n                                     <div className=\"col-12 col-md-6\">\n                                        <div className=\"form-group\">\n                                            <input type=\"number\" className=\"form-control\" min=\"0\"  name=\"royalty\" placeholder=\"royality\" required=\"required\" onChange={(e) => this.onChange(e)} defaultValue={nft.royalty} />\n                                            <span className=\"text-danger\">{this.validator.message('royalty', nft.royalty, 'required')}</span>\n                                        </div>\n                                    </div>\n                                    {/* <div className=\"col-12 col-md-12\">\n                                        <div className=\"form-group\">\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Size (1900x1200)\" required=\"required\" name=\"size\" onChange={(e) => this.onChange(e)} defaultValue={nft.size} />\n                                        </div>\n                                    </div> */}\n                                    <div className=\"col-12 col-md-6\">\n                                        <div className=\"form-group\">\n                                            <input type=\"number\" className=\"form-control\" min=\"0\"  name=\"size\" placeholder=\"Size\" required=\"required\" onChange={(e) => this.onChange(e)} defaultValue={nft.size} />\n                                            <span className=\"text-danger\">{this.validator.message('size', nft.size, 'required')}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-12 col-md-6\">\n                                        <div className=\"form-group\">\n                                            <input type=\"number\" className=\"form-control\" min=\"0\" name=\"copies\" placeholder=\"No. of Copies *\" required=\"required\" onKeyDown={(e) => decimalNumberValidator(e)} onChange={(e) => this.onChange(e)} defaultValue={nft.copies} />\n                                            <span className=\"text-danger\">{this.validator.message('copies', nft.copies, 'required')}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-12\">\n                                        <div className=\"form-group select-wrapper\">\n                                            <label htmlFor=\"collection\">Select Collection *</label>\n                                            <select className=\"form-control select-after\" id=\"collection\" name=\"collectionId\" onChange={(e) => this.onChange(e)}>\n                                                <option value=\"\">Select Collection</option>\n                                                {\n                                                    collections && collections.map((collection, index) => {\n                                                        return (\n                                                            <option key={index} value={collection._id}>{collection.name}</option>\n                                                        )\n                                                    })\n                                                }\n                                            </select>\n                                            <span className=\"text-danger\">{this.validator.message('collection', nft.collectionId, 'required')}</span>\n                                        </div>\n                                    </div>\n                                    {/* <div className=\"col-12\">\n                                        <div className=\"form-group mt-3\">\n                                            <div className=\"form-check form-check-inline\">\n                                                <input className=\"form-check-input\" type=\"radio\" name=\"status\" id=\"putOnSale\" defaultValue={1} checked={nft.status === 1 ? true : false} onChange={(e) => this.onChange(e, 1)} />\n                                                <label onChange={(e) => this.onChange(e, 1)} className=\"form-check-label\" htmlFor=\"putOnSale\">Put on Sale</label>\n                                            </div>\n                                            <div className=\"form-check form-check-inline\">\n                                                <input className=\"form-check-input\" type=\"radio\" name=\"status\" id=\"instantSalePrice\" defaultValue={2} checked={nft.status === 2 ? true : false} onChange={(e) => this.onChange(e, 2)} />\n                                                <label onChange={(e) => this.onChange(e, 2)} className=\"form-check-label\" htmlFor=\"instantSalePrice\">Instant Sale Price</label>\n                                            </div>\n                                            <div className=\"form-check form-check-inline\">\n                                                <input className=\"form-check-input\" type=\"radio\" name=\"status\" id=\"unlockPurchased\" defaultValue={3} checked={nft.status === 3 ? true : false} onChange={(e) => this.onChange(e, 3)} />\n                                                <label onChange={(e) => this.onChange(e, 3)} className=\"form-check-label\" htmlFor=\"unlockPurchased\">Unlock Purchased</label>\n                                            </div>\n                                        </div>\n                                    </div> */}\n                                    <div className=\"col-12\">\n                                        <button disabled={loader} className=\"btn w-100 mt-3 mt-sm-4\" type=\"button\" onClick={(e) => this.submit(e)}>Create Item</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        )\n                                }\n    }\n}\n\nconst mapStateToProps = state => (\n    {\n    \n    error: state.error,\n    collection: state.collection\n});\n\nexport default connect(mapStateToProps, { beforeCollection, getCollections })(CreateNFT);","/Users/maryamsaleem/Desktop/ariswap/frontend/src/layouts/layout4/layout4.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/categories/categories.reducer.js",["504"],"import { BEFORE_CATEGORY, GET_CATEGORIES } from '../../redux/types';\n\nconst initialState = {\n    categories: null,\n    getAuth: false\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_CATEGORIES:\n            return {\n                ...state,\n                categories: action.payload,\n                getAuth: true\n            }\n        case BEFORE_CATEGORY:\n            return {\n                ...state,\n                categories: null,\n                getAuth: false\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/faq/faq.reducer.js",["505"],"import { BEFORE_FAQ, GET_FAQS } from '../../redux/types';\n\nconst initialState = {\n    faqs: null,\n    faqsAuth: false\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_FAQS:\n            return {\n                ...state,\n                faqs: action.payload,\n                faqsAuth: true\n            }\n        case BEFORE_FAQ:\n            return {\n                ...state,\n                faqs: null,\n                faqsAuth: false\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/footer/footer.reducer.js",["506"],"import { BEFORE_FOOTER, GET_FOOTER } from '../../redux/types';\n\nconst initialState = {\n    settings: null,\n    settingsAuth: false\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_FOOTER:\n            return{\n                ...state,\n                settings: action.payload,\n                settingsAuth: true\n            }\n        case BEFORE_FOOTER:\n            return {\n                ...state,\n                settings: null,\n                settingAuth: false\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/user/user.reducer.js",["507"],"import { BEFORE_USER, SET_USER, SET_CREATORS, TOP_SELLERS, SET_INDIVIDUAL_USER, GET_USER } from '../../redux/types';\n\nconst initialState = {\n    userData: null,\n    userAuth: false,\n    creatorsAuth: false,\n    topSellersAuth: false,\n    individualUserAuth: false\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_USER:\n            return {\n                ...state,\n                userData: action.payload,\n                userAuth: true\n            }\n        case GET_USER:\n            return {\n                ...state\n            }\n        case SET_CREATORS:\n            return {\n                ...state,\n                creators: action.payload,\n                creatorsAuth: true\n            }\n        case TOP_SELLERS:\n            return {\n                ...state,\n                sellers: action.payload,\n                topSellersAuth: true\n            }\n        case SET_INDIVIDUAL_USER:\n            return {\n                ...state,\n                individualUser: action.payload,\n                individualUserAuth: true\n            }\n        case BEFORE_USER:\n            return {\n                ...state,\n                userData: null,\n                userAuth: false,\n                creatorsAuth: false,\n                topSellersAuth: false,\n                individualUserAuth: false,\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/bids/bids.reducer.js",["508"],"import { BEFORE_BID, GET_BIDS, CREATE_BID, DELETE_BID, ACCEPT_BID } from '../../redux/types';\n\nconst initialState = {\n    bid: null,\n    bids: null,\n    pagination: null,\n    highestBidAmt: null,\n    deleteAuth: false,\n    createAuth: false,\n    getAuth: false,\n    acceptAuth: false\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_BIDS:\n            return {\n                ...state,\n                bids: action.payload.bids,\n                pagination: action.payload.pagination,\n                highestBidAmt: action.payload.highestBidAmt,\n                getAuth: true\n            }\n        case CREATE_BID:\n            return {\n                ...state,\n                bid: action.payload,\n                createAuth: true\n            }\n        case ACCEPT_BID:\n            return {\n                ...state,\n                bid: action.payload,\n                acceptAuth: true\n            }\n        case DELETE_BID:\n            return {\n                ...state,\n                bid: action.payload,\n                deleteAuth: true\n            }\n        case BEFORE_BID:\n            return {\n                ...state,\n                bid: null,\n                bids: null,\n                pagination: null,\n                highestBidAmt: null,\n                deleteAuth: false,\n                createAuth: false,\n                getAuth: false,\n                acceptAuth: false\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/offers/offers.reducer.js",["509"],"import { BEFORE_OFFER, GET_OFFERS, CREATE_OFFER, DELETE_OFFER, ACCEPT_OFFER } from '../../redux/types';\n\nconst initialState = {\n    offer: null,\n    offers: null,\n    pagination: null,\n    deleteAuth: false,\n    createAuth: false,\n    getAuth: false,\n    acceptAuth: false\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_OFFERS:\n            return {\n                ...state,\n                offers: action.payload.offers,\n                pagination: action.payload.pagination,\n                getAuth: true\n            }\n        case CREATE_OFFER:\n            return {\n                ...state,\n                offer: action.payload,\n                createAuth: true\n            }\n        case ACCEPT_OFFER:\n            return {\n                ...state,\n                offer: action.payload,\n                acceptAuth: true\n            }\n        case DELETE_OFFER:\n            return {\n                ...state,\n                offer: action.payload,\n                deleteAuth: true\n            }\n        case BEFORE_OFFER:\n            return {\n                ...state,\n                offer: null,\n                offers: null,\n                pagination: null,\n                deleteAuth: false,\n                createAuth: false,\n                getAuth: false,\n                acceptAuth: false\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}","/Users/maryamsaleem/Desktop/ariswap/frontend/src/redux/shared/error/error.reducer.js",["510"],"import { GET_ERRORS, EMPTY_ERRORS } from './../../types';\n\nconst initialState = null;\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        case EMPTY_ERRORS:\n            return initialState;\n        default:\n            return state;\n    }\n}","/Users/maryamsaleem/Desktop/ariswap/frontend/src/layouts/layout1/layout1.jsx",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/layouts/layout2/layout2.jsx",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/layouts/layout3/layout3.jsx",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/auctions/home-auctions.js",["511","512","513","514","515","516","517","518","519","520"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { beforeAuction, getLiveAuctions } from \"./auctions.action\";\r\nimport FullPageLoader from \"../full-page-loader/full-page-loader\";\r\nimport { ENV } from \"../../config/config\";\r\nimport \"slick-carousel\";\r\nimport \"../../assets/slick/slick.min.css\";\r\nimport \"../../assets/slick/slick-theme.min.css\";\r\nimport $ from \"jquery\";\r\nimport moment from \"moment\";\r\nimport Countdown from \"react-countdown\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, {\r\n  Navigation,\r\n  Pagination,\r\n  Autoplay,\r\n  Virtual\r\n} from \"swiper/core\";\r\nimport \"swiper/swiper-bundle.css\";\r\nimport './auction.css'\r\nimport { useTimer } from 'react-timer-hook';\r\nimport {getCreators, beforeUser} from './../user/user.action';\r\nimport image from '../../assets/images/placeholder.png'\r\nSwiperCore.use([Navigation, Pagination, Autoplay, Virtual]);\r\n// Swiper.use([Navigation, Pagination]);\r\nconst { globalPlaceholderImage, countDownRenderer } = ENV;\r\nconst initData = {\r\n  pre_heading: \"Auctions\",\r\n  heading: \"Live Auctions\",\r\n  btnText: \"View All\",\r\n};\r\nfunction AuctionsOne(props) {\r\n  const [auctions, setAuctions] = useState(null);\r\n  const [loader, setLoader] = useState(false); // auctions loader\r\n  const [creators,setCreator]=useState([])\r\n  useEffect(() => {\r\n    window.scroll(0, 0);\r\n    // get live auctions\r\n    const qs = ENV.objectToQueryString({ all: true });\r\n    props.getLiveAuctions(qs);\r\n    props.getCreators()\r\n  }, []);\r\n  useEffect(()=>{\r\n    // console.log('auth', props.user.topSellersAuth)\r\n    if(props.user.topSellersAuth ){\r\n       setCreator(props.user.sellers)\r\n       setLoader(false);\r\n    }\r\n  },[props.user.topSellersAuth])\r\n  // set live auctions\r\n  useEffect(() => {\r\n    // if (props.auction.getAuth) {\r\n      const { auctions, pagination } = props.auction;\r\n      if (auctions) {\r\n        setAuctions(auctions);\r\n        props.beforeAuction();\r\n      }\r\n    // }\r\n  }, [props.auction.getAuth]);\r\n  // ready slides when auctions data is received\r\n  useEffect(() => {\r\n    if (auctions && auctions.length) {\r\n      $(\".swiper-wrapper\").slick(ENV.slickSettings);\r\n    }\r\n  }, [auctions]);\r\nconst filterCreator=(nft,field)=>{\r\n  // console.log('creators', creators)\r\n  // console.log('nft owner', nft)\r\n  const result= creators.find((item)=>item._id===nft.nftOwnerId)\r\n  // console.log('reuslt',result\r\n  if(result){\r\n    if(field===\"userName\"){\r\n     if(result?.username){\r\n         return result?.username\r\n     }\r\n     else {\r\n         return \"no username found\"\r\n     }\r\n    }\r\n    else if(field==\"profileImage\"){\r\n        if(result.profileImage)\r\n        {\r\n            return result?.profileImage\r\n        }\r\n        else {\r\n            return image\r\n        }\r\n    }\r\n  }\r\n }\r\n  return (\r\n    <section className=\"live-auctions-area\">\r\n      {loader ? (\r\n        <FullPageLoader />\r\n      ) : (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              {/* Intro */}\r\n              <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                <div className=\"intro-content\">\r\n                  <span>{initData.pre_heading}</span>\r\n                  <h3 className=\"mt-3 mb-0\">{initData.heading}</h3>\r\n                </div>\r\n                {auctions && auctions.length > 0 && (\r\n                  <div className=\"intro-btn\">\r\n                    <Link className=\"btn content-btn\" to=\"/auctions\">\r\n                      {initData.btnText}\r\n                    </Link>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* //replace arraySample to auctions */}\r\n          {auctions && auctions.length > 0 ? (\r\n            <div className=\"auctions-slides\">\r\n              <div className=\"\">\r\n                {/* <div className=\"swiper-wrapper row\"> */}\r\n                  <Swiper\r\n                    id=\"swiper\"\r\n                    modules={[Navigation, Pagination, Autoplay, Virtual]}\r\n                    virtual\r\n                  spaceBetween={50}\r\n                  slidesPerView={3}\r\n                  onSlideChange={() => console.log('')}\r\n                  onSwiper={(swiper) => console.log(swiper)}\r\n                  pagination={{clickable: true}}\r\n                  scrollbar={{draggable: true}}\r\n                >\r\n                  {auctions.map((item, idx) => {\r\n                    return (\r\n                      <>\r\n                    <SwiperSlide>\r\n                      <div key={`auc_${idx}`} className=\"swiper-slide item\" id={`#auc-${idx}`}>\r\n                        <div className=\"card m-3 \">\r\n                          <div className=\"image-over\">\r\n                            <Link to={`/item-details?item=${window.btoa(item._id)}`}>\r\n                              <img\r\n                                className=\"card-img-top\"\r\n                                src={item.image}\r\n                                // src=\"https://gateway.ipfs.io/ipfs/QmR8ye93PSLCQXppDUwtBChXNXavCj1HbFCs2DDac5KRnQ\"\r\n                                alt=\"NFT image\"\r\n                                width=\"600\"\r\n                                height=\"600\"\r\n                                style={{borderRadius:\"none\"}}\r\n                              />\r\n                            </Link>\r\n                          </div>\r\n                          <div className=\"card-caption col-12 p-0\">\r\n                            <div className=\"card-body\">\r\n                              <div className=\"mb-3\">\r\n                                <Countdown\r\n                                  date={new Date(item.auctionEndDate) + 10000}\r\n                                  renderer={countDownRenderer}\r\n                                />\r\n                              </div>\r\n                              <Link to={`/item-details?item=${window.btoa(item._id)}`}>\r\n                                <h5 className=\"mb-0\">{item.name}</h5>\r\n                              </Link>\r\n                              <Link\r\n                                className=\"seller d-flex align-items-center my-3\"\r\n                                to={`/author`}\r\n                              >\r\n                                <img\r\n                                  className=\"avatar-sm rounded-circle\"\r\n                                  // src={\"https://gateway.ipfs.io/ipfs/QmR8ye93PSLCQXppDUwtBChXNXavCj1HbFCs2DDac5KRnQ\"}\r\n                                  src={filterCreator(item,\"profileImage\")}\r\n                                  alt=\"User Avatar\"\r\n                                />\r\n                                <span className=\"ml-2\">{filterCreator(item,\"userName\")}</span>\r\n                              </Link>\r\n                              <div className=\"card-bottom d-flex justify-content-between\">\r\n                                <span>{item.currentPrice}  {ENV.currency}</span>\r\n                                <span>\r\n                               {item.sold} of {item.copies}\r\n                      {/* {       \"o of 4\"} */}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      </SwiperSlide>\r\n                      </>\r\n                    );\r\n                  })}\r\n                  </Swiper>\r\n                </div>\r\n              </div>\r\n          ) : (\r\n            <p className=\"text-center ml-3\">No Live Auctions Found</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  auction: state.auction,\r\n  user: state.user,\r\n});\r\nexport default connect(mapStateToProps, { beforeAuction, getLiveAuctions ,getCreators})(AuctionsOne);","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/collections/popular-collections.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/explore/explore-home.js",["521","522","523","524","525","526"],"import React, { useState } from 'react';\nimport ExploreItems from './explore-items';\nimport { Link } from 'react-router-dom';\n\nconst initData = {\n    pre_heading: \"Exclusive Assets\",\n    heading: \"Explore\",\n    btn_1: \"View All\",\n}\n\nfunction ExploreHome() {\n    const [viewAll, setViewAll] = useState(false);\n\n    const getViewAll = (view) => {\n        setViewAll(view)\n    }\nconst nfts=[\n  1,2,3,4,5,6\n]\n    return (\n        <section className=\"explore-area load-more p-0\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    {/* <div className=\"col-12\">\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\n                            <div className=\"intro-content\">\n                                <span>{initData.pre_heading}</span>\n                                <h3 className=\"mt-3 mb-0\">{initData.heading}</h3>\n                            </div>\n                            {\n                                viewAll &&\n                                <div className=\"intro-btn\">\n                                    <Link className=\"btn content-btn\" to=\"/explore-all\">{initData.btn_1}</Link>\n                                </div>\n                            }\n                        </div>\n                    </div> */}\n                </div>\n                {/* <ExploreItems key=\"exo\" setView={true} setViewAll={getViewAll} loadMoreBtn nfts={nfts}/> */}\n            </div>\n        </section>\n    );\n}\n\nexport default ExploreHome;","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/auctions/auctions.action.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/collections/collection-preview.js",["527","528"],"import React from 'react';\nimport { ENV } from '../../config/config';\nimport { Link } from 'react-router-dom';\nconst { collectionFeaturedImg, userDefaultImg, categoryDefaultImg } = ENV\n\nconst CollectionPreview = ({ collection }) => {\n    return (\n        <>\n            <div className=\"card no-hover text-center \">\n                <div className=\"image-over\">\n                    <div>\n                        <img className=\"card-img-top\" src={collection.featuredImg ? collection.featuredImg : collectionFeaturedImg} alt=\"Collection Featured Image\" />\n                    </div>\n                    <div className=\"seller\">\n                        <div className=\"seller-thumb avatar-lg\">\n                            <img className=\"rounded-circle\" src={collection.logo} alt='Collection Logo' />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"card-caption col-12 p-0\">\n                    <div className=\"card-body mt-4\">\n                        <div>\n                            <h5 className=\"mb-2\">{collection.name}</h5>\n                            <p className=\"mb-2\">\n                                {\n                                    collection.url ?\n                                        <div className=\"input-group\">\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Collection URL\" readOnly value={collection.url} />\n                                            <div className=\"input-group-append\" style={{ zIndex: 888 }}>\n                                                <button className=\"btn mr-0\"><i className=\"icon-docs\" /></button>\n                                            </div>\n                                        </div>\n                                        : ('URL: N/A')\n                                }\n                            </p>\n                            <p className=\"mb-2\">{collection.description ? collection.description : 'Description: N/A'}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row items\">\n                <div className=\"col-12 px-0 mt-3\">\n                    <div className=\"card no-hover\">\n                        <div className=\"single-seller d-flex align-items-center\">\n                            <img className=\"avatar-md rounded-circle\" src={collection.category?.image || categoryDefaultImg} alt=\"Category Image\" />\n                            <div className=\"seller-info ml-3\">\n                                <div className=\"seller\">{collection.category?.name || 'N/A'}</div>\n                                <span>Category</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"col-12 px-0 my-3\">\n                    <div className=\"card no-hover\">\n                        <div className=\"single-seller d-flex align-items-center\">\n                            <Link to=\"/author\">\n                                <img className=\"avatar-md rounded-circle\" src={collection.user?.profilePhoto || userDefaultImg} alt=\"User Avatar\" />\n                            </Link>\n                            <div className=\"seller-info ml-3\">\n                                <Link className=\"seller mb-2\" to=\"/author\">{collection.user?.username}</Link>\n                                <span>Creator</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default CollectionPreview;","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/categories/categories.action.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/collections/collections.js",["529","530","531"],"import React, { useState, useEffect, forwardRef, useImperativeHandle } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { ENV } from '../../config/config';\r\nimport { beforeCollection, getCollections } from './collections.actions';\r\nconst { collectionFeaturedImg, userDefaultImg } = ENV\r\n\r\nconst Collections = forwardRef((props, ref) => {\r\n    const [collections, setCollections] = useState(null)\r\n    const [source, setSource] = useState(1) // 1 for my collections, 2 for popular collections\r\n\r\n    useEffect(() => {\r\n        window.scroll(0, 0)\r\n        if (props.source)\r\n            setSource(props.source)\r\n\r\n        if (props.setLoader)\r\n            props.setLoader(false) //to be changed\r\n\r\n        getCollections()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (props.collection.getAuth) {\r\n            const { collections } = props.collection;\r\n            const userId = ENV.getUserKeys('_id')._id;\r\n            if(props.mycollections){\r\n\r\n                let myCollections=   collections.filter((item)=>item.userId===userId)\r\n                 setCollections(myCollections)\r\n            }else {\r\n                setCollections(collections)\r\n            }\r\n            props.beforeCollection()\r\n            if (props.setLoader)\r\n                props.setLoader(false)\r\n        }\r\n    }, [props.collection.getAuth])\r\n\r\n    const getCollections = (categoryId = null) => {\r\n        const filter = {\r\n            page: 1,\r\n        }\r\n        if (categoryId)\r\n            filter.categoryId = categoryId\r\n\r\n        if (props.userId)\r\n            filter.userId = props.userId\r\n\r\n        if (props.popular)\r\n            filter.popular = true\r\n\r\n        // if not all then apply limit \r\n        if (!props.all)\r\n            filter.limit = props.limit ? props.limit : 8\r\n        else\r\n            filter.all = true\r\n\r\n        const qs = ENV.objectToQueryString(filter)\r\n        props.getCollections(qs)\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        getCatCollections: (catId) => {\r\n            if (props.setLoader)\r\n                props.setLoader(true)\r\n\r\n            getCollections(catId)\r\n        },\r\n        colCount: collections?.length || 0\r\n    }))\r\n\r\n    return (\r\n        <div className=\"popular-collections-area\">\r\n            <div className=\"container\">\r\n                <div className={`row items ${!collections && 'justify-content-center'}`}>\r\n                    <>\r\n                        {\r\n                            collections && collections.length ?\r\n                                collections.map((item, idx) => {\r\n                                    return (\r\n                                        <div key={`cd_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                            <div className=\"card no-hover text-center\">\r\n                                                <div className=\"image-over\">\r\n                                                    <Link to={`/collection-details/${window.btoa(item._id)}`}>\r\n                                                        <img className=\"card-img-top\" src={item.featuredImg ? item.featuredImg : collectionFeaturedImg} alt=\"Collection Featured Image\" />\r\n                                                    </Link>\r\n                                                    <Link className=\"seller\" to={source === 1 ? `/collection-details/${window.btoa(item._id)}` : `/author/${item.user._id}`}>\r\n                                                        <div className=\"seller-thumb avatar-lg\">\r\n                                                            <img className=\"rounded-circle\" src={source === 1 ? item.logo : (item.user.profilePhoto ? item.user.profilePhoto : userDefaultImg)} alt={source === 1 ? 'Collection Logo' : 'User Avatar'} />\r\n                                                        </div>\r\n                                                    </Link>\r\n                                                </div>\r\n                                                <div className=\"card-caption col-12 p-0\">\r\n                                                    <div className=\"card-body mt-4\">\r\n                                                        <Link to={`/collection-details/${window.btoa(item._id)}`}>\r\n                                                            <h5 className=\"mb-2\">{item.name}</h5>\r\n                                                        </Link>\r\n                                                        <span>{item.category ? item.category.name : 'Category: N/A'}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                                :\r\n                                <div className=\"col-12\"><p className=\"text-center mt-4\">No Collection Found</p></div>\r\n                        }\r\n                    </>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nconst mapStateToProps = state => ({\r\n    collection: state.collection,\r\n    error: state.error\r\n});\r\n\r\nexport default connect(mapStateToProps, { beforeCollection, getCollections }, null, { forwardRef: true })(Collections)","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/user/user.action.js",["532"],"import { toast } from 'react-toastify';\nimport { ENV } from './../../config/config';\nimport { GET_ERRORS, SET_USER, GET_USER, SET_CREATORS, TOP_SELLERS, SET_INDIVIDUAL_USER, BEFORE_USER } from '../../redux/types';\nimport { emptyError } from '../../redux/shared/error/error.action';\nimport { getCollections, setAuthState } from '../collections/collections.actions';\n\nexport const beforeUser = () => {\n    return {\n        type: BEFORE_USER\n    }\n}\n\n// method to set user data\nexport const setUser = (user) => dispatch => {\n    dispatch(emptyError())\n    dispatch({\n        type: SET_USER,\n        payload: user\n    })\n}\n\n// method to get user data\nexport const getUser = () => dispatch => {\n    dispatch({\n        type: GET_USER\n    })\n}\n\n// method to login using wallet address and sign\nexport const login = (payload) => dispatch => {\n    dispatch(emptyError());\n    const url = `${ENV.url}auth/login/`;\n    // const url = `http://localhost:5000/v1/front/auth/login/`;\n    fetch(url, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n            'Authorization': ENV.Authorization,\n            'Access-Control-Allow-Origin': '*',\n            'x-auth-token': ENV.x_auth_token\n        },\n        body: JSON.stringify(payload)\n    }).then(res => res.json()).then(data => {\n        if (data.status) {\n            ENV.encryptUserData(data.data);\n            const userId = data.data._id;\n            dispatch(getCollections());\n            dispatch({\n                type: SET_USER,\n                payload: data.data\n            })\n        } else {\n            dispatch({\n                type: GET_ERRORS,\n                payload: data\n            })\n        }\n    }).catch(errors => {\n        dispatch({\n            type: GET_ERRORS,\n            payload: errors\n        })\n    })\n};\n\n// method to signup using wallet address, sign, and payload\nexport const signup = (payload) => dispatch => {\n    dispatch(emptyError());\n    const url = `${ENV.url}auth/register/`;\n    fetch(url, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n            'Authorization': ENV.Authorization,\n            'Access-Control-Allow-Origin': '*',\n            'x-auth-token': ENV.x_auth_token\n        },\n        body: JSON.stringify(payload)\n    }).then(res => res.json()).then(data => {\n        if (data.status) {\n            ENV.encryptUserData(data.data);\n            dispatch(getCollections());\n            dispatch({\n                type: SET_USER,\n                payload: data.data\n            })\n        } else {\n            dispatch({\n                type: GET_ERRORS,\n                payload: data\n            })\n        }\n    }).catch(errors => {\n        dispatch({\n            type: GET_ERRORS,\n            payload: errors\n        })\n    })\n};\n\n// method to update user's profile, update user's payload\nexport const updateProfile = (body) => dispatch => {\n    dispatch(emptyError());\n    const url = `${ENV.url}users/`;\n    fetch(url, {\n        method: 'PUT',\n        headers: {\n            'Authorization': ENV.Authorization,\n            'x-auth-token': ENV.x_auth_token,\n            'Access-Control-Allow-Origin': '*',\n            'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n        },\n        body\n    }).then(res => res.json()).then(data => {\n        if (data.status) {\n            ENV.encryptUserData(data.data);\n            dispatch({\n                type: SET_USER,\n                payload: data.data\n            })\n            toast.success(data.message)\n        } else {\n            dispatch({\n                type: GET_ERRORS,\n                payload: data\n            })\n        }\n    }).catch(errors => {\n        dispatch({\n            type: GET_ERRORS,\n            payload: errors\n        })\n    })\n};\n\n// method to get authors' details\nexport const getTopSellers = (body) => dispatch => {\n    dispatch(emptyError());\n    const url = `${ENV.url}users/top-sellers`;\n    // const url = `http://3.142.91.8/v1/front/users/top-sellers`;\n    // console.log(url,\"testing url in top sellers\")\n    fetch(url, {\n        method: 'POST',\n        headers: {\n            'Authorization': ENV.Authorization,\n            'x-auth-token': ENV.x_auth_token,\n            'Access-Control-Allow-Origin': '*',\n            'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n        },\n        body\n    }).then(res => res.json()).then(data => {\n        // console.log(\"data====>\",data);\n        if (data.status) {\n            dispatch({\n                type: TOP_SELLERS,\n                payload: data.data\n            })\n        } else {\n            dispatch({\n                type: GET_ERRORS,\n                payload: data\n            })\n        }\n    }).catch(errors => {\n        // console.log(\"errors===>\");\n        dispatch({\n            type: GET_ERRORS,\n            payload: errors\n        })\n    })\n};\n\n// method to get authors' details\nexport const getCreators = (body) => dispatch => {\n    dispatch(emptyError());\n    const url = `${ENV.url}users/creators`;\n    // const url = `http://3.142.91.8/v1/front/users/creators`;\n\n    \n    fetch(url, {\n        method: 'POST',\n        headers: {\n            'Authorization': ENV.Authorization,\n            'x-auth-token': ENV.x_auth_token,\n            'Access-Control-Allow-Origin': '*',\n            'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n        },\n        body\n    }).then(res => res.json()).then(data => {\n        // console.log(data,\"creators data===>}}}\");\n        if (data.status) {\n            dispatch({\n                type: SET_CREATORS,\n                payload: data.data\n            })\n        } else {\n            dispatch({\n                type: GET_ERRORS,\n                payload: data\n            })\n        }\n    }).catch(errors => {\n        dispatch({\n            type: GET_ERRORS,\n            payload: errors\n        })\n    })\n};\n\n// method to get authors' details\nexport const getUserById = (userId) => dispatch => {\n    dispatch(emptyError());\n    const url = `${ENV.url}users/${userId}`;\n    fetch(url, {\n        method: 'GET',\n        headers: {\n            'Authorization': ENV.Authorization,\n            'x-auth-token': ENV.x_auth_token,\n            'Access-Control-Allow-Origin': '*',\n            'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n        }\n    }).then(res => res.json()).then(data => {\n        if (data.status) {\n            dispatch({\n                type: SET_INDIVIDUAL_USER,\n                payload: data.data\n            })\n        } else {\n            dispatch({\n                type: GET_ERRORS,\n                payload: data\n            })\n        }\n    }).catch(errors => {\n        dispatch({\n            type: GET_ERRORS,\n            payload: errors\n        })\n    })\n};\n\n// method to get authors' details\nexport const setIndividualUserData = (user) => dispatch => {\n    dispatch(emptyError());\n    dispatch({\n        type: SET_INDIVIDUAL_USER,\n        payload: user\n    })\n};\n\nexport const logoutUser = () => (dispatch) => {\n    dispatch({\n        type: SET_USER,\n        userAuth: false,\n        userData: null\n    })\n    dispatch(setAuthState())\n    localStorage.removeItem('encuse');\n}","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/collections/collections.actions.js",["533"],"import { toast } from 'react-toastify';\nimport { GET_ERRORS, BEFORE_COLLECTION, SET_AUTH_STATE, GET_COLLECTION, GET_COLLECTIONS, UPSERT_COLLECTION, DELETE_COLLECTION, ALL_COLLECTIONS } from '../../redux/types';\nimport { emptyError } from '../../redux/shared/error/error.action';\nimport { ENV } from './../../config/config';\n\nexport const beforeCollection = () => {\n    return {\n        type: BEFORE_COLLECTION\n    }\n}\n\nexport const getCollection = (collectionId) => dispatch => {\n    dispatch(emptyError());\n    const url = `${ENV.url}collection/get/${collectionId}`;\n \n    fetch(url, {\n        method: 'GET',\n        headers: {\n            'content-type': 'application/json',\n            'Authorization': ENV.Authorization,\n            'x-auth-token': ENV.x_auth_token,\n            'Access-Control-Allow-Origin': '*',\n            'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n        }\n    }).then(res => res.json()).then(data => {\n        if (data.success) {\n            dispatch({\n                type: GET_COLLECTION,\n                payload: data\n            })\n        } else {\n            toast.error(data.message)\n            dispatch({\n                type: GET_ERRORS,\n                payload: data\n            })\n        }\n    }).catch(error => {\n        if (error.response && error.response.data) {\n            const { data } = error.response\n            if (data.message)\n                toast.error(data.message)\n        }\n        dispatch({\n            type: GET_ERRORS,\n            payload: error\n        })\n    })\n};\n\nexport const getCollections = (qs = null) => dispatch => {\n    dispatch(emptyError());\n    // let url = `http://3.142.91.8/v1/front/collection/list`;\n    let url = `${ENV.url}collection/list`;\n\n    if (qs)\n        url += `?${qs}`\n\n    fetch(url, {\n        method: 'GET',\n        headers: {\n            'content-type': 'application/json',\n            'Authorization': ENV.Authorization,\n            'x-auth-token': ENV.x_auth_token,\n            'Access-Control-Allow-Origin': '*',\n            'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n        }\n    }).then(res => res.json()).then(data => {\n      \n        if (data.success) {\n            dispatch({\n                type: GET_COLLECTIONS,\n                payload: data.data\n            })\n         \n        } else {\n            toast.error(data.message)\n            dispatch({\n                type: GET_ERRORS,\n                payload: data\n            })\n        }\n    }).catch(error => {\n        // console.log(error,\"all collections error\");\n        if (error.response && error.response.data) {\n            const { data } = error.response\n            if (data.message)\n                toast.error(data.message)\n        }\n        dispatch({\n            type: GET_ERRORS,\n            payload: error\n        })\n    })\n};\n\nexport const upsertCollection = (apiURL, body, method = 'POST') => dispatch => {\n\n    dispatch(emptyError());\n    const url = `${ENV.url}${apiURL}`;\n   \n    // const url = `http://localhost:5000/v1/front/${apiURL}`;\n\n\n    fetch(url, {\n        method,\n        headers: {\n            'Authorization': ENV.Authorization,\n            'x-auth-token': ENV.x_auth_token,\n            'Access-Control-Allow-Origin': '*',\n            'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n        },\n        body\n    }).then(res => res.json()).then(data => {\n        if (data.success) {\n            toast.success(data.message)\n            dispatch({\n                type: UPSERT_COLLECTION,\n                payload: data\n            })\n        } else {\n            toast.error(data.message)\n            dispatch({\n                type: GET_ERRORS,\n                payload: data\n            })\n        }\n    }).catch(error => {\n        if (error.response && error.response.data) {\n            const { data } = error.response\n            if (data.message)\n                toast.error(data.message)\n        }\n        dispatch({\n            type: GET_ERRORS,\n            payload: error\n        })\n    })\n};\n\nexport const deleteCollection = (collectionId) => dispatch => {\n    dispatch(emptyError());\n    let url = `${ENV.url}collection/delete/${collectionId}`;\n\n    fetch(url, {\n        method: 'DELETE',\n        headers: {\n            'content-type': 'application/json',\n            'Authorization': ENV.Authorization,\n            'x-auth-token': ENV.x_auth_token,\n            'Access-Control-Allow-Origin': '*',\n            'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n        }\n    }).then(res => res.json()).then(data => {\n        if (data.success) {\n            toast.success(data.message)\n            dispatch({\n                type: DELETE_COLLECTION,\n                payload: data\n            })\n        } else {\n            toast.error(data.message)\n            dispatch({\n                type: GET_ERRORS,\n                payload: data\n            })\n        }\n    }).catch(error => {\n        if (error.response && error.response.data) {\n            const { data } = error.response\n            if (data.message)\n                toast.error(data.message)\n        }\n        dispatch({\n            type: GET_ERRORS,\n            payload: error\n        })\n    })\n};\n\nexport const setAuthState = () => (dispatch) => {\n    dispatch({\n        type: SET_AUTH_STATE,\n    })\n}","/Users/maryamsaleem/Desktop/ariswap/frontend/src/redux/types.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/nfts/nfts.action.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/explore/explore-items.js",["534","535","536","537","538","539","540"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { beforeNFT, getNFTs } from '../nfts/nfts.action';\nimport { ENV } from '../../config/config';\nimport { Link } from 'react-router-dom';\nimport NftCard from '../collections/components/NftCard/NftCard'\nconst initData = {\n    btn_1: \"Load More\",\n}\n\nfunction ExploreItems(props) {\n    const [nftPagination, setNFTPagination] = useState(null);\n    const [nfts, setNFTs] = useState([]); // NFTs for explore section\n    const [loader, setLoader] = useState(true);\n    const [loadMoreBtn, setLoadMoreBtn] = useState(false);\n\n    useEffect(() => {\n        // get NFTs for explore section\n        const nftQS = { page: 1, limit: 4, explore: true }\n        const qs = ENV.objectToQueryString(nftQS)\n        props.getNFTs(qs)\n    }, [])\n\n    // set NFTs for explore section\n    useEffect(() => {\n        if (props.nft.nftsAuth) {\n            const { nftsData } = props.nft\n            if (nftsData) {\n                setNFTs(nftsData.nfts)\n                setNFTPagination(nftsData.pagination)\n                props.beforeNFT()\n                setLoader(false)\n                if (props.setView)\n                    props.setViewAll(nftsData.nfts && nftsData.nfts.length > 0)\n            }\n        }\n    }, [props.nft.nftsAuth])\n\n    // handle show load more button state when pagination is set\n    useEffect(() => {\n        if (nftPagination)\n            setLoadMoreBtn((nftPagination.total > 0 && nftPagination.total > nfts.length))\n    }, [nftPagination])\n\n    const loadMore = () => {\n        const { page, limit } = nftPagination\n        setLoader(true)\n\n        // get more NFTs for explore section\n        const nftQS = { page: 1, limit: limit * (page + 1), explore: true }\n        const qs = ENV.objectToQueryString(nftQS)\n        props.getNFTs(qs)\n    }\n\n    return (\n        <>\n            {/* <div className={`row items ${props.class1 ? props.class1 : ''} ${!nfts.length ? 'justify-content-center' : ''}`}> */}\n            <div className=\"row\">\n            <div className=\"row justify-content-center mt-5 w-100\">\n                        <div className=\"col-12 col-md-8 col-lg-7\">\n                            <div className=\"intro text-center mb-4\">\n                                {/* <span>{initData.pre_heading}</span> */}\n                                <span>Explore</span>\n                                {/* <h3 className=\"mt-3 mb-0\">{\"initData.heading\"}</h3> */}\n                                    <h3 className=\"mt-3 mb-0\">{\"Exclusce digital assets\"}</h3>\n                            </div>\n                        </div>\n                    </div>\n\n                {\n                    props.nfts && props.nfts.length > 0 ?\n                        props.nfts.map((item, idx) => {\n                            return (\n                                \n                                // <div key={`${props.key}_${idx}`} className={`col-12 col-sm-6 col-lg-3 item d-block ${props.class2 ? props.class2 : ''}`}>\n                                //     <div className=\"card\">\n                                //         <div className=\"image-over\">\n                                //             <Link to={`/item-details?item=${window.btoa(item._id)}`}>\n                                //                 <img className=\"card-img-top\" src={item.image} alt=\"Item Image\" />\n                                //             </Link>\n                                //         </div>\n                                //         <div className=\"card-caption col-12 p-0\">\n                                //             <div className=\"card-body\">\n                                //                 <Link to={`/item-details?item=${window.btoa(item._id)}`}>\n                                //                     <h5 className=\"mb-0\">{item.name}</h5>\n                                //                 </Link>\n                                //                 <div className=\"seller d-flex align-items-center my-3\">\n                                //                     <span>Owned By</span>\n                                //                     <Link to=\"/author\">\n                                //                         <h6 className=\"ml-2 mb-0\">{item.owner.username}</h6>\n                                //                     </Link>\n                                //                 </div>\n                                //                 <div className=\"card-bottom d-flex justify-content-between\">\n                                //                     <span>{item.currentPrice}</span>\n                                //                     {/* <span>{item.sold} of {item.copies}</span> */}\n                                //                 </div>\n                                //                 {/* <Link className=\"btn btn-bordered-white btn-smaller mt-3\" to=\"/login\"><i className=\"icon-handbag mr-2\" />Place a Bid</Link> */}\n                                //             </div>http://3.142.91.8/authorshttp://3.142.91.8/authors\n                                //         </div>\n                                //     </div>\n                                // </div>\n                                     \n                      <>\n                     \n                                     <div className=\"col-4 mt-5\">\n                                     <NftCard/>\n                                     </div>\n\n                                     </>\n                              \n                            );\n                        })\n                        : <p className=\"text-center\">No Items Found to Explore</p>\n                }  </div>\n            {/* </div> */}\n            {\n                props.loadMoreBtn &&\n                <div className=\"row\">\n                    <div className=\"col-12 text-center\">\n                        <a id=\"load-btn\" className=\"btn btn-bordered-white mt-5\" onClick={() => loadMore()}>{initData.btn_1}</a>\n                    </div>\n                </div>\n            }\n        </>\n    );\n}\n\nconst mapStateToProps = state => ({\n    nft: state.nft\n});\n\nexport default connect(mapStateToProps, { beforeNFT, getNFTs })(ExploreItems);","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/contact/contact.action.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/wallet/wallet.action.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/hero/hero.js",["541"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connectMetamaskCopy } from '../../utils/web3';\r\nimport {ENV} from './../../config/config';\r\n\r\nconst Hero = (props) => {\r\n    const [connectedAddress, setConnectedAddress] = useState('');\r\n    \r\n    useEffect(async () => {\r\n        let connectedAddress = await connectMetamaskCopy();\r\n        setConnectedAddress(connectedAddress)\r\n    }, []);\r\n    \r\n    return (\r\n        <section className=\"hero-section padding-wrapper\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6 col-lg-7\">\r\n                        <span>{ENV.appName} NFT Marketplace</span>\r\n                        <h1 className=\"mt-4\">Discover, collect, and sell extraordinary NFTs</h1>\r\n                        <p>Explore on the world's best & largest NFT marketplace</p>\r\n                        {/* Buttons */}\r\n                        <div className=\"button-group\">\r\n                            <Link className=\"btn btn-bordered-white\" to=\"/explore-all\"><i className=\"icon-rocket mr-2\" />Explore</Link>\r\n                            <Link className=\"btn btn-bordered-white\" to={connectedAddress ? '/create' : '/login'}><i className=\"icon-note mr-2\" />Create</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* Shape */}\r\n            <div className=\"shape\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                    <defs>\r\n                        <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                            <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                            <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                        </linearGradient>\r\n                    </defs>\r\n                    <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                        <polygon points fill=\"url(#linearGradient-1)\">\r\n                            <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                        </polygon>\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Hero;","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/top-seller/topseller2.js",["542","543"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {ENV} from './../../config/config';\r\nimport {getTopSellers, beforeUser} from './../user/user.action';\r\n\r\nconst TopSeller = (props) => {\r\n    const [sellers, setSellers] = useState([]);\r\n    useEffect(()=> {\r\n        props.getTopSellers();\r\n    }, []);\r\n    useEffect(()=> {\r\n        setSellers(props.user.sellers)\r\n    }, [props.user.topSellersAuth]);\r\n    return (\r\n        <section className=\"top-seller-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>CREATIVE ARTIST</span>\r\n                                <h3 className=\"mt-3 mb-0\">Top Sellers</h3>\r\n                            </div>\r\n                            {\r\n                                props.viewAll ?\r\n                                <div className=\"intro-btn\">\r\n                                    <Link className=\"btn content-btn\" to=\"/authors\">{props.viewAll}</Link>\r\n                                </div> : ''\r\n                            }\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {\r\n                        sellers && sellers.length ?\r\n                        sellers.map((author, idx) => {\r\n                            return (\r\n                                <div key={`ts_${idx}`} className=\"col-12 col-sm-6 col-lg-4 item\">\r\n                                    {/* Single Seller */}\r\n                                    <div className=\"card no-hover\">\r\n                                        <div className=\"single-seller d-flex align-items-center\">\r\n                                            <Link to={`/author/${author._id}`}>\r\n                                                <img className=\"avatar-md rounded-circle\" src={author.profileImage ? author.profileImage: ENV.globalPlaceholderImage} alt=\"\" />\r\n                                            </Link>\r\n                                            {/* Seller Info */}\r\n                                            <div className=\"seller-info ml-3\">\r\n                                                <Link className=\"seller mb-2\" to={`/author/${author._id}`}>@{author.username}</Link>\r\n                                                <span>{author.price}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        }) : \r\n                        <p>Top Sellers not available</p>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n} \r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, { beforeUser, getTopSellers })(TopSeller);","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/authors/authors.js",["544","545"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {getCreators, beforeUser} from './../user/user.action';\r\nimport {ENV} from './../../config/config';\r\n\r\nconst Authors = (props) => {\r\n    const [creators, setCreators] = useState([]);\r\n    useEffect(()=> {\r\n        props.getCreators();\r\n        window.scrollTo(0, 0)\r\n    }, []);\r\n    useEffect(()=> {\r\n        setCreators(props.user.sellers)\r\n      \r\n    }, [props.user.topSellersAuth]);\r\n\r\n    return (\r\n        <section className=\"popular-collections-area mt-5\">\r\n            <br />\r\n            <br />\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span>Creators</span>\r\n                            <h3 className=\"mt-3 mb-0\">Our Creators</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {\r\n                        creators && creators.length ? \r\n                        creators.map((author, key)=> {\r\n                            return (\r\n                                <div key={`author_${key}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                    <div className=\"card no-hover text-center\">\r\n                                        <div className=\"image-over\">\r\n                                            <Link to={`/author/${author._id}`}>\r\n                                                <img className=\"card-img-top\" src={author.profileImage ? author.profileImage: ENV.globalPlaceholderImage} alt=\"Author profile\" />\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"card-caption col-12 p-0\">\r\n                                            <div className=\"card-body mt-1\">\r\n                                                <Link to={`/author/${author._id}`}>\r\n                                                    <h5>{author.username ? author.username : author.address} </h5>\r\n                                                </Link>\r\n                                                <button type=\"button\" className=\"btn btn-bordered-white btn-smaller\">Follow</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                  \r\n                                </div>\r\n                            )\r\n                        })\r\n                        : \r\n                        <p>No Creators Found</p>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n   \r\n    {\r\n    user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, { beforeUser, getCreators })(Authors);","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/item-details/item-details.js",["546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { beforeNFT, getNFT } from '../nfts/nfts.action';\r\nimport FullPageLoader from '../full-page-loader/full-page-loader'\r\nimport { ENV } from '../../config/config';\r\nimport moment from 'moment';\r\nimport Countdown from 'react-countdown';\r\nimport SimpleReactValidator from 'simple-react-validator'\r\nimport { decimalNumberValidator } from \"../../utils/functions\";\r\nimport { Container, Row, Col, Button, Modal } from \"react-bootstrap\";\r\nimport { beforeOffer, makeOffer, getOffers, deleteOffer, acceptOffer } from '../offers/offers.action'\r\nimport { beforeBid, placeBid, getBids, deleteBid, acceptBid } from '../bids/bids.action'\r\nimport {getCreators, beforeUser} from './../user/user.action';\r\nimport {getCurrentAddress,BuyFixedPriceNFTs,placeBidNft,acceptNftOffer} from '../../utils/web3';\r\nimport { toast } from 'react-toastify'\r\nconst { globalPlaceholderImage, countDownRenderer, currencies, objectToQueryString } = ENV\r\n\r\nconst initData = {\r\n    itemImg: \"/img/auction_2.jpg\",\r\n    date: \"2022-03-30\",\r\n    price_2: \"$500.89\",\r\n    bidBtn: \"Place a Bid\",\r\n    offerBtn: \"Buy Now\",\r\n    sellBtn: \"Sell\"\r\n}\r\n\r\n// expiry options\r\n\r\nconst expiryOptions = [\r\n    { label: '5 Days', value: moment().add(5, \"days\").format('DD/MM/YYYY') },\r\n    { label: '7 Days', value: moment().add(7, \"days\").format('DD/MM/YYYY') },\r\n    { label: 'A Month', value: moment().add(1, \"months\").format('DD/MM/YYYY') },\r\n    { label: 'Custom Date', value: -1 },\r\n]\r\n\r\n// make an offer / bid config.\r\n\r\nconst config1 = {\r\n    price: {\r\n        currency: ENV.currency,\r\n        amount: \"\",\r\n    },\r\n    expiry: {\r\n        date: expiryOptions[0].value,\r\n        time: moment(new Date()).format(\"HH:mm\"),\r\n        type: 1, // 1 for time & 2 for datetime-local\r\n        datetime: '' // for payload \r\n    }\r\n};\r\nlet nft1=[]\r\nclass ItemDetails extends Component {\r\n    isTimeoutAction = false;\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            userId: ENV.getUserKeys()?._id,\r\n            offers: null,\r\n            offersPagination: null,\r\n\r\n            bids: null,\r\n            bidsPagination: null,\r\n            highestBidAmtt:null,\r\n            errors: '',\r\n            isSubmitted: false,\r\n            formValid: true,\r\n            loader: true,\r\n            nft: null,\r\n            nftAll:null,\r\n            isOpen: false,\r\n            creator:[],\r\n            nftConfig: config1 ,// make an offer / bid config.\r\n            nftsData:[],\r\n            bidsData:[],\r\n            creators:[],\r\n            myAddress:''\r\n        }\r\n        this.validator = new SimpleReactValidator({\r\n            autoForceUpdate: this,\r\n            messages: {\r\n                required: 'This field is required.'  // will override all messages\r\n            },\r\n        });\r\n\r\n    }\r\n\r\n    componentDidMount= async()=> {\r\n        window.scroll(0, 0)\r\n        let myAddress=await getCurrentAddress()\r\n     \r\n        this.setState({\r\n            myAddress\r\n        })\r\n        const query = new URLSearchParams(window.location.search)\r\n        this.getTokens()\r\n       \r\n        if (query.get('item')) {\r\n        \r\n            const nftId = window.atob(query.get('item'))\r\n            // console.log(nftId,\"nftId====>\");\r\n            if (nftId) {\r\n                this.props.getNFT(nftId);\r\n                this.getBids(nftId)\r\n\r\n                const bidQS = ENV.objectToQueryString({ nftId })\r\n                this.props.getBids(bidQS);\r\n\r\n                const offerQS = ENV.objectToQueryString({ nftId })\r\n                this.props.getOffers(offerQS);\r\n                this.props.getCreators();\r\n            }\r\n        } else\r\n            this.props.history.push('/explore-all')\r\n    }\r\n\r\n    filterCreator=(nft)=>{\r\n     \r\n        // let nftId=this.state.nft.collection.userId\r\n    }\r\n    filterCreatorsInfo=(id,item)=>{\r\n      \r\n      let user= this.props.user?.creators?.find((item)=>item._id===id )\r\n      if(user){\r\n          if(item==\"username\"){\r\n             return user.username\r\n          }\r\n          if(item==\"profilePhoto\"){\r\n              return user?.profileImage\r\n          }\r\n          if(item==\"id\"){\r\n            return user._id\r\n          }\r\n      }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // if (this.props.error)\r\n        //     this.setState({ loader: false })\r\n\r\n        if (this.props.nft.nftsAuth) {\r\n           \r\n            const nft = this.props.nft.nftsData\r\n            const allData=this.props.nft.nftAll\r\n           \r\n            //nft\r\n            nft1=nft\r\n            this.getBids(nft?._id)\r\n            this.setState({\r\n                \r\n                nft,\r\n            nftAll:allData\r\n                \r\n            }, () => {\r\n                this.props.beforeNFT()\r\n            })\r\n            this.filterCreator(nft)\r\n            const date1 = moment();\r\n            const date2 = moment(this.props?.nft?.nftAll?.sellingConfig?.duration?.endDate);\r\n           \r\n            // this.isTimeoutAction =  date2.diff(date1) > 0 ? false : true;\r\n            let result =  date2.diff(date1) > 0 ? false : true;\r\n            this.setState({\r\n                isTimeoutAction:result\r\n            })\r\n            // console.log(result,\"checking result\")\r\n        }\r\n\r\n        if (this.props.offer.createAuth) {\r\n            this.setState({\r\n                // loader: false,\r\n                isOpen: false\r\n            }, () => {\r\n                this.props.beforeOffer()\r\n\r\n                const { nft } = this.state\r\n                const qs = ENV.objectToQueryString({ nftId: nft._id })\r\n                this.props.getOffers(qs)\r\n            })\r\n        }\r\n\r\n        if (this.props.offer.getAuth) {\r\n            const { offers, pagination } = this.props.offer\r\n            this.setState({ loader: false, offers, offersPagination: pagination }, () => {\r\n                this.props.beforeOffer()\r\n            })\r\n        }\r\n\r\n        if (this.props.offer.deleteAuth) {\r\n            this.props.beforeOffer()\r\n\r\n            const { nft } = this.state\r\n            const qs = ENV.objectToQueryString({ nftId: nft._id })\r\n            this.props.getOffers(qs)\r\n        }\r\n\r\n        if (this.props.bid.createAuth) {\r\n            this.setState({\r\n                // loader: false,\r\n                isOpen: false\r\n            }, () => {\r\n                this.props.beforeBid()\r\n\r\n                const { nft } = this.state\r\n                const qs = ENV.objectToQueryString({ nftId: nft._id })\r\n                this.props.getBids(qs)\r\n            })\r\n        }\r\n\r\n        if (this.props.bid.getAuth) {\r\n         \r\n            const { bids, pagination, highestBidAmt } = this.props.bid\r\n        \r\n            let nft = { ...this.state.nft }\r\n\r\n            nft.highestBidAmt = highestBidAmt\r\n           \r\n            this.setState({ loader: false, bids, bidsPagination: pagination, nft }, () => {\r\n                this.props.beforeBid()\r\n            })\r\n        }\r\n\r\n        if (this.props.bid.deleteAuth) {\r\n            this.props.beforeBid()\r\n\r\n            const { nft } = this.state\r\n            const qs = ENV.objectToQueryString({ nftId: nft._id })\r\n            this.props.getBids(qs)\r\n        }\r\n\r\n        if (this.props.offer.acceptAuth) {\r\n            this.setState({ loader: false }, () => {\r\n                this.props.beforeOffer()\r\n                const { nft } = this.state\r\n                this.props.history.push(`collection-details/${window.btoa(nft.collection._id)}`)\r\n            })\r\n        }\r\n\r\n        if (this.props.bid.acceptAuth) {\r\n            this.setState({ loader: false }, () => {\r\n                this.props.beforeBid()\r\n                const { nft } = this.state\r\n                this.props.history.push(`collection-details/${window.btoa(nft.collection._id)}`)\r\n            })\r\n        }\r\n        //    console.log(this.props.user.topSellersAuth,\"kjkjkjlkjlkjkljlkjk\");\r\n\r\n        if(this.props.user.topSellersAuth && !this.state.creator?.length>0 ){\r\n            this.filterCreator(this.props.user.sellers)\r\n            this.setState({\r\n                creator:this.props.user.sellers,\r\n                creators:this.props.user.creators\r\n            })\r\n            // console.log(this.props.user.sellers,\"creators===}}}}}}}}}}}}}}}}}}}}}\");\r\n            // console.log(this.state.nft,\"nft below the creator===>\")\r\n        }\r\n        \r\n\r\n    }\r\n   \r\n    getBids=(nftId)=>{\r\n        const BASE_URL= process.env.REACT_APP_BASE_URL \r\n        fetch(BASE_URL + \"/bid/list\", {\r\n            method: 'GET',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'Authorization': ENV.Authorization,\r\n                'x-auth-token': ENV.x_auth_token,\r\n                'Access-Control-Allow-Origin': '*',\r\n                'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\r\n            }\r\n        }).then(res => res.json()).then(data => {\r\n       \r\n            let bids=data.data.allBids?.filter((item)=>item.nftId===nftId)          \r\n           \r\n            // const highestBidAmt = bids.length\r\n            var last_element = bids[bids?.length - 1];\r\n       \r\n            this.setState({\r\n                bidsData:bids,\r\n                highestBidAmtt: last_element?.price.amount\r\n\r\n            })\r\n            setTimeout(()=>{\r\n               this.setState({\r\n                   loader:false,\r\n               })\r\n            },2000)\r\n         \r\n        }).catch(error => {\r\n        console.log(error,\"error while getting bids\")\r\n           \r\n        })\r\n    }\r\n    openModal = () => {\r\n  \r\n        if(this.props?.nft?.nftAll.sellingMethod==1)\r\n        {\r\n            // console.log(\"inside if\")\r\n            var res= this.state.nftsData.data.find((item)=>item.nftId===this.state.nft._id)\r\n            // console.log(res,\"response\")               \r\n             // BuyFixedPriceNFTs(nftAll.ownerAddress,nftAll.currentPrice)\r\n             this.setState({\r\n                loader:true\r\n            })\r\n\r\n            setTimeout(() => {\r\n               this.setState({\r\n                   loader:false\r\n               })\r\n\r\n            }, 8000);\r\n          \r\n             BuyFixedPriceNFTs(this.props?.nft?.nftAll.currentPrice,res.nftToken,this.props.nft.nftAll._id)\r\n            \r\n        }\r\n        else {\r\n            // console.log(\"inside else\")\r\n            this.setState({ isOpen: true, nftConfig: config1, errors: '' });  \r\n        }\r\n      \r\n        // this.setState({ isOpen: true, nftConfig: config1, errors: '' });  \r\n    }\r\n\r\n    closeModal = () => this.setState({ isOpen: false });\r\n\r\n    onChange = (e) => {\r\n        const { nftConfig } = this.state;\r\n        const { name, value } = e.target;\r\n        let data = nftConfig;\r\n\r\n        const keys = name.split(\".\"); // nftConfig, price, currency\r\n        if (keys && keys[2])\r\n            data[keys[1]][keys[2]] = value;\r\n        else if (keys && keys[1])\r\n            data[keys[1]] = value;\r\n\r\n        if (keys && keys[1] === 'price' && keys[2] === 'amount')\r\n            data[keys[1]]['amount'] = Number(value)\r\n\r\n        if (keys && keys[1] === 'expiry' && keys[2] === 'date')\r\n            data[keys[1]]['type'] = Number(value) === -1 ? 2 : 1\r\n\r\n        // set datetime for days / months \r\n        if (data.expiry.type === 1)\r\n            data.expiry.datetime = moment(data.expiry.date + ' ' + data.expiry.time, 'DD/MM/YYYY HH:mm')\r\n        // set datetime for custom date\r\n        else if (data.expiry.type === 2) {\r\n            data.expiry.datetime = moment(data.expiry.time, 'DD/MM/YYYY HH:mm')\r\n            data.expiry.date = moment(data.expiry.time, 'DD/MM/YYYY')\r\n        }\r\n\r\n        this.setState({\r\n            nftConfig: {\r\n                ...data\r\n            }\r\n        })\r\n    };\r\n\r\n    // submit when a bid is placed or when an offer is made\r\n    submit = () => {\r\n    //   console.log(this.state.myAddress,\"myaddress\")\r\n\r\n        this.setState({ isSubmitted: true, formValid: this.validator.allValid() }, () => {\r\n            const { formValid } = this.state\r\n            if (formValid) {\r\n                this.setState({\r\n                    loader: false               //need to convert true\r\n                }, () => {\r\n                    const { nft, nftConfig,nftAll } = this.state\r\n           \r\n                    // console.log(nftAll,\"checking nft==>\")\r\n                    const payload = {\r\n                        // ownerId: nft.owner._id,\r\n                        expiryDate: nftConfig.expiry.datetime,\r\n                        price: nftConfig.price,\r\n                        nftId: nft._id,\r\n                        bidBy:ENV.getUserKeys('_id'),\r\n                        user:ENV.getUserKeys('_id'),\r\n                        offerById:ENV.getUserKeys('_id'),\r\n                        toAddress:nftAll.ownerAddress,\r\n                        fromAddress:this.state.myAddress,\r\n\r\n                    }\r\n                    // console.log(payload,\"toaddress8888888\")\r\n           \r\n                    let foundResult=this.state.nftsData.data.find((item)=>item.nftId===nft._id)\r\n                    // console.log('check here selling method',nft.sellingMethod )\r\n                    // if selling method is 2 then go for bid\r\n                    if (nft.sellingMethod === 2) { // place a bid \r\n                        placeBidNft(payload,foundResult.nftToken,payload.price,nft.ownerAddress,this.state.myAddress)\r\n                        // this.props.placeBid(payload,foundResult.nftToken,payload.price,nft.ownerAddress,this.state.myAddress)\r\n                        this.setState({\r\n                            loader:true\r\n                        })\r\n\r\n                        setTimeout(() => {\r\n                            this.setState({\r\n                                loader:false\r\n                            })\r\n                          \r\n                        }, 5000);\r\n                    } else if (nft.sellingMethod === 1) { // make an offer \r\n                       let res= this.state.nftsData.find((item)=>item.nftId===nft._id)\r\n                    //    console.log(res,\"response\")\r\n                             \r\n                        // BuyFixedPriceNFTs(nftAll.ownerAddress,nftAll.currentPrice)\r\n                        // BuyFixedPriceNFTs(payload.price,res.nftToken)\r\n                        // console.log(nftAll,\"nftAll==>\")\r\n                        BuyFixedPriceNFTs(payload.price,res.nftToken,nftAll.ownerAddress)\r\n                        // this.props.makeOffer(payload,foundResult,payload.price)\r\n                    }\r\n                    else{\r\n                        // console.log(nftAll,\"nftAll==>\")\r\n                        // console.log('single nft before fix price function', nft)\r\n                        let res= this.state.nftsData.data.find((item)=>item.nftId===nft._id)\r\n                        // console.log(res,\"response\")\r\n                              \r\n                         // BuyFixedPriceNFTs(nftAll.ownerAddress,nftAll.currentPrice)\r\n                         BuyFixedPriceNFTs(payload.price,res.nftToken,nftAll.ownerAddress)\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n            else {\r\n                alert(\"in else\")\r\n                this.validator.showMessages()\r\n                this.validator.purgeFields()\r\n                this.setState({\r\n                    errors: 'Please fill all required fields in valid format.',\r\n                    formValid: false\r\n                }, () => {\r\n                    window.scroll(0, 0)\r\n                })\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    deleteOffer = (offerId) => {\r\n        this.setState({\r\n            loader: true\r\n        }, () => {\r\n            this.props.deleteOffer(offerId)\r\n        })\r\n    }\r\n\r\n    deleteBid = (bidId) => {\r\n        this.setState({\r\n            loader: true\r\n        }, () => {\r\n            this.props.deleteBid(bidId)\r\n        })\r\n    }\r\n\r\n    acceptOffer = (offerId) => {\r\n        this.setState({\r\n            loader: true\r\n        }, () => {\r\n            this.props.acceptBid({ offerId })\r\n        })\r\n\r\n    }\r\n\r\n    acceptBid = (bidId) => {\r\n        this.setState({\r\n            loader: true\r\n        }, () => {\r\n            const { nft, nftConfig,nftAll } = this.state\r\n        \r\n            let foundResult=this.state.nftsData.data.find((item)=>item.nftId===nft._id)\r\n  \r\n            const payload = {\r\n                bidId:bidId,\r\n                nftId: nft._id,\r\n                bidBy:ENV.getUserKeys('_id'),\r\n                user:ENV.getUserKeys('_id'),\r\n                toAddress:nftAll.ownerAddress,\r\n                fromAddress:this.state.myAddress,\r\n            }\r\n            this.setState({\r\n                loader:true\r\n            })\r\n\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    loader:false\r\n                })\r\n              \r\n            }, 7000);\r\n            acceptNftOffer(foundResult.nftToken,payload)\r\n            // this.props.acceptBid(payload,foundResult.nftToken)\r\n             \r\n        })\r\n       \r\n    }\r\n    creatorUserName=()=>{\r\n        // console.log(this.state.creator,\"creator listing\");/\r\n        // console.log(this.props.nftAll,\"this.props.nftAll?\");\r\n\r\n       let result= this.state.creator.find((item)=>item._id===this.state?.nftAll?.userId)\r\n    //    console.log(result,\"result in the userName function===>\");\r\n       if(result?.username)\r\n       {\r\n\r\n           return result.username\r\n       }\r\n       else {\r\n           return \"no username\"\r\n       }\r\n    }\r\n     getTokens=()=>{\r\n\r\n        let url = process.env.REACT_APP_BASE_URL + `nftTokens/tokens`;\r\n      \r\n        fetch(url, {\r\n         method: 'GET',\r\n         headers: {\r\n            'content-type': 'application/json',\r\n            'Authorization': ENV.Authorization,\r\n            'x-auth-token': ENV.x_auth_token,\r\n            'Access-Control-Allow-Origin': '*',\r\n            'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\r\n        },\r\n      \r\n      }).then(res => res.json()).then(data => {\r\n \r\n        //   console.log(data,\"data==>22222222222222222222222222222222222222\")\r\n      \r\n     this.setState({\r\n        nftsData:data\r\n     })\r\n      \r\n      }).catch(error => {\r\n        \r\n        console.log(error,\"error in catch blcok\")\r\n        \r\n      })\r\n    }\r\n    // filterCreatorsInfo=(id,item)=>{\r\n    //     // console.log(this.state.creators,\"creator in the filterCreatorsFunction\")\r\n    //   let user= this.state?.creators?.data?.find((item)=>item._id===id )\r\n    //   if(user){\r\n\r\n    //       if(item==\"username\"){\r\n    //          return user.username\r\n    //       }\r\n    //       if(item==\"profilePhoto\"){\r\n    //           return user?.profileImage\r\n    //       }\r\n    //       if(item==\"id\"){\r\n    //         return user._id\r\n    //       }\r\n    //   }\r\n      \r\n    // }\r\n\r\n    render() {\r\n        const { loader, nft, nftConfig, isSubmitted, errors, userId, bids, offers } = this.state\r\n        if(!ENV.getUserKeys('_id')._id){\r\n            toast.error(\"Pleas login to continue\")\r\n            this.props.history.push('/')\r\n               return \" \"\r\n           }\r\n           else {\r\n        return (\r\n            <>\r\n                <section className=\"item-details-area padding-wrapper pb-0\">\r\n                    {\r\n                        loader ?\r\n                            <FullPageLoader /> :\r\n                            <>\r\n                                {\r\n                                    nft && \r\n                                    <div className=\"container\">\r\n                                        <div className=\"row justify-content-between\">\r\n                                            <div className=\"col-12 col-lg-5\">\r\n                                                <div className=\"item-info\">\r\n                                                    <div className=\"item-thumb text-center\">\r\n                                                        <img src={nft.image} alt=\"NFT Image\" />\r\n                                                    </div>\r\n                                                    {\r\n                                                        nft.auctionEndDate &&\r\n                                                        <div className=\"card no-hover countdown-times mt-4\">\r\n                                                            <Countdown\r\n                                                                date={new Date(nft.auctionEndDate) + 10000}\r\n                                                                renderer={countDownRenderer}\r\n                                                            />\r\n                                                        </div>\r\n                                                    }\r\n                                                    {/* Tabs */}\r\n                                                    <ul className=\"netstorm-tab nav nav-tabs mt-4\" id=\"nav-tab\">\r\n                                                        <li>\r\n                                                            <a className=\"active\" id=\"bids-tab\" data-toggle=\"pill\" href=\"#bids\">\r\n                                                                <h5 className=\"m-0\">Bids</h5>\r\n                                                            </a>\r\n                                                        </li>\r\n                                                        {/* <li>\r\n                                                            <a id=\"offers-tab\" data-toggle=\"pill\" href=\"#offers\">\r\n                                                                <h5 className=\"m-0\">Offers</h5>\r\n                                                            </a>\r\n                                                        </li> */}\r\n                                                        <li>\r\n                                                            <a id=\"details-tab\" data-toggle=\"pill\" href=\"#details\">\r\n                                                                <h5 className=\"m-0\">Details</h5>\r\n                                                            </a>\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                    \r\n                                                    {/* Tab Content */}\r\n                                                    <div className=\"tab-content\" id=\"nav-tabContent\">\r\n                                                        <div className=\"tab-pane fade show active\" id=\"bids\">\r\n                                                            <ul className=\"list-unstyled\">\r\n                                                                {this.state.bidsData &&  this.props.user?.creators?.length > 0  ? \r\n                                                                \r\n                                                                    this.state.bidsData.map((item, idx) => {\r\n                                                                \r\n                                                                        return (\r\n                                                                            <li key={`bid_${idx}`} className=\"single-tab-list d-flex align-items-start w-100\">\r\n                                                                             \r\n                                                                                <img className=\"avatar-sm rounded-circle mr-3\" src={item?.profilePhoto} alt=\"\" />\r\n                                                                                <p className=\"m-0\">\r\n                                                                                    Bid listed for <strong>{item.price.amount} {item.price.currency} </strong>\r\n                                                                                     <span>{moment(item.createdAt).fromNow()} </span>\r\n                                                                                     <br />by <Link to={`/author/${item.bidById}`}>@{ this.filterCreatorsInfo(item.bidBy,'username')}</Link>\r\n                                                                                </p>\r\n                                                                                {\r\n                                                                                     nft.nftOwnerId=== userId &&\r\n                                                                                    //   userId === item.nftId &&\r\n                                                                                    <div className=\"ml-auto\" onClick={() => this.deleteBid(item._id)}>\r\n                                                                                        <i className=\"cursor-pointer fa fa-times text-danger\" aria-hidden=\"true\" />\r\n                                                                                    </div>\r\n                                                                                }\r\n                                                                                {\r\n                                                                                      nft.nftOwnerId=== userId &&\r\n                                                                                    //   userId === item.nftId &&\r\n                                                                                    <div className=\"ml-auto\" onClick={() => this.acceptBid(item._id)}>\r\n                                                                                        <i className=\"cursor-pointer fa fa-check text-success\" aria-hidden=\"true\" />\r\n                                                                                    </div>\r\n                                                                                     \r\n                                                                                }\r\n                                                                            </li>\r\n                                                                        );\r\n                                                                    }) :\r\n                                                                    <div className=\"mt-3\">No bids found</div>\r\n                                                                }\r\n                                                            </ul>\r\n                                                        </div>\r\n\r\n                                                        {/* <div className=\"tab-pane fade\" id=\"offers\">\r\n                                                            <ul className=\"list-unstyled\">\r\n                                                                {offers && offers.length > 0 ?\r\n                                                                    offers.filter((item)=>item.nftId===nft._id).map((item, idx) => {\r\n                                                                        return (\r\n                                                                            <li key={`offer_${idx}`} className=\"single-tab-list d-flex align-items-start w-100\">\r\n                                                                                <img className=\"avatar-sm rounded-circle mr-3\" src={item?.offerBy?.profilePhoto} alt=\"\" />\r\n                                                                                <p className=\"m-0\">\r\n                                                                                    Offer listed for <strong>{item.price.amount} {item.price.currency}</strong> {moment(item.createdAt).fromNow()} <br />by <Link to={`/author/${item.nftId}`}>@{this.filterCreatorsInfo(item.offerById,\"username\")}</Link>\r\n                                                                                </p>\r\n                                                                                {\r\n                                                                                    userId === item.nftId &&\r\n                                                                                    <div className=\"ml-auto\" onClick={() => this.deleteOffer(item._id)}>\r\n                                                                                        <i className=\"cursor-pointer fa fa-times text-danger\" aria-hidden=\"true\" />\r\n                                                                                    </div>\r\n                                                                                }\r\n                                                                                {\r\n                                                                                    userId === item.nftId &&\r\n                                                                                    <div className=\"ml-auto\" onClick={() => this.acceptOffer(item._id)}>\r\n                                                                                        <i className=\"cursor-pointer fa fa-check text-success\" aria-hidden=\"true\" />\r\n                                                                                    </div>\r\n                                                                                }\r\n                                                                            </li>\r\n                                                                        );\r\n                                                                    }) :\r\n                                                                    <div className=\"mt-3\">No offers found</div>\r\n                                                                }\r\n                                                            </ul>\r\n                                                        </div> */}\r\n                                                        \r\n                                                        <div className=\"tab-pane fade\" id=\"details\">\r\n                                                            <div className=\"owner-meta d-flex align-items-center mt-3\">\r\n                                                                <span>Owner</span>\r\n                                                                <Link className=\"owner d-flex align-items-center ml-2\" to={`/author/${nft.owner?._id}`}>\r\n                                                                    <img className=\"avatar-sm rounded-circle\" src={nft.owner?.profilePhoto ? nft.owner.profilePhoto : globalPlaceholderImage} alt=\"Owner Image\" />\r\n                                                                    <h6 className=\"ml-2\">{nft.owner?.username}</h6>\r\n                                                                </Link>\r\n                                                            </div>\r\n                                                            <p className=\"mt-2\">Created : {moment(nft.createdAt).format('DD MMM YYYY')\r\n                                                            }</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-12 col-lg-6\">\r\n                                                <div className=\"content mt-5 mt-lg-0\">\r\n                                                    <h3 className=\"m-0\">{nft.name}</h3>\r\n                                                    <p>{nft.description}</p>\r\n\r\n                                                    {/* Owner */}\r\n                                                    <div className=\"owner d-flex align-items-center\">\r\n                                                        <span>Owned By</span>\r\n                                                        <Link className=\"owner-meta d-flex align-items-center ml-3\" to={`/author/${nft.owner?._id}`}>\r\n                                                            <img className=\"avatar-sm rounded-circle\" src={nft.owner?.profilePhoto || globalPlaceholderImage} alt=\"Owner Avatar\" />\r\n                                                            <h6 className=\"ml-2\">\r\n                                                                {/* {nft.owner?.username}\r\n                                                                 */}\r\n                                                                 {this.creatorUserName()}\r\n                                                                </h6>\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                    {/* Item Info List */}\r\n                                                    <div className=\"item-info-list mt-4\">\r\n                                                        <ul className=\"list-unstyled\">\r\n                                                            <li className=\"price d-flex justify-content-between\">\r\n                                                                <span>Current Price {nft.currentPrice || 0} {ENV.currency}</span>\r\n                                                                {/* <span>{initData.price_2}</span> */}\r\n                                                                <span>{nft.sold} of {nft.copies}</span>\r\n                                                            </li>\r\n                                                            <li>\r\n                                                                <span>Size </span>\r\n                                                                <span>{nft.size}</span>\r\n                                                            </li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                    <div className=\"row items\">\r\n                                                        {/* Creator */}\r\n                                                        <div className=\"col-12 col-md-6 item px-lg-2\">\r\n                                                            <div className=\"card no-hover\">\r\n                                                                <div className=\"single-seller d-flex align-items-center\">\r\n                                                                    <a href=\"/author\">\r\n                                                                        <img className=\"avatar-md rounded-circle\" src={nft.creator?.profilePhoto || globalPlaceholderImage} alt=\"Creator Avatar\" />\r\n                                                                    </a>\r\n                                                                    <div className=\"seller-info ml-3\">\r\n                                                                        <Link className=\"seller mb-2\" to={`/author/${nft.creator?._id}`}>{\r\n                                                                          this.creatorUserName()\r\n                                                                        // nft.creator?.username\r\n                                                                        }</Link>\r\n                                                                        <span>Creator</span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        {/* Collection */}\r\n                                                        <div className=\"col-12 col-md-6 item px-lg-2\">\r\n                                                            <div className=\"card no-hover\">\r\n                                                                <div className=\"single-seller d-flex align-items-center\">\r\n                                                                    <Link to={`collection-details/${window.btoa(nft.collection?._id)}`}>\r\n                                                                        <img className=\"avatar-md rounded-circle\" src={nft.collection?.image} alt=\"Collection Image\" />\r\n                                                                    </Link>\r\n                                                                    <div className=\"seller-info ml-3\">\r\n                                                                        <Link className=\"seller mb-2\" to={`collection-details/${window.btoa(nft.collection?._id)}`}>{nft.collection?.name}</Link>\r\n                                                                        <span>Collection</span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"col-12 item px-lg-2\">\r\n                                                            <div className=\"card no-hover\">\r\n                                                                <h4 className=\"mt-0 mb-2\">Highest Bid</h4>\r\n                                                                <div className=\"price d-flex justify-content-betxween align-items-center\">\r\n                                                                    <span>{this.state.highestBidAmtt ? this.state.highestBidAmtt + ` ${ENV.currency}` : 'N/A'}</span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {\r\n\r\n                                                        nft.nftOwnerId=== userId ?\r\n                                                        <Link className=\"d-block btn btn-bordered-white mt-4 mb-4 w-100\" to={`/sell-item/${window.btoa(nft._id)}`}>{initData.sellBtn}</Link>\r\n                                                        :\r\n                                                        // <button className=\"d-block btn btn-bordered-white mt-4 w-100\" onClick={this.openModal(nft)}>{nft.sellingMethod === 2 ? initData.bidBtn : initData.offerBtn}</button>\r\n                                                        <>\r\n                                                             {/* this.isTimeoutAction ? 'Auction Timeout' : */}\r\n                                                             {/*  */}\r\n                                                            { \r\n                                                           this.props?.nft?.nftAll.sellingMethod &&\r\n                                                            <button  className=\"d-block btn btn-bordered-white mt-4 w-100\" disabled={this.isTimeoutAction || nft.copies===nft.sold}  onClick={()=>this.openModal()}>{this.isTimeoutAction?\"Auction Timeout\":( nft.sellingMethod === 2 ? initData.bidBtn : initData.offerBtn)}</button>}\r\n                                                             \r\n                                                            </>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </>\r\n\r\n                    }\r\n                </section>\r\n                <div className=\"modal-wrapper\">\r\n                    {\r\n                        nft &&\r\n                        <Modal\r\n                            centered\r\n                            size=\"lg\"\r\n                            className=\"\"\r\n                            show={this.state.isOpen}\r\n                            onHide={this.closeModal}\r\n                        >\r\n                            <Modal.Header className=\"text-center modal-title-wrapper\">\r\n                                <Modal.Title>\r\n                                    { nft.sellingMethod === 2 ? 'Place A Bid' : 'Make An Offer'}\r\n                                </Modal.Title>\r\n                            </Modal.Header>\r\n                            {\r\n                                isSubmitted && errors &&\r\n                                <Modal.Body className=\"row pt-2 pb-0\">\r\n                                    <div className=\"col-12\">\r\n                                        <span id=\"nft-err\" className=\"form-error-msg text-danger\">{errors}</span>\r\n                                    </div>\r\n                                </Modal.Body>\r\n                            }\r\n                            <Modal.Body>\r\n                                <div className=\"price-wrapper d-flex\">\r\n                                    <div className=\"price-text position-relative\">\r\n                                        <div className=\"text-white mb-2 absolute-wrapper\">\r\n                                            <b>Price</b>\r\n                                        </div>\r\n                                        <div className=\"text-right mb-2\">\r\n                                            <i className=\"fas fa-exclamation-circle ml-2\" />\r\n                                        </div>\r\n                                        <div className=\"d-flex\">\r\n                                            <select className=\"form-control\" id=\"currency\" name=\"nftConfig.price.currency\" onChange={(e) => this.onChange(e)}>\r\n                                                {\r\n                                                    currencies && currencies.map((currency, index) => {\r\n                                                        return (\r\n                                                            <option key={index} value={currency.symbol}>{currency.symbol}</option>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </select>\r\n                                            <input type=\"text\" placeholder=\"Amount\" className=\"amount-btn ml-3\" name=\"nftConfig.price.amount\" placeholder=\"Amount\" className=\"amount-btn ml-3\" style={{ borderRadius: \"4px\" }} onChange={(e) => this.onChange(e)} onKeyDown={(e) => decimalNumberValidator(e)} defaultValue={nftConfig.price.amount} required />\r\n                                            <div className=\"text-right mb-2 dollar-wrapper\">\r\n                                                $ 0.00\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Modal.Body>\r\n                            <Modal.Body className=\"text-danger\">{this.validator.message('amount', nftConfig.price.amount, 'required')}</Modal.Body>\r\n                            <Modal.Body className=\"\" style={{ flexDirection: \"column\", display: \"block\", height: \"200px\" }}>\r\n                                <div className=\"offer-expiration-wrapper text-white\">\r\n                                    <b>Offer Expiration</b>\r\n                                </div>\r\n                                <div>\r\n                                    <div className=\"d-flex\">\r\n                                        <select className=\"form-control\" id=\"expiryDate\" name=\"nftConfig.expiry.date\" onChange={(e) => this.onChange(e)}\r\n                                            style={{\r\n                                                padding: \"7px 55px 7px 55px\",\r\n                                                border: \"none\",\r\n                                                outline: \"none\",\r\n                                                borderRadius: \"4px\",\r\n                                                background: \"#808080\",\r\n                                                display: \"flex\",\r\n                                                alignItems: \"center\",\r\n                                                cursor: \"pointer\",\r\n                                                height: \"51px\",\r\n                                                color: \"#000\"\r\n                                            }}\r\n                                        >\r\n                                            {\r\n                                                expiryOptions && expiryOptions.map((expiry, index) => {\r\n                                                    return (\r\n                                                        <option key={index} value={expiry.value}>{expiry.label}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                        <div>\r\n                                            <div className=\"mr-auto budle-wrapper\">\r\n                                                <input type={nftConfig.expiry.type === 1 ? \"time\" : \"datetime-local\"} style={{ marginLeft: \"1rem\", width: \"552px\" }} name=\"nftConfig.expiry.time\" value={nftConfig.expiry.time} onChange={(e) => this.onChange(e)} required />\r\n                                            </div>\r\n                                            <span className=\"text-danger message\">{this.validator.message('amount', nftConfig.price.amount, 'required')}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Modal.Body>\r\n                            <Modal.Body className=\"justify-content-center align-items-center\">\r\n                                <div className=\"d-flex justify-content-around\">\r\n                                    <button className=\"ethereum-btn mr-3\" disabled={loader} onClick={() => this.submit()}>{nft.sellingMethod === 2 ? initData.bidBtn : initData.bidBtn}</button>\r\n                                    {/* <button className=\"ethereum-btn\">Add funds</button> */}\r\n                                </div>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <button\r\n                                    className=\"btn banner-btn btn-primary\"\r\n                                    onClick={this.closeModal}\r\n                                >\r\n                                    Close\r\n                                </button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                    }\r\n                </div>\r\n            </>\r\n        );\r\n                }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n    // console.log('state', state),\r\n \r\n    {\r\n    nft: state.nft,\r\n    error: state.error,\r\n    offer: state.offer,\r\n    bid: state.bid,\r\n    user: state.user,\r\n    nftAll:state.nftAll,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    beforeNFT, getNFT,\r\n    beforeOffer, makeOffer, getOffers, deleteOffer, beforeBid, placeBid, getBids, deleteBid, acceptOffer, acceptBid, beforeUser, getCreators ,\r\n})(ItemDetails);\r\n","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/work/work.js",["564","565","566"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { init } from 'aos';\r\n\r\n// const BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json/work\";\r\nconst BASE_URL =  \"../../json-server/db.json/work\";\r\nconst initData = {\r\n    \"preHeading\": \"How It Works\",\r\n    \"heading\": \"Create and sell your NFTs\",\r\n    \"workData\": [\r\n      {\r\n        \"id\": 1,\r\n        \"icon\": \"icons icon-wallet text-effect\",\r\n        \"title\": \"Set up your wallet\",\r\n        \"text\": \"Once you've set up your Celo or BSC Metamask wallet, connect to ARI NFT Marketplace by Signing In and clicking Login.\"\r\n      },\r\n      {\r\n        \"id\": 2,\r\n        \"icon\": \"icons icon-grid text-effect\",\r\n        \"title\": \"Create your collection\",\r\n        \"text\": \"Click Create and set up your collection. Add social links, a description, profile & banner images, and set a secondary sales fee.\"\r\n      },\r\n      {\r\n        \"id\": 3,\r\n        \"icon\": \"icons icon-drawer text-effect\",\r\n        \"title\": \"Add your NFTs\",\r\n        \"text\": \"Upload your work (image, video, audio, or 3D art), add a title and description, and customize your NFTs with properties, stats, and unlockable content.\"\r\n      },\r\n      {\r\n        \"id\": 4,\r\n        \"icon\": \"icons icon-bag text-effect\",\r\n        \"title\": \"List them for sale\",\r\n        \"text\": \"Choose between auctions, fixed-price listings, and declining-price listings. You choose how you want to sell your NFTs!\"\r\n      }\r\n    ]\r\n  }\r\n// console.log('base url',BASE_URL)\r\nclass Work extends Component {\r\n    state = {\r\n        data: {},\r\n        workData: []\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            data:initData,\r\n            workData: initData.workData\r\n        })\r\n        // axios.get(`${BASE_URL}`)\r\n        //     .then(res => {\r\n        //         this.setState({\r\n        //             data: res.data,\r\n        //             workData: res.data.workData\r\n        //         })\r\n        //         console.log(this.state.data)\r\n        //     })\r\n        // .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"work-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro mb-4\">\r\n                                <div className=\"intro-content\">\r\n                                    <span>{this.state.data.preHeading}</span>\r\n                                    <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        {this.state.workData.map((item, idx) => {\r\n                            return (\r\n                                <div key={`wd_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                    {/* Single Work */}\r\n                                    <div className=\"single-work\">\r\n                                        <i className={item.icon} />\r\n                                        <h4>{item.title}</h4>\r\n                                        <p>{item.text}</p>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Work;","/Users/maryamsaleem/Desktop/ariswap/frontend/src/config/config.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/utils/functions.js",["567","568","569","570","571","572","573","574","575","576"],"import axios from \"axios\";\nimport { ENV } from '../config/config';\nimport { Redirect } from 'react-router-dom';\nimport { toast } from 'react-toastify'\nimport { useDispatch } from \"react-redux\";\nimport { emptyError } from '../redux/shared/error/error.action';\nimport { GET_ERRORS, BEFORE_BID, GET_BIDS, DELETE_BID, CREATE_BID, ACCEPT_BID } from '../redux/types';\nlet baseUrl = process.env.REACT_APP_BASE_URL;\n\nexport const axiosSyncPost = (url, data, isMultipart = false) => {\n  return new Promise((resolve, reject) => {\n    const params = new URLSearchParams();\n    let keys = Object.keys(data);\n    for (let x = 0; x < keys.length; x++) {\n      params.append(keys[x], data[keys[x]]);\n    }\n\n    const config = {\n      headers: {\n        'Content-Type': isMultipart ? 'multipart/form-data' : 'application/x-www-form-urlencoded',\n        \"Authorization\": ENV.Authorization,\n        \"x-auth-token\": ENV.x_auth_token,\n        'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n      },\n    };\n\n    url = baseUrl + url;\n\n    axios.post(url, params, config).then(\n      (res) => {\n        resolve(res.data);\n      },\n      (error) => {\n        resolve(error)\n      },\n    );\n  });\n};\n\nexport const axiosPostFormData = (url, body, isMultipart = false) => {\n\n  let testingURl=\"http://localhost:5000/v1/front/nfts/create\";\n  return new Promise((resolve, reject) => {\n    const config = {\n      headers: {\n        // 'Content-Type': isMultipart ? 'multipart/form-data' : 'application/json',\n        \"Authorization\": ENV.Authorization,\n        \"x-auth-token\": ENV.x_auth_token,\n        'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n      },\n    };\n\n    // url = testingURl + url;\n\n\n    axios.post(ENV.url + url, body, config).then(\n      (res) => {\n        // console.log(res,\"res success\");\n        resolve(res.data)\n      },\n      (error) => {\n        console.log(error,\"res error\");\n        resolve(error)\n      },\n    );\n  });\n};\n\nexport const decimalNumberValidator = (evt) => {\n  let e = evt || window.event;\n\n  // Allow: backspace, delete, tab, escape, enter and .\n  const specialKeys = [46, 8, 9, 27, 13, 110]\n\n  // Allow: Ctrl+A,Ctrl+C,Ctrl+V, Command+A\n  if (specialKeys.includes(e.keyCode) ||\n    // Allow: Ctrl+A,Ctrl+C,Ctrl+Z,Ctrl+X Command+A\n    ((e.keyCode === 65 || e.keyCode === 67 || e.keyCode === 90 || e.keyCode === 88) && (e.ctrlKey === true || e.metaKey === true)) ||\n    // Allow: home, end, left, right, down, up\n    (e.keyCode >= 35 && e.keyCode <= 40)) {\n    // let it happen, don't do anything\n    return;\n  }\n\n  let key = e.keyCode || e.which;\n  if ((!e.shiftKey && !e.altKey && !e.ctrlKey) &&\n    (((key === 190 || key === 110) ||\n      (key >= 48 && key <= 57)) ||\n      (key >= 96 && key <= 105) ||\n      key === 8 || key === 9 || key === 13 ||\n      key === 35 || key === 36 ||\n      key === 37 || key === 39 ||\n      key === 46 || key === 45)) {\n  }\n  else {\n    e.returnValue = false;\n    if (e.preventDefault) e.preventDefault();\n  }\n}\nexport const setFixedPriceNftTOken=(body)=>{\n  let url = `${ENV.url}nftFixedTokens/getFixedtokens`;\n  // let url = `http://3.142.91.8/v1/front/auctions/live`;\n \n  // console.log(url,\"url==>123\")\n    \n\n  fetch(url, {\n      method: 'POST',\n      headers: {\n          'content-type': 'application/json',\n          'Authorization': ENV.Authorization,\n          'x-auth-token': ENV.x_auth_token,\n          'Access-Control-Allow-Origin': '*',\n          'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n      },\n      body:body\n  }).then(res => res.json()).then(data => {\n      // console.log(data,\"created nft token\")\n      if (data.success) {\n        \n      } else {\n         \n      }\n  }).catch(errors => {\n      console.log(errors,\"error\")\n  })\n}\n\nexport const changeOwnerShip=(nftOwnerId,currentUserId)=>{\n  // alert(\"changing ownership\")\n  let url = `${ENV.url}nfts/editNft`;\n  // console.log('fetch url', url)\nlet body={\n  nftOwnerId,\n  currentUserId\n}\n  fetch(url, {\n    method: 'PATCH',\n    headers: {\n      'content-type': 'application/json',\n      'Authorization': ENV.Authorization,\n      'x-auth-token': ENV.x_auth_token,\n      'Access-Control-Allow-Origin': '*',\n      'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n  },\n    body:JSON.stringify(body)\n     }).then(res => res.json()).then(data => {\n       if(data.status === 'success'){\n        toast.success(\"Successfully bought nft\")\n        window.location.href= '/explore-all'\n       }\n      // console.log(data,\"response from the change ownershiop\")\n     }).catch(errors => {\n       console.log('error',errors)\n    })\n}\nexport const acceptBit = (tokenId,body)  => {\n \n   \n    const url = `${ENV.url}bid/accept`;\n\n    fetch(url, {\n        method: 'PUT',\n        headers: {\n            'content-type': 'application/json',\n            'Authorization': ENV.Authorization,\n            'x-auth-token': ENV.x_auth_token,\n            'Access-Control-Allow-Origin': '*',\n            'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n        },\n        body: JSON.stringify(body)\n    }).then(res => res.json()).then(data => {\n        if (data.success) {\n            // acceptNftOffer(tokenId,body);\n            \n            toast.success(data.message)\n            window.location.href= '/explore-all'\n            // dispatch({\n            //     type: ACCEPT_BID,\n            //     payload: data\n            // })\n        } else {\n            toast.error(data.message)\n          \n        }\n    }).catch(error => {\n        if (error.response && error.response.data) {\n            const { data } = error.response\n            if (data.message)\n                toast.error(data.message)\n        }\n      \n    })\n\n}\n\nexport const placeBidApi = (body) =>  {\n\n  console.log('im here')\n\n\n  const url = `${ENV.url}bid/create`;\n\n    fetch(url, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n            'Authorization': ENV.Authorization,\n            'x-auth-token': ENV.x_auth_token,\n            'Access-Control-Allow-Origin': '*',\n            'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n        },\n        body: JSON.stringify(body)\n    }).then(res => res.json()).then(data => {\n      console.log('data', data)\n        if (data.success) {\n    //    placeBidNft(body,tokenId,price,toAddress,fromAddress)\n           \n            toast.success(data.message)\n            window.location.href= '/explore-all'\n            // dispatch({\n            //     type: CREATE_BID,\n            //     payload: data\n            // })\n        } else {\n            toast.error(data.message)\n            // dispatch({\n            //     type: GET_ERRORS,\n            //     payload: data\n            // })\n        }\n    }).catch(error => {\n      console.log('listing', error)\n        if (error.response && error.response.data) {\n            const { data } = error.response\n            if (data.message)\n                toast.error(data.message)\n        }\n        // dispatch({\n        //     type: GET_ERRORS,\n        //     payload: error\n        // })\n    })\n \n \n}","/Users/maryamsaleem/Desktop/ariswap/frontend/src/utils/web3.js",["577","578","579","580","581","582","583"],"import Web3 from \"web3\";\nimport { toast } from 'react-toastify'\nimport contractAbi from './../utils/abis/token.json';\nimport {ENV} from './../config/config';\nimport liveAuctionsAbi from './abis/ARISwapToken.json'\nimport {liveAuction} from './abiSetup.js'\nimport {placeBid} from '../components/bids/bids.action'\nimport {setFixedPriceNftTOken, acceptBit, placeBidApi} from './functions'\nimport {changeOwnerShip} from './functions'\nimport { Redirect } from 'react-router-dom';\n\nlet Contract = require('web3-eth-contract');\n\nconst nftContractAddress = ENV.nftContractAddress;\n// Contract.setProvider();\n// console.log(window.web3?.currentProvider,\"current provider\")\n\nlet requiredChainId = parseInt(process.env.REACT_APP_REQUIRED_CHAIN)\n\n//get web3\nvar web3Provider=null;\nexport const getWeb3 = async ()=> {\n    // if(window.ethereum) {\n    //     const web3 = new Web3(Web3.givenProvider);\n    //     return web3;\n    // }\n    // else {\n    //     return false;   \n    // }\n    ////////////////////////////////\n    if (window.ethereum) {\n        web3Provider = window.ethereum;\n        try {\n          // Request account access\n          await window.ethereum.enable();\n        } catch (error) {\n          // User denied account access...\n          console.error(\"User denied account access\")\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        web3Provider = window.web3.currentProvider;\n      }\n      // If no injected web3 instance is detected, fall back to Ganache\n      else {\n        web3Provider = new Web3.providers.HttpProvider('http://localhost:7545');\n      }\n\n     var web3 = new Web3(web3Provider);\n      return web3\n    ///////////////////////////////\n}\n\n// TEMP. ADDING THIS METHOD - COPY OF CONNECTMETAMASK\nexport const connectMetamaskCopy = async ()=> {\n    if(window.ethereum) {\n        const web3 = new Web3(Web3.givenProvider);\n        const network = await web3.eth.net.getNetworkType();\n        await window.ethereum.enable();\n        let accounts = await web3.eth.getAccounts();\n        let chainId = await web3.eth.getChainId();\n        if(chainId !== requiredChainId) {\n            // toast.error(`Please switch to ${ENV.requiredChainName} testnet`);\n        }\n        return accounts[0];\n    }\n    else {\n        // alert(\"Please install metamask to connect to the Marketplace\");\n        toast.error(\"Please install metamask to connect to the Marketplace\");\n    }\n}\n\nexport const connectMetamask = async ()=> {\n    if(window.ethereum) {\n        const web3 = new Web3(Web3.givenProvider);\n        window.web3=new Web3(window.ethereum)\n        const network = await web3.eth.net.getNetworkType();\n        await window.ethereum.enable();\n        let accounts = await web3.eth.getAccounts();\n        let chainId = await web3.eth.getChainId();\n        if(chainId !== requiredChainId) {\n            // toast.error(`Please switch to ${ENV.requiredChainName} testnet`);\n        }\n        return accounts[0];\n    }\n    else {\n        // alert(\"Please install metamask to connect to the Marketplace\");\n        toast.error(\"Please install metamask to connect to the Marketplace\");\n    }\n}\n\nexport const signRequest = async ()=> {\n    if(window.ethereum) {\n        // const web3 = await getWeb3();\n        // if (!web3) {\n        //     toast.error(\"No web3 instance found\");\n        //     return false;\n        // }\n   \n        const web3 = new Web3(Web3.givenProvider);\n        let accounts = await web3.eth.getAccounts();\n        let address = accounts[0];\n        let signature = await handleSignMessage(address);\n        // placeBid()\n        // console.log(signature,\"signature===>\")\n        return signature;\n    }\n    else {\n        alert(\"Please install metamask to connect to the Marketplace\");\n    }\n}\n// export const testing=()=>{\n//     const test=web3.eth.\n// }\n\nexport const mint = async (metaData) => {\n    // alert(\"dfdfdf\")\n    const web3 = await getWeb3();\n    if (!web3) {\n        toast.error(\"No web3 instance found\");\n        return false;\n    }\n    // let tokenContract1 = new Contract(liveAuctionsAbi., nftContractAddress);\n    try {\n   \n        let connectedAddress = await connectMetamask();\n        // console.log(connectedAddress,\"connectedAddress\")\n        let tokenContract = new Contract(liveAuctionsAbi, nftContractAddress);\n        // const txCount = await web3.eth.getTransactionCount(connectedAddress);\n        const myNewData = await tokenContract.methods\n            .createNewNFT(connectedAddress, metaData)\n            .encodeABI();\n        \n            // console.log(myNewData,\"checking create nft  result==>\")\n        // const gasLimit = await web3.eth.estimateGas({\n        //     from: connectedAddress,\n        //     nonce: txCount,\n        //     to: nftContractAddress,\n        //     data: myNewData,\n        // });\n        // const gas2 = await web3.eth.getGasPrice();\n        // const transactionParameters = {\n        //     nonce: web3.utils.toHex(txCount), // ignored by MetaMask\n        //     gasPrice: web3.utils.toHex(gas2), // customizable by user during MetaMask confirmation.\n        //     gasLimit: web3.utils.toHex(gasLimit), // customizable by user during MetaMask confirmation.\n        //     to: nftContractAddress, // Required except during contract publications.\n        //     from: connectedAddress, // must match user's active address.\n        //     data: myNewData, // Optional, but used for defining smart contract creation and interaction.\n        //     // chainId: '0x3', // Used to prevent transaction reuse across blockchains. Auto-filled by MetaMask.\n        // };\n        // // As with any RPC call, it may throw an error\n        // const txHash = await window.ethereum.request({\n        //     method: 'eth_sendTransaction',\n        //     params: [transactionParameters],\n        // });\n        toast.success(`Success! NFT Created successfully!`)\n        return true;\n    } catch (e) {\n        // alert(\"inCatch\")\n        let eMessage = e.message.split('{')[0] || '';\n        // console.log(eMessage,\"message==>\")\n        toast.error(eMessage);\n        return false;\n    }\n    \n}\n\nconst handleSignMessage = (address) => {\n    return new Promise((resolve, reject) =>{\n        try {\n            const web3 = new Web3(Web3.givenProvider);\n            web3.eth.personal.sign(\n                web3.utils.fromUtf8(`${ENV.appName} uses this cryptographic signature in place of a password, verifying that you are the owner of this address.`),\n                address,\n                (err, signature) => {\n                    if (err) return reject(err);\n                    return resolve(signature);\n                }\n            )\n        }\n        catch (e) {\n            console.log(e);\n        }\n        \n    }\n    );\n};\n\nexport const ClaimFundsAfterBidding = (token) => {\n    // getting accounts\n    return new Promise ( async (resolve, reject) => {\n    const web3 = new Web3(Web3.givenProvider);\n     let accounts = await web3.eth.getAccounts();\n     let address = accounts[0];\n     liveAuction.methods.ClaimFundsAfterBidding(token).send(\n         {\n            from:address\n        }\n            ).then(x=> {\n        \n            return resolve(x);\n        });\n     }).catch((err)=>{\n        //  return reject(err);\n        console.log(\"err in catch block error===> \",err)\n    });\n}\n\nexport const createNft= async (metaData,nftId)=>{\n    //getting accounts\n    const web3 = new Web3(Web3.givenProvider);\n    let accounts = await web3.eth.getAccounts();\n    // console.log(accounts,\"accounts\")\n    let address = accounts[0];\n    // console.log(address,\"addresss==>\")\n    console.log(metaData,\"metaData==>\")\n    console.log(liveAuction,\"liveAuction.==>\")\n    console.log(liveAuction.methods,\"liveAuction.methods==>\")\n    //create NFT\n    liveAuction.methods.createNewNFT(address,metaData).send({\n            value: 1000000000000000,\n            // value:0,\n            from:address,\n            to:address,\n         }\n        ).then((res)=>{\n            // console.log(res.events.Transfer.returnValues.tokenId,\"res of createNFT===>\")\n            let data={\n                nftToken:res.events.Transfer.returnValues.tokenId,\n                nftId\n            }\n\n            setNftToken(data)\n\n            toast.success(\"NFT created successfully\")\n            // window.location.href= '/explore-all'\n    })\n    .catch((err)=>{\n        console.log('err', err)\n        if(err.code=== 4001){\n            let url = process.env.REACT_APP_BASE_URL + `nfts/update`;\n             var payload = {\n                 status: 0,\n                 _id:nftId\n             }\n            fetch(url, {\n             method: 'POST',\n             headers: {\n                'content-type': 'application/json',\n                'Authorization': ENV.Authorization,\n                'x-auth-token': ENV.x_auth_token,\n                'Access-Control-Allow-Origin': '*',\n                'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n            },\n            body: JSON.stringify(payload)\n        }).then(res => res.json()).then(data => {\n          \n            console.log(data,\"data==>\")\n            if (data.success === false) {\n                toast.error(err.message)\n            } \n        }).catch(error => {\n            // alert(\"in setting nft then\")\n            console.log(error,\"error in catch blcok\")\n            if (error.response && error.response.data) {\n                toast.error(err.message)\n            \n            }\n            else {\n        toast.error(\"Transaction Failed Please check wallet history\")\n\n            }\n         \n        })\n        }\n        \n    })\n    // return res\n}\n\n    //openNFTForBidding\n    export const openNFTForBidding=async(token,timeduration)=>{\n        // console.log(token,timeduration,\"checking token and time duration\")\n         //openNFTForBidding\n         let tokenId=+token;\n         const web3 = new Web3(Web3.givenProvider);\n\n         let accounts = await web3.eth.getAccounts();\n        //  console.log(accounts,\"accounts\")\n         let address = accounts[0];\n        //  console.log(address,\"addresss==>\")\n       liveAuction.methods.openNFTForBiddingForSpecific(tokenId,timeduration).send({from:address}).then((res)=>{\n            //  console.log(res ,\"res of openNFTForBidding===>\")\n           \n    })\n    .catch((err)=>{\n        toast.error(\"Transaction Failed Please check wallet history\")\n    })\n    }\n    \n    export const setNftToken=(body)=>{\n        // console.log(body,\"body===>\")\n        // let dummy={\n        //     nftToken:\"123\",\n        //     nftId:\"123\"\n\n        // }\n\n        let url = process.env.REACT_APP_BASE_URL + `nftTokens/addToken`;\n\n        fetch(url, {\n         method: 'POST',\n         headers: {\n            'content-type': 'application/json',\n            'Authorization': ENV.Authorization,\n            'x-auth-token': ENV.x_auth_token,\n            'Access-Control-Allow-Origin': '*',\n            'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n        },\n        body: JSON.stringify(body)\n    }).then(res => res.json()).then(data => {\n        // alert(\"in setting nft then\")\n        // console.log(data,\"data==>\")\n        if (data.success) {\n            window.location.href= '/explore-all'\n        //    console.log(data,\"data in success\")\n        } else {\n         \n        }\n    }).catch(error => {\n        // alert(\"in setting nft then\")\n        console.log(error,\"error in catch blcok\")\n        if (error.response && error.response.data) {\n        \n        }\n     \n    })\n    }\n\n    export const NftOwner=async ()=>{\n        const web3 = new Web3(Web3.givenProvider);\n\n        let accounts = await web3.eth.getAccounts();\n        // console.log(accounts,\"accounts\")\n        let address = accounts[0];\n    //     console.log(address,\"addresss==>\")\n    // //OwnerNFT\n       liveAuction.methods.ownerOf(5).send({from:address}).then((res)=>{\n            //  console.log(res,\"res of createNFT===>\")\n    })\n    .catch((err)=>{\n        console.log(err,\"err in catch block error===>\")\n    })\n    }\n\n    export const placeBidNft=async(body,tokenId,price,toAddress,fromAddress)=>{\n        const web3 = new Web3(Web3.givenProvider);\n\n        let accounts = await web3.eth.getAccounts();\n        // console.log(accounts,\"accounts\")\n        let address = accounts[0];\n        // console.log(address,\"addresss==>\")\n        // console.log(price,\"price888888888888888888888\")\n        // console.log(toAddress,\"toAdress\")\n   \n            liveAuction.methods.placeBid(tokenId).send({value:price.amount,from:address}).then((res)=>{\n                console.log('bid before', res)\n                console.log('body', body)\n                placeBidApi(body,tokenId,price,toAddress,fromAddress)\n                // window.location.href= '/explore-all'\n            //  console.log(res,\"res of place bid result===>\")\n        })\n        // alert(price)\n      .catch((err)=>{\n            toast.error(\"Transaction Failed Please check wallet history\")\n          })\n    }\n\n    export const SellOnFixedPrice=async (tokenId,price)=>{\n        const web3 = new Web3(Web3.givenProvider);\n\n        let accounts = await web3.eth.getAccounts();\n        // console.log(accounts,\"accounts\")\n        let address = accounts[0];     \n            //   Put on sale\n            // console.log('live auction', liveAuction)\n            liveAuction.methods.PutOnSale(tokenId).send({from:address}).then((res)=>{\n                \n                // setFixedPriceNftTOken()\n\n    })\n     \n.catch((err)=>{\n    toast.error(\"Transaction Failed Please check wallet history\")\n})\n    }\n\n    export const BuyFixedPriceNFTs=async (price,tokenId,nftOwnerId)=>{\n        // console.log(tokenId,\"token id in buy fixed price==>\")\n        const web3 = new Web3(Web3.givenProvider);\n\n        let accounts = await web3.eth.getAccounts();\n        // console.log(accounts,\"accounts\")\n        let address = accounts[0];\n        // console.log(address,\"addresss==>\")\n        // console.log(price,\"price888888888888888888888\")\n        // alert(price)\n        let finalPrice = price.toString()\n        // console.log('final price', finalPrice)\n       \n            liveAuction.methods.BuyFixedPriceNFTs(tokenId).send({value:finalPrice,from:address}).then((res)=>{\n                // console.log(res,\"res of place bid result===>\")\n                let currentUserId=ENV.getUserKeys('_id')._id;\n                changeOwnerShip(nftOwnerId,currentUserId)\n\n\n        })\n            //   Place Bid\n       \n.catch((err)=>{\n    toast.error(\"Transaction Failed Please check wallet history\")\n})\n    }\n\n    export const getCurrentAddress= async ()=>{\n        const web3 = new Web3(Web3.givenProvider);\n\n        let accounts = await web3.eth.getAccounts();\n        // console.log(accounts,\"accounts\")\n        let address = accounts[0];\n        return address\n    }\n\n    export const acceptNftOffer=async(tokenId,body)=>{\n\n\n        const web3 = new Web3(Web3.givenProvider);\n\n        let accounts = await web3.eth.getAccounts();\n        // console.log(accounts,\"accounts\")\n        let address = accounts[0];\n        // console.log(address,\"addresss==>\")\n        // console.log('token before sending', tokenId)\n            //  Accept offer \n       liveAuction.methods.acceptOffer(tokenId).send({from:address}).then((res)=>{\n           \n        // console.log(res,\"res of accept bid result===>\")\n        // toast.success(\"Bid accepted successfully\")\n        acceptBit(tokenId,body)\n    \n})\n.catch((err)=>{\n   console.log(err,\"err in catch block error===>\")\n})\n    }\nexport const signTransaction=async ()=>{\n\n    const web3 = new Web3(Web3.givenProvider);\n    // const nonce = await web3.eth.getTransactionCount(\"myAddress\", 'latest');\n    const rawTransaction = {\n        \"from\": \"Keystore account id\",\n        \"to\": \"Account you want to transfer to\",\n        \"value\": 100,\n        \"gas\": 0.21000,\n    \n      };\n\n      const signedTx = await web3.eth.accounts.signTransaction(rawTransaction, \"PRIVATE_KEY\");\n\n      web3.eth.sendSignedTransaction(signedTx.rawTransaction, function(error, hash) {\n        if (!error) {\n        //   console.log(\"🎉 The hash of your transaction is: \", hash, \"\\n Check Alchemy's Mempool to view the status of your transaction!\");\n        } else {\n        //   console.log(\"❗Something went wrong while submitting your transaction:\", error)\n        }\n       });\n   \n}\n","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/nft-preview/nft-preview.js",["584"],"import React from 'react';\r\nimport { ENV } from '../../config/config'\r\nconst itemPlaceholderImg = ENV.globalPlaceholderImage\r\n\r\nconst NFTPreview = (props) => {\r\n    return (\r\n        <div className=\"card no-hover text-center\">\r\n            <div className=\"image-over\">\r\n                <img id=\"nft-image\" className=\"card-img-top\" src={props.image ? props.image : itemPlaceholderImg} alt=\"NFT image\" />\r\n            </div>\r\n            <div className=\"card-caption col-12 p-0\">\r\n                <div className=\"card-body mt-4\">\r\n                    <h5 className=\"mb-3\">{props.name}</h5>\r\n                    <p className=\"my-3\">{props.currentPrice ? props.currentPrice : 0}{ENV.currency}</p>\r\n                    {/* <p>{props.sold ? props.sold : 0} of {props.copies ? props.copies : 0} Copies</p> */}\r\n                    {/* <div className=\"input-group\">\r\n                        <div className=\"input-group-append\">\r\n                            <button><i className=\"icon-docs\" /></button>\r\n                        </div>\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NFTPreview;","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/author-profile/author-profile.js",["585","586","587","588","589"],"import React, { useEffect } from 'react';\r\nimport {ENV} from './../../config/config';\r\n\r\nconst AuthorProfile = (props) => {    \r\n    useEffect(()=> {\r\n\r\n    },[])\r\n    return (\r\n        <div className=\"card-wrapper\">\r\n       <div className=\"card no-hover text-center\">\r\n            <div className=\"image-over\">\r\n                <img id=\"nft-image\" className=\"card-img-top\" src={props.profileImage ? props.profileImage: ENV.globalPlaceholderImage} alt=\"User Profile\" />\r\n            </div>\r\n            <div className=\"card-caption col-12 p-0\">\r\n                <div className=\"card-body mt-4\">\r\n                    <h5 className=\"mb-3\">{props.username}</h5>\r\n                    <p className=\"my-3\">{props.description}</p>\r\n                    <div className=\"input-group\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"0x000000000000000000\" readOnly value={props.address}/>\r\n                        <div className=\"input-group-append\">\r\n                            <button><i className=\"icon-docs\" /></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"social-icons d-flex justify-content-center my-3\">\r\n                        {\r\n                            props.facebookLink && <a className=\"facebook\" href={props.facebookLink} target=\"_blank\">\r\n                                <i className=\"fab fa-facebook-f\" />\r\n                            </a>\r\n                        }\r\n                        {\r\n                            props.twitterLink && <a className=\"twitter\" href={props.twitterLink} target=\"_blank\">\r\n                                <i className=\"fab fa-twitter\" />\r\n                            </a>\r\n                        }\r\n                        {\r\n                            props.gPlusLink && <a className=\"google-plus\" href={props.gPlusLink} target=\"_blank\">\r\n                                <i className=\"fab fa-google-plus-g\" />\r\n                            </a>\r\n                        }\r\n                        {\r\n                            props.vineLink && <a className=\"vine\" href={props.vineLink} target=\"_blank\">\r\n                                <i className=\"fab fa-vine\" />\r\n                            </a>\r\n                        }\r\n                    </div>\r\n                    {\r\n                        props.followText &&\r\n                        <a className=\"btn btn-bordered-white btn-smaller\" href=\"#\">{props.followText}</a>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n \r\n    );\r\n}\r\nexport default AuthorProfile;","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/faq/faq.js",["590","591"],"import { useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { beforeFaq, getFaqs } from \"./faq.action\"\r\n\r\nconst Faq = (props) => {\r\n\r\n    const [data, setData] = useState(null)\r\n\r\n    useEffect(() => {\r\n        props.getFaqs()\r\n     \r\n    }, [])\r\n\r\n    useEffect(() =>{\r\n        if(props.faqs.faqsAuth){\r\n            const {faqs} = props.faqs.faqs\r\n            setData(faqs)\r\n        }\r\n    }, [props.faqs.faqsAuth])\r\n\r\n    return (\r\n        <section className=\"faq-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span>{\"FAQ\"}</span>\r\n                            <h3 className=\"mt-3 mb-0\">{\"Frequently Asked Questions\"}</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12\">\r\n                        {/* FAQ Content */}\r\n                        <div className=\"faq-content\">\r\n                            {/* Netstorm Accordion */}\r\n                            <div className=\"accordion\" id=\"netstorm-accordion\">\r\n                                <div className=\"row justify-content-center\">\r\n                                    <div className=\"col-12 col-md-10\">\r\n                                        {/* Single Accordion Item */}\r\n                                        {data ? data.map((item, idx) => {\r\n                                            return (\r\n                                                <div key={`fd_${idx}`} className=\"single-accordion-item p-3\">\r\n                                                    {/* Card Header */}\r\n                                                    <div className=\"card-header bg-inherit border-0 p-0\">\r\n                                                        <h2 className=\"m-0\">\r\n                                                            <button className={\"btn d-block text-left w-100 collapsed py-4\"} type=\"button\" data-toggle=\"collapse\" data-target={`#helpOption-${idx}`}>\r\n                                                                {item.title}\r\n                                                            </button>\r\n                                                        </h2>\r\n                                                    </div>\r\n                                                    <div id={`helpOption-${idx}`} className={\"collapse\"} data-parent=\"#netstorm-accordion\">\r\n                                                        {/* Card Body */}\r\n                                                        <div className=\"card-body py-3\" dangerouslySetInnerHTML={{__html: item.desc}}>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            );\r\n                                        }) : ''}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    faqs: state.faqs,\r\n    error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    beforeFaq, \r\n    getFaqs\r\n})(Faq);","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/sidebar/sidebar.js",["592","593","594"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-2/sidebar\";\r\n\r\nclass Sidebar extends Component {\r\n    state = {\r\n        data: {},\r\n        widgetData_1: [],\r\n        widgetData_2: [],\r\n        widgetData_3: []\r\n    }\r\n    componentDidMount() {\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    widgetData_1: res.data.widgetData_1,\r\n                    widgetData_2: res.data.widgetData_2,\r\n                    widgetData_3: res.data.widgetData_3\r\n                })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <aside className=\"col-12 col-lg-4 pl-lg-5 p-0 float-right sidebar\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 align-self-center text-left\">\r\n                        {/* Widget [categories] */}\r\n                        <div className=\"item widget-categories\">\r\n                            <h4 className=\"title\">{this.state.data.widgetTitle_1}</h4>\r\n                            <ul className=\"list-group list-group-flush\">\r\n                                {this.state.widgetData_1.map((item, idx) => {\r\n                                    return (\r\n                                        <li key={`wdo_${idx}`} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                            <a href=\"#\">{item.title}</a>\r\n                                            <span className=\"badge circle\">{item.content}</span>\r\n                                        </li>\r\n                                    );\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                        {/* Widget [tags] */}\r\n                        <div className=\"item widget-tags\">\r\n                            <h4 className=\"title\">{this.state.data.widgetTitle_2}</h4>\r\n                            {this.state.widgetData_2.map((item, idx) => {\r\n                                return (\r\n                                    <a key={`wdt_${idx}`} href=\"\" className=\"badge tag\">{item.title}</a>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        {/* Widget [share-this] */}\r\n                        <div className=\"item widget-share-this\">\r\n                            <h4 className=\"title\">{this.state.data.widgetTitle_3}</h4>\r\n                            <ul className=\"navbar-nav social share-list\">\r\n                                {this.state.widgetData_3.map((item, idx) => {\r\n                                    return (\r\n                                        <li key={`wdth_${idx}`} className=\"nav-item\">\r\n                                            <a href=\"#\" className=\"nav-link\"><i className={item.icon} /></a>\r\n                                        </li>\r\n                                    );\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </aside>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/collections/components/NftCard/NftCard.js",["595","596"],"import react from 'react';\nimport { Link } from 'react-router-dom';\nimport './NftCard.css'\n\nconst NftCard=(props)=>{\n    const filterCreator=(nft)=>{\n     const result=   props.creators.find((item)=>item._id===nft.nftOwnerId)\n  if(result?.username){\n\n      return result?.username\n  }\n  else {\n      return \"no username found\"\n  }\n    }\n    const {userId,nft}=props;\n    return (\n        <div className=\"NftCard-Container \">\n            <Link to={`/item-details?item=${window.btoa(props.nft._id)}`}>\n                <img src={props?.nft?.image?props.nft.image:\"https://picsum.photos/200\" }alt=\"testinImage\" className=\"nft-car-img\" />\n            </Link>\n\n            <div className=\"NftCard-description p-3\">\n             <p className=\"mb-0 text-white\">{props?.nft?.name?props.nft.name:\"someTHing\"}</p>\n             <p className=\"text-white\">Owned By: {filterCreator(props.nft)}</p>\n             <div className=\"d-flex w-100 justify-content-between\">\n             <p className=\"mb-0 text-white\" >{props?.nft?.currentPrice?props.nft.currentPrice:\"0.04\"}</p>\n             <p className=\"mt-0 text-white\">{props?.nft?.sold?props.nft.sold:\"0\"} out of {props.nft.copies}</p>\n             </div>\n             <div className=\"py-3\">\n             \n             <Link to={`/item-details?item=${window.btoa(props.nft._id)}`} id=\"wallet-address\" className=\"btn ml-lg-auto btn-bordered-white\">\n                 <i className=\"icon-wallet mr-md-2\" />\n               { nft.nftOwnerId===userId?\"Sell NFT\" :nft.sellingMethod===undefined?\"NFT Details\":(nft.nftOwnerId!==userId && nft.sellingMethod==1)?\"Buy Now\":\"Place a Bid\"}\n                 </Link>\n             </div>\n            </div>\n        </div>\n    )\n}\n\nexport default NftCard","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/help/help.js",["597"],"import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"Help Center\",\r\n    heading: \"How can we help you?\",\r\n    content: \"\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        icon: \"icon icon-plane text-effect\",\r\n        title: \"Getting Started\",\r\n        content: \"Learn how to create an account, set up your wallet, and what you can do on NetStorm\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        icon: \"icon icon-note text-effect\",\r\n        title: \"Creating\",\r\n        content: \"Learn how to create your very first NFT and how to create your NFT collections so you can begin selling and sharing\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        icon: \"icon icon-handbag text-effect\",\r\n        title: \"Buying\",\r\n        content: \"Learn how to purchase your first NFT and understand gas fees and what's gas free on NetStorm\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        icon: \"icon icon-chart text-effect\",\r\n        title: \"Selling\",\r\n        content: \"Learn how list your NFTs for sale and understand the different ways to list your NFTs\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        icon: \"icon icon-link text-effect\",\r\n        title: \"Partners\",\r\n        content: \"Learn how you can partner with us to showcase your NFT drops\"\r\n    },\r\n    {\r\n        id: \"6\",\r\n        icon: \"icon icon-flag text-effect\",\r\n        title: \"Developers\",\r\n        content: \"Learn how you can develop with NetStorm &amp; sell them on Marketplace\"\r\n    }\r\n]\r\n\r\nclass HelpCenter extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"help-center-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.initData.pre_heading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\r\n                                <p>{this.state.initData.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center items\">\r\n                        {this.state.data.map((item, idx) => {\r\n                            return (\r\n                                <div key={`hd_${idx}`} className=\"col-12 col-md-6 col-lg-4 item\">\r\n                                    {/* Help Card */}\r\n                                    <div className=\"card help-card\">\r\n                                        <a className=\"d-block text-center\" href=\"#\">\r\n                                            <i className={item.icon} />\r\n                                            <h4>{item.title}</h4>\r\n                                            <p>{item.content}</p>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HelpCenter;","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/scroll-up/sroll-up.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/modal-menu/modal-menu.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/footer/footer.js",["598","599","600","601","602","603","604"],"import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../../assets/images/logo.png'\nimport { connect } from 'react-redux'\nimport { getFooter } from './footer.action'\nimport {ENV} from './../../config/config';\n\nconst Footer = (props) => {\n\n    const [data, setData] = useState({\n        facebook: '',\n        twitter: '',\n        instagram: '',\n        youtube: '',\n        vine: '',\n        desc: ''\n    })\n\n    useEffect(() => {\n        props.getFooter()\n    }, [])\n\n    useEffect(() => {\n        if (props.settings.settingsAuth) {\n            setData(props.settings.settings)\n        }\n    }, [props.settings.settingsAuth])\n\n    return (\n        <footer className=\"footer-area\">\n            {/* Footer Top */}\n            <div className=\"footer-top\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\n                            {/* Footer Items */}\n                            <div className=\"footer-items\">\n                                {/* Logo */}\n                                <Link className=\"navbar-brand\" to=\"/\">\n                                    <img src={logo} alt=\"\" />\n                                </Link>\n                                <p>{data.desc}</p>\n                                {/* Social Icons */}\n                                <div className=\"social-icons d-flex\">\n                                    {\n                                        data.facebook ?\n                                            <a href={data.facebook} target=\"_blank\">\n                                                <i className={\"fab fa-facebook-f\"} />\n                                                <i className={\"fab fa-facebook-f\"} />\n                                            </a> : ''\n                                    }\n\n                                    {\n                                        data.twitter ?\n                                            <a href={data.twitter} target=\"_blank\">\n                                                <i className={\"fab fa-twitter\"} />\n                                                <i className={\"fab fa-twitter\"} />\n                                            </a> : ''\n                                    }\n\n                                    {\n                                        data.instagram ?\n                                            <a href={data.instagram} target=\"_blank\">\n                                                <i className={\"fab fa-instagram\"} />\n                                                <i className={\"fab fa-instagram\"} />\n                                            </a> : ''\n                                    }\n\n                                    {\n                                        data.youtube ?\n                                            <a href={data.youtube} target=\"_blank\">\n                                                <i className={\"fab fa-youtube\"} />\n                                                <i className={\"fab fa-youtube\"} />\n                                            </a> : ''\n                                    }\n\n                                    {\n                                        data.vine ?\n                                            <a href={data.vine} target=\"_blank\">\n                                                <i className={\"fab fa-vine\"} />\n                                                <i className={\"fab fa-vine\"} />\n                                            </a> : ''\n                                    }\n\n\n\n\n\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\n                            {/* Footer Items */}\n                            <div className=\"footer-items\">\n                                {/* Footer Title */}\n                                <h4 className=\"footer-title\">{\"Useful Links\"}</h4>\n                                <ul>\n                                    <li><Link to=\"/explore-all\">All NFTs</Link></li>\n                                    <li><Link to=\"/how-it-works\">How It Works</Link></li>\n                                    <li><Link to=\"/create\">Create</Link></li>\n                                    <li><Link to=\"/privacy-and-terms\">Privacy & Terms</Link></li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\n                            {/* Footer Items */}\n                            <div className=\"footer-items\">\n                                {/* Footer Title */}\n                                <h4 className=\"footer-title\">{\"Community\"}</h4>\n                                <ul>\n                                    <li><Link to=\"/help-center\">Help Center</Link></li>\n                                    <li><Link to=\"/contact\">Contact</Link></li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div className=\"col-12 col-sm-6 col-lg-3\">\n                            {/* Footer Items */}\n                            <div className=\"footer-items\">\n                                {/* Footer Title */}\n                                <h4 className=\"footer-title\">{\"Subscribe Us\"}</h4>\n                                {/* Subscribe Form */}\n                                <div className=\"subscribe-form d-flex align-items-center\">\n                                    <input type=\"email\" className=\"form-control\" placeholder=\"info@yourmail.com\" />\n                                    <button type=\"submit\" className=\"btn\"><i className=\"icon-paper-plane\" /></button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {/* Footer Bottom */}\n            <div className=\"footer-bottom\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            {/* Copyright Area */}\n                            <div className=\"copyright-area d-flex flex-wrap justify-content-center justify-content-sm-between text-center py-4\">\n                                {/* Copyright Left */}\n                                <div className=\"copyright-left\">©2021 {ENV.appName}, All Rights Reserved.</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    );\n}\n\nconst mapStateToProps = state => ({\n    error: state.error,\n    settings: state.settings\n});\n\n\nexport default connect(mapStateToProps, { getFooter })(Footer);","/Users/maryamsaleem/Desktop/ariswap/frontend/src/redux/shared/error/error.action.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/modal-search/modal-search.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/header/header.js",["605","606","607","608","609","610","611"],"import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setWalletAddress, getWalletAddress } from '../wallet/wallet.action'\nimport { connectMetamaskCopy } from '../../utils/web3'\nimport { logoutUser } from '../user/user.action';\nimport { ENV } from './../../config/config';\n\nconst Header = (props) => {\n    const history = useHistory();\n    // console.log(\"history\", history);\n    const [connectedAddress, setConnectedAddress] = useState('');\n    const [loader, setLoader] = useState(true);\n    const { _id } = ENV.getUserKeys('_id');\n\n    useEffect(async () => {\n        // COMMENTED TEMPORARILY\n        // METHOD 1\n        // props.getWalletAddress()\n\n        // METHOD 2 - a\n        // let connectedAddress = await connectMetamask();\n        // setConnectedAddress(connectedAddress)\n\n        // METHOD 3\n        // if (localStorage.getItem('wa')) {\n        //     let connectedAddress = window.atob(localStorage.getItem('wa'))\n        //     setConnectedAddress(connectedAddress)\n        // }\n\n        // METHOD 4\n        let connectedAddress = await connectMetamaskCopy();\n        setConnectedAddress(connectedAddress)\n        props.setWalletAddress(connectedAddress)\n    }, [])\n\n    // set loader to false when address is received\n    useEffect(() => {\n        if (connectedAddress)\n            setLoader(false)\n    }, [connectedAddress])\n\n    // COMMENTED TEMPORARILY\n    // METHOD 2 - b\n    // useEffect(() => {\n    //     if (props.wallet.walletAuth) {\n    //         const { connectedAddress } = props.wallet\n    //         setConnectedAddress(connectedAddress)\n    //     }\n    // }, [props.wallet.walletAuth])\n    const formatAddress = (address) => {\n        return address ? address.substr(0, 6) + '...' + address.substr(-4) : null;\n    }\n    const logoutUser = () => {\n        props.logoutUser();\n        history.push('/login');\n    }\n    \n    return (\n        <header id=\"header\">\n            {/* Navbar */}\n            <nav data-aos=\"zoom-out\" data-aos-delay={800} className=\"navbar navbar-expand\">\n                <div className=\"container header\">\n                    {/* Navbar Brand*/}\n                    <Link className=\"navbar-brand\" to=\"/\">\n                        <img className=\"navbar-brand-sticky\" src=\"/img/new_logo.jpeg\" alt=\"sticky brand-logo\" />\n                    </Link>\n                    <div className=\"ml-auto\" />\n                    {/* Navbar */}\n                    <ul className=\"navbar-nav items mx-auto\">\n                        <li className=\"nav-item dropdown\">\n                            <Link className=\"nav-link\" to=\"/\">Home</Link>\n                        </li>\n                        <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link\">Explore <i className=\"fas fa-angle-down ml-1\" /></a>\n                            <ul className=\"dropdown-menu\">\n                                <li className=\"nav-item\"><Link to=\"/explore-all\" className=\"nav-link\">Explore</Link></li>\n                                <li className=\"nav-item\"><Link to=\"/auctions\" className=\"nav-link\">Live Auctions</Link></li>\n                                {/* <li className=\"nav-item\"><Link to=\"/item-details\" className=\"nav-link\">Item Details</Link></li> */}\n                            </ul>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/activity\" className=\"nav-link\">Activity</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/collections\" className=\"nav-link\">Collections</Link>\n                        </li>\n                        {/* <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link\" href=\"#\">Community <i className=\"fas fa-angle-down ml-1\" /></a>\n                            <ul className=\"dropdown-menu\">\n                                <li className=\"nav-item\"><a href=\"/blog\" className=\"nav-link\">Blog</a></li>\n                                <li className=\"nav-item\"><a href=\"/blog-single\" className=\"nav-link\">Blog Single</a></li>\n                                <li className=\"nav-item\"><a href=\"/help-center\" className=\"nav-link\">Help Center</a></li>\n                            </ul>\n                        </li> */}\n                        {/* <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link\" href=\"#\">Pages <i className=\"fas fa-angle-down ml-1\" /></a>\n                            <ul className=\"dropdown-menu\">\n                                <li className=\"nav-item\"><a href=\"/authors\" className=\"nav-link\">Authors</a></li>\n                                <li className=\"nav-item\"><a href=\"/author\" className=\"nav-link\">Author</a></li>\n                                <li className=\"nav-item\"><a href=\"/wallet-connect\" className=\"nav-link\">Wallet Connect</a></li>\n                                <li className=\"nav-item\"><a href=\"/create\" className=\"nav-link\">Create</a></li>\n                                <li className=\"nav-item\"><a href=\"/login\" className=\"nav-link\">Login</a></li>\n                                <li className=\"nav-item\"><a href=\"/signup\" className=\"nav-link\">Signup</a></li>\n                            </ul>\n                        </li> */}\n                        <li className=\"nav-item\">\n                            <Link to=\"/contact\" className=\"nav-link\">Contact</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/history\" className=\"nav-link\">History</Link>\n                        </li>\n                    </ul>\n                    {/* Navbar Icons */}\n                    <ul className=\"navbar-nav icons\">\n                        <li className=\"nav-item\">\n                            <a href=\"#\" className=\"nav-link\" data-toggle=\"modal\" data-target=\"#search\">\n                                <i className=\"fas fa-search\" />\n                            </a>\n                        </li>\n                    </ul>\n                    {/* Navbar Toggler */}\n                    <ul className=\"navbar-nav toggle\">\n                        <li className=\"nav-item\">\n                            <a href=\"#\" className=\"nav-link\" data-toggle=\"modal\" data-target=\"#menu\">\n                                <i className=\"fas fa-bars toggle-icon m-0\" />\n                            </a>\n                        </li>\n                    </ul>\n                    {/* Navbar Action Button */}\n                    <ul className=\"navbar-nav action\">\n                        <li className=\"nav-item ml-3\">\n                            {\n                                connectedAddress && _id ?\n                                    <button className=\"btn ml-lg-auto btn-bordered-white\" onClick={logoutUser}><i className=\"icon-logout mr-md-2\" /> Logout</button>\n                                    // <span id=\"wallet-address\" className=\"btn ml-lg-auto btn-bordered-white\"><i className=\"icon-wallet mr-md-2\" />{formatAddress(connectedAddress)}</span>\n                                    :\n                                    <Link to=\"/login\" id=\"wallet-address\" className=\"btn ml-lg-auto btn-bordered-white\"><i className=\"icon-wallet mr-md-2\" />Login</Link>\n                            }\n\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        </header>\n    );\n};\n\nconst mapStateToProps = state => ({\n    wallet: state.wallet\n});\nexport default connect(mapStateToProps, { setWalletAddress, getWalletAddress, logoutUser })(Header);\n","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/breadcrumb/breadcrumb.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/filter-search2/filtersearch2.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/filter-search/filtersearch.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/bids/bids.action.js",["612","613"],"import { toast } from 'react-toastify';\nimport { GET_ERRORS, BEFORE_BID, GET_BIDS, DELETE_BID, CREATE_BID, ACCEPT_BID } from '../../redux/types';\nimport { emptyError } from '../../redux/shared/error/error.action';\nimport { ENV } from './../../config/config';\nimport {placeBidNft, acceptNftOffer} from '../../utils/web3'\nexport const beforeBid = () => {\n    return {\n        type: BEFORE_BID\n    }\n};\n\nexport const placeBid = (body,tokenId,price,toAddress,fromAddress) => dispatch => {\n    alert(\"in herer\")\n    // dispatch(emptyError());\n    const url = `${ENV.url}bid/create`;\n\n    fetch(url, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n            'Authorization': ENV.Authorization,\n            'x-auth-token': ENV.x_auth_token,\n            'Access-Control-Allow-Origin': '*',\n            'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n        },\n        body: JSON.stringify(body)\n    }).then(res => res.json()).then(data => {\n      console.log('data', data)\n        if (data.success) {\n    //    placeBidNft(body,tokenId,price,toAddress,fromAddress)\n           \n            toast.success(data.message)\n            dispatch({\n                type: CREATE_BID,\n                payload: data\n            })\n        } else {\n            toast.error(data.message)\n            dispatch({\n                type: GET_ERRORS,\n                payload: data\n            })\n        }\n    }).catch(error => {\n      console.log('listing', error)\n        if (error.response && error.response.data) {\n            const { data } = error.response\n            if (data.message)\n                toast.error(data.message)\n        }\n        dispatch({\n            type: GET_ERRORS,\n            payload: error\n        })\n    })\n \n};\n\nexport const getBids = (qs = '') => dispatch => {\n    dispatch(emptyError());\n    let url = `${ENV.url}bid/list`;\n    // if (qs)\n    //     url += `?${qs}`\n\n    fetch(url, {\n        method: 'GET',\n        headers: {\n            'content-type': 'application/json',\n            'Authorization': ENV.Authorization,\n            'x-auth-token': ENV.x_auth_token,\n            'Access-Control-Allow-Origin': '*',\n            'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n        }\n    }).then(res => res.json()).then(data => {\n      \n        if (data.success) {\n            dispatch({\n                type: GET_BIDS,\n                payload: data.data\n            })\n        } else {\n            if (!qs)\n                toast.error(data.message)\n            dispatch({\n                type: GET_ERRORS,\n                payload: data\n            })\n        }\n    }).catch(error => {\n        if (error.response && error.response.data) {\n            const { data } = error.response\n            if (data.message)\n                toast.error(data.message)\n        }\n        dispatch({\n            type: GET_ERRORS,\n            payload: error\n        })\n    })\n};\n\nexport const deleteBid = (bidId) => dispatch => {\n    dispatch(emptyError());\n    let url = `${ENV.url}bid/delete/${bidId}`;\n\n    fetch(url, {\n        method: 'DELETE',\n        headers: {\n            'content-type': 'application/json',\n            'Authorization': ENV.Authorization,\n            'x-auth-token': ENV.x_auth_token,\n            'Access-Control-Allow-Origin': '*',\n            'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n        }\n    }).then(res => res.json()).then(data => {\n        if (data.success) {\n            toast.success(data.message)\n            dispatch({\n                type: DELETE_BID,\n                payload: data\n            })\n        } else {\n            toast.error(data.message)\n            dispatch({\n                type: GET_ERRORS,\n                payload: data\n            })\n        }\n    }).catch(error => {\n        if (error.response && error.response.data) {\n            const { data } = error.response\n            if (data.message)\n                toast.error(data.message)\n        }\n        dispatch({\n            type: GET_ERRORS,\n            payload: error\n        })\n    })\n};\n\nexport const acceptBid = (body,tokenId) => dispatch => {\n    dispatch(emptyError());\n   \n    const url = `${ENV.url}bid/accept`;\n    fetch(url, {\n        method: 'PUT',\n        headers: {\n            'content-type': 'application/json',\n            'Authorization': ENV.Authorization,\n            'x-auth-token': ENV.x_auth_token,\n            'Access-Control-Allow-Origin': '*',\n            'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n        },\n        body: JSON.stringify(body)\n    }).then(res => res.json()).then(data => {\n        if (data.success) {\n           \n        //   acceptNftOffer(tokenId,body);\n            \n            toast.success(data.message)\n\n            dispatch({\n                type: ACCEPT_BID,\n                payload: data\n            })\n        } else {\n            toast.error(data.message)\n            dispatch({\n                type: GET_ERRORS,\n                payload: data\n            })\n        }\n    }).catch(error => {\n        if (error.response && error.response.data) {\n            const { data } = error.response\n            if (data.message)\n                toast.error(data.message)\n        }\n        dispatch({\n            type: GET_ERRORS,\n            payload: error\n        })\n    })\n};","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/offers/offers.action.js",["614"],"import { toast } from 'react-toastify';\nimport { GET_ERRORS, BEFORE_OFFER, GET_OFFERS, DELETE_OFFER, CREATE_OFFER, ACCEPT_OFFER } from '../../redux/types';\nimport { emptyError } from '../../redux/shared/error/error.action';\nimport { ENV } from './../../config/config';\nimport {SellOnFixedPrice, acceptNftOffer} from '../../utils/web3'\nexport const beforeOffer = () => {\n    return {\n        type: BEFORE_OFFER\n    }\n};\n\nexport const makeOffer = (body,tokenId,price) => dispatch => {\n    dispatch(emptyError());\n    const url = `${ENV.url}/offer/create`;\n\n    fetch(url, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n            'Authorization': ENV.Authorization,\n            'x-auth-token': ENV.x_auth_token,\n            'Access-Control-Allow-Origin': '*',\n            'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n        },\n        body: JSON.stringify(body)\n    }).then(res => res.json()).then(data => {\n        if (data.success) {\n            // SellOnFixedPrice(tokenId,price)\n            toast.success(data.message)\n            dispatch({\n                type: CREATE_OFFER,\n                payload: data\n            })\n        } else {\n            toast.error(data.message)\n            dispatch({\n                type: GET_ERRORS,\n                payload: data\n            })\n        }\n    }).catch(error => {\n        if (error.response && error.response.data) {\n            const { data } = error.response\n            if (data.message)\n                toast.error(data.message)\n        }\n        dispatch({\n            type: GET_ERRORS,\n            payload: error\n        })\n    })\n};\n\nexport const getOffers = (qs = '') => dispatch => {\n    dispatch(emptyError());\n    let url = `${ENV.url}offer/list`;\n    if (qs)\n        url += `?${qs}`\n\n    fetch(url, {\n        method: 'GET',\n        headers: {\n            'content-type': 'application/json',\n            'Authorization': ENV.Authorization,\n            'x-auth-token': ENV.x_auth_token,\n            'Access-Control-Allow-Origin': '*',\n            'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n        }\n    }).then(res => res.json()).then(data => {\n     \n        if (data.success) {\n            dispatch({\n                type: GET_OFFERS,\n                payload: data.data\n            })\n        } else {\n            if (!qs)\n                toast.error(data.message)\n            dispatch({\n                type: GET_ERRORS,\n                payload: data\n            })\n        }\n    }).catch(error => {\n        if (error.response && error.response.data) {\n            const { data } = error.response\n            if (data.message)\n                toast.error(data.message)\n        }\n        dispatch({\n            type: GET_ERRORS,\n            payload: error\n        })\n    })\n};\n\nexport const deleteOffer = (offerId) => dispatch => {\n    dispatch(emptyError());\n    let url = `${ENV.url}offer/delete/${offerId}`;\n\n    fetch(url, {\n        method: 'DELETE',\n        headers: {\n            'content-type': 'application/json',\n            'Authorization': ENV.Authorization,\n            'x-auth-token': ENV.x_auth_token,\n            'Access-Control-Allow-Origin': '*',\n            'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n        }\n    }).then(res => res.json()).then(data => {\n        if (data.success) {\n            toast.success(data.message)\n            dispatch({\n                type: DELETE_OFFER,\n                payload: data\n            })\n        } else {\n            toast.error(data.message)\n            dispatch({\n                type: GET_ERRORS,\n                payload: data\n            })\n        }\n    }).catch(error => {\n        if (error.response && error.response.data) {\n            const { data } = error.response\n            if (data.message)\n                toast.error(data.message)\n        }\n        dispatch({\n            type: GET_ERRORS,\n            payload: error\n        })\n    })\n};\n\nexport const acceptOffer = (body) => dispatch => {\n    dispatch(emptyError());\n    const url = `${ENV.url}offer/accept`;\n\n    fetch(url, {\n        method: 'PUT',\n        headers: {\n            'content-type': 'application/json',\n            'Authorization': ENV.Authorization,\n            'x-auth-token': ENV.x_auth_token,\n            'Access-Control-Allow-Origin': '*',\n            'x-access-token': ENV.getUserKeys('accessToken') && ENV.getUserKeys('accessToken').accessToken ? ENV.getUserKeys('accessToken').accessToken : ''\n        },\n        body: JSON.stringify(body)\n    }).then(res => res.json()).then(data => {\n\n        if (data.success) {\n            acceptNftOffer(body);\n            toast.success(data.message)\n            dispatch({\n                type: ACCEPT_OFFER,\n                payload: data\n            })\n        } else {\n            toast.error(data.message)\n            dispatch({\n                type: GET_ERRORS,\n                payload: data\n            })\n        }\n    }).catch(error => {\n        if (error.response && error.response.data) {\n            const { data } = error.response\n            if (data.message)\n                toast.error(data.message)\n        }\n        dispatch({\n            type: GET_ERRORS,\n            payload: error\n        })\n    })\n};","/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/faq/faq.action.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/footer/footer.action.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/components/history/index.js",[],"/Users/maryamsaleem/Desktop/ariswap/frontend/src/utils/abiSetup.js",["615"],"import Web3 from 'web3';\nimport liveAuctionsAbi from './abis/ARISwapToken.json'\nimport {ENV} from './../config/config';\n// const web3 = new Web3(\n//   new Web3.providers.HttpProvider('https://data-seed-prebsc-1-s1.binance.org:8545')\n// );\n\nlet web3Provider = window.ethereum;\nvar web3 = new Web3(web3Provider);\n web3 = new Web3(Web3.givenProvider);\n//it's the abi\n\nlet liveAuction=null;\ntry{\n\n     liveAuction = new web3.eth.Contract(liveAuctionsAbi,'0x745f233f80F7ddA3073755e50Fa32F4B8A6A1574');\n}\ncatch(err){\n// console.log(err,\"error in abiSetup\")\n}\n\nexport { liveAuction };\n",{"ruleId":"616","severity":1,"message":"617","line":1,"column":28,"nodeType":"618","messageId":"619","endLine":1,"endColumn":36},{"ruleId":"616","severity":1,"message":"620","line":2,"column":10,"nodeType":"618","messageId":"619","endLine":2,"endColumn":15},{"ruleId":"616","severity":1,"message":"621","line":2,"column":17,"nodeType":"618","messageId":"619","endLine":2,"endColumn":27},{"ruleId":"616","severity":1,"message":"622","line":7,"column":8,"nodeType":"618","messageId":"619","endLine":7,"endColumn":21},{"ruleId":"616","severity":1,"message":"623","line":8,"column":8,"nodeType":"618","messageId":"619","endLine":8,"endColumn":15},{"ruleId":"624","severity":1,"message":"625","line":38,"column":56,"nodeType":"626","endLine":38,"endColumn":68},{"ruleId":"624","severity":1,"message":"625","line":39,"column":53,"nodeType":"626","endLine":39,"endColumn":65},{"ruleId":"616","severity":1,"message":"627","line":8,"column":22,"nodeType":"618","messageId":"619","endLine":8,"endColumn":32},{"ruleId":"616","severity":1,"message":"628","line":10,"column":9,"nodeType":"618","messageId":"619","endLine":10,"endColumn":31},{"ruleId":"629","severity":1,"message":"630","line":31,"column":8,"nodeType":"631","endLine":31,"endColumn":10,"suggestions":"632"},{"ruleId":"629","severity":1,"message":"633","line":41,"column":9,"nodeType":"631","endLine":41,"endColumn":36,"suggestions":"634"},{"ruleId":"629","severity":1,"message":"635","line":53,"column":8,"nodeType":"631","endLine":53,"endColumn":31,"suggestions":"636"},{"ruleId":"629","severity":1,"message":"637","line":59,"column":8,"nodeType":"631","endLine":59,"endColumn":20,"suggestions":"638"},{"ruleId":"639","severity":1,"message":"640","line":86,"column":22,"nodeType":"641","messageId":"642","endLine":86,"endColumn":24},{"ruleId":"643","severity":1,"message":"644","line":126,"column":57,"nodeType":"626","endLine":126,"endColumn":147},{"ruleId":"624","severity":1,"message":"645","line":163,"column":37,"nodeType":"626","endLine":163,"endColumn":121},{"ruleId":"629","severity":1,"message":"635","line":24,"column":8,"nodeType":"631","endLine":24,"endColumn":10,"suggestions":"646"},{"ruleId":"629","severity":1,"message":"635","line":35,"column":8,"nodeType":"631","endLine":35,"endColumn":32,"suggestions":"647"},{"ruleId":"616","severity":1,"message":"623","line":3,"column":8,"nodeType":"618","messageId":"619","endLine":3,"endColumn":15},{"ruleId":"616","severity":1,"message":"648","line":7,"column":10,"nodeType":"618","messageId":"619","endLine":7,"endColumn":14},{"ruleId":"616","severity":1,"message":"649","line":9,"column":10,"nodeType":"618","messageId":"619","endLine":9,"endColumn":19},{"ruleId":"616","severity":1,"message":"650","line":9,"column":21,"nodeType":"618","messageId":"619","endLine":9,"endColumn":29},{"ruleId":"616","severity":1,"message":"651","line":10,"column":8,"nodeType":"618","messageId":"619","endLine":10,"endColumn":14},{"ruleId":"616","severity":1,"message":"652","line":11,"column":8,"nodeType":"618","messageId":"619","endLine":11,"endColumn":20},{"ruleId":"616","severity":1,"message":"627","line":14,"column":22,"nodeType":"618","messageId":"619","endLine":14,"endColumn":32},{"ruleId":"616","severity":1,"message":"653","line":15,"column":9,"nodeType":"618","messageId":"619","endLine":15,"endColumn":30},{"ruleId":"616","severity":1,"message":"654","line":15,"column":32,"nodeType":"618","messageId":"619","endLine":15,"endColumn":46},{"ruleId":"616","severity":1,"message":"655","line":15,"column":48,"nodeType":"618","messageId":"619","endLine":15,"endColumn":66},{"ruleId":"616","severity":1,"message":"656","line":22,"column":10,"nodeType":"618","messageId":"619","endLine":22,"endColumn":16},{"ruleId":"616","severity":1,"message":"657","line":27,"column":9,"nodeType":"618","messageId":"619","endLine":27,"endColumn":16},{"ruleId":"629","severity":1,"message":"635","line":36,"column":6,"nodeType":"631","endLine":36,"endColumn":8,"suggestions":"658"},{"ruleId":"629","severity":1,"message":"635","line":47,"column":6,"nodeType":"631","endLine":47,"endColumn":32,"suggestions":"659"},{"ruleId":"629","severity":1,"message":"633","line":56,"column":5,"nodeType":"631","endLine":56,"endColumn":32,"suggestions":"660"},{"ruleId":"629","severity":1,"message":"661","line":63,"column":6,"nodeType":"631","endLine":63,"endColumn":21,"suggestions":"662"},{"ruleId":"616","severity":1,"message":"663","line":89,"column":9,"nodeType":"618","messageId":"619","endLine":89,"endColumn":16},{"ruleId":"629","severity":1,"message":"664","line":104,"column":5,"nodeType":"631","endLine":104,"endColumn":45,"suggestions":"665"},{"ruleId":"624","severity":1,"message":"645","line":150,"column":27,"nodeType":"626","endLine":150,"endColumn":111},{"ruleId":"616","severity":1,"message":"666","line":4,"column":8,"nodeType":"618","messageId":"619","endLine":4,"endColumn":21},{"ruleId":"629","severity":1,"message":"667","line":15,"column":6,"nodeType":"631","endLine":15,"endColumn":8,"suggestions":"668"},{"ruleId":"629","severity":1,"message":"635","line":21,"column":6,"nodeType":"631","endLine":21,"endColumn":37,"suggestions":"669"},{"ruleId":"670","severity":1,"message":"671","line":80,"column":49,"nodeType":"626","messageId":"672","endLine":80,"endColumn":123,"fix":"673"},{"ruleId":"670","severity":1,"message":"671","line":85,"column":48,"nodeType":"626","messageId":"672","endLine":85,"endColumn":120,"fix":"674"},{"ruleId":"670","severity":1,"message":"671","line":90,"column":46,"nodeType":"626","messageId":"672","endLine":90,"endColumn":120,"fix":"675"},{"ruleId":"670","severity":1,"message":"671","line":95,"column":45,"nodeType":"626","messageId":"672","endLine":95,"endColumn":111,"fix":"676"},{"ruleId":"624","severity":1,"message":"625","line":102,"column":17,"nodeType":"626","endLine":102,"endColumn":76},{"ruleId":"616","severity":1,"message":"677","line":5,"column":10,"nodeType":"618","messageId":"619","endLine":5,"endColumn":17},{"ruleId":"616","severity":1,"message":"678","line":106,"column":15,"nodeType":"618","messageId":"619","endLine":106,"endColumn":21},{"ruleId":"616","severity":1,"message":"679","line":2,"column":8,"nodeType":"618","messageId":"619","endLine":2,"endColumn":12},{"ruleId":"616","severity":1,"message":"680","line":2,"column":10,"nodeType":"618","messageId":"619","endLine":2,"endColumn":18},{"ruleId":"629","severity":1,"message":"681","line":57,"column":8,"nodeType":"631","endLine":57,"endColumn":34,"suggestions":"682"},{"ruleId":"624","severity":1,"message":"625","line":72,"column":119,"nodeType":"626","endLine":72,"endColumn":131},{"ruleId":"624","severity":1,"message":"625","line":90,"column":57,"nodeType":"626","endLine":90,"endColumn":110},{"ruleId":"624","severity":1,"message":"625","line":45,"column":87,"nodeType":"626","endLine":45,"endColumn":114},{"ruleId":"624","severity":1,"message":"645","line":68,"column":49,"nodeType":"626","endLine":68,"endColumn":98},{"ruleId":"616","severity":1,"message":"683","line":4,"column":10,"nodeType":"618","messageId":"619","endLine":4,"endColumn":29},{"ruleId":"616","severity":1,"message":"684","line":22,"column":12,"nodeType":"618","messageId":"619","endLine":22,"endColumn":21},{"ruleId":"616","severity":1,"message":"685","line":31,"column":12,"nodeType":"618","messageId":"619","endLine":31,"endColumn":15},{"ruleId":"629","severity":1,"message":"635","line":53,"column":8,"nodeType":"631","endLine":53,"endColumn":10,"suggestions":"686"},{"ruleId":"629","severity":1,"message":"635","line":60,"column":8,"nodeType":"631","endLine":60,"endColumn":29,"suggestions":"687"},{"ruleId":"629","severity":1,"message":"635","line":40,"column":8,"nodeType":"631","endLine":40,"endColumn":35,"suggestions":"688"},{"ruleId":"616","severity":1,"message":"689","line":6,"column":8,"nodeType":"618","messageId":"619","endLine":6,"endColumn":20},{"ruleId":"616","severity":1,"message":"648","line":8,"column":10,"nodeType":"618","messageId":"619","endLine":8,"endColumn":14},{"ruleId":"616","severity":1,"message":"627","line":9,"column":22,"nodeType":"618","messageId":"619","endLine":9,"endColumn":32},{"ruleId":"629","severity":1,"message":"690","line":37,"column":8,"nodeType":"631","endLine":37,"endColumn":10,"suggestions":"691"},{"ruleId":"629","severity":1,"message":"633","line":45,"column":5,"nodeType":"631","endLine":45,"endColumn":32,"suggestions":"692"},{"ruleId":"629","severity":1,"message":"693","line":52,"column":5,"nodeType":"631","endLine":52,"endColumn":30,"suggestions":"694"},{"ruleId":"629","severity":1,"message":"635","line":72,"column":8,"nodeType":"631","endLine":72,"endColumn":28,"suggestions":"695"},{"ruleId":"629","severity":1,"message":"661","line":78,"column":8,"nodeType":"631","endLine":78,"endColumn":23,"suggestions":"696"},{"ruleId":"624","severity":1,"message":"645","line":172,"column":29,"nodeType":"626","endLine":172,"endColumn":113},{"ruleId":"697","severity":1,"message":"698","line":8,"column":1,"nodeType":"699","endLine":27,"endColumn":2},{"ruleId":"700","severity":1,"message":"701","line":14,"column":17,"nodeType":"702","messageId":"642","endLine":14,"endColumn":30},{"ruleId":"616","severity":1,"message":"703","line":24,"column":8,"nodeType":"618","messageId":"619","endLine":24,"endColumn":20},{"ruleId":"616","severity":1,"message":"704","line":30,"column":3,"nodeType":"618","messageId":"619","endLine":30,"endColumn":13},{"ruleId":"616","severity":1,"message":"705","line":78,"column":24,"nodeType":"618","messageId":"619","endLine":78,"endColumn":39},{"ruleId":"616","severity":1,"message":"706","line":80,"column":24,"nodeType":"618","messageId":"619","endLine":80,"endColumn":39},{"ruleId":"629","severity":1,"message":"635","line":90,"column":6,"nodeType":"631","endLine":90,"endColumn":8,"suggestions":"707"},{"ruleId":"629","severity":1,"message":"635","line":100,"column":6,"nodeType":"631","endLine":100,"endColumn":26,"suggestions":"708"},{"ruleId":"629","severity":1,"message":"635","line":111,"column":6,"nodeType":"631","endLine":111,"endColumn":28,"suggestions":"709"},{"ruleId":"639","severity":1,"message":"640","line":181,"column":18,"nodeType":"641","messageId":"642","endLine":181,"endColumn":20},{"ruleId":"624","severity":1,"message":"625","line":149,"column":53,"nodeType":"626","endLine":149,"endColumn":105},{"ruleId":"697","severity":1,"message":"698","line":10,"column":1,"nodeType":"699","endLine":49,"endColumn":2},{"ruleId":"697","severity":1,"message":"698","line":13,"column":1,"nodeType":"699","endLine":67,"endColumn":2},{"ruleId":"697","severity":1,"message":"698","line":12,"column":1,"nodeType":"699","endLine":32,"endColumn":2},{"ruleId":"697","severity":1,"message":"698","line":8,"column":1,"nodeType":"699","endLine":32,"endColumn":2},{"ruleId":"697","severity":1,"message":"698","line":7,"column":1,"nodeType":"699","endLine":24,"endColumn":2},{"ruleId":"616","severity":1,"message":"710","line":15,"column":9,"nodeType":"618","messageId":"619","endLine":15,"endColumn":28},{"ruleId":"697","severity":1,"message":"698","line":8,"column":1,"nodeType":"699","endLine":27,"endColumn":2},{"ruleId":"697","severity":1,"message":"698","line":8,"column":1,"nodeType":"699","endLine":27,"endColumn":2},{"ruleId":"697","severity":1,"message":"698","line":8,"column":1,"nodeType":"699","endLine":27,"endColumn":2},{"ruleId":"697","severity":1,"message":"698","line":11,"column":1,"nodeType":"699","endLine":55,"endColumn":2},{"ruleId":"697","severity":1,"message":"698","line":14,"column":1,"nodeType":"699","endLine":59,"endColumn":2},{"ruleId":"697","severity":1,"message":"698","line":13,"column":1,"nodeType":"699","endLine":56,"endColumn":2},{"ruleId":"697","severity":1,"message":"698","line":5,"column":1,"nodeType":"699","endLine":14,"endColumn":2},{"ruleId":"616","severity":1,"message":"711","line":11,"column":8,"nodeType":"618","messageId":"619","endLine":11,"endColumn":14},{"ruleId":"616","severity":1,"message":"712","line":22,"column":10,"nodeType":"618","messageId":"619","endLine":22,"endColumn":18},{"ruleId":"616","severity":1,"message":"627","line":23,"column":22,"nodeType":"618","messageId":"619","endLine":23,"endColumn":32},{"ruleId":"616","severity":1,"message":"628","line":27,"column":9,"nodeType":"618","messageId":"619","endLine":27,"endColumn":31},{"ruleId":"629","severity":1,"message":"635","line":43,"column":6,"nodeType":"631","endLine":43,"endColumn":8,"suggestions":"713"},{"ruleId":"629","severity":1,"message":"633","line":50,"column":5,"nodeType":"631","endLine":50,"endColumn":32,"suggestions":"714"},{"ruleId":"616","severity":1,"message":"715","line":54,"column":25,"nodeType":"618","messageId":"619","endLine":54,"endColumn":35},{"ruleId":"629","severity":1,"message":"635","line":60,"column":6,"nodeType":"631","endLine":60,"endColumn":29,"suggestions":"716"},{"ruleId":"639","severity":1,"message":"640","line":81,"column":18,"nodeType":"641","messageId":"642","endLine":81,"endColumn":20},{"ruleId":"643","severity":1,"message":"644","line":140,"column":31,"nodeType":"626","endLine":148,"endColumn":33},{"ruleId":"616","severity":1,"message":"689","line":2,"column":8,"nodeType":"618","messageId":"619","endLine":2,"endColumn":20},{"ruleId":"616","severity":1,"message":"648","line":3,"column":10,"nodeType":"618","messageId":"619","endLine":3,"endColumn":14},{"ruleId":"616","severity":1,"message":"717","line":5,"column":7,"nodeType":"618","messageId":"619","endLine":5,"endColumn":15},{"ruleId":"616","severity":1,"message":"718","line":12,"column":12,"nodeType":"618","messageId":"619","endLine":12,"endColumn":19},{"ruleId":"616","severity":1,"message":"719","line":14,"column":11,"nodeType":"618","messageId":"619","endLine":14,"endColumn":21},{"ruleId":"616","severity":1,"message":"720","line":17,"column":7,"nodeType":"618","messageId":"619","endLine":17,"endColumn":11},{"ruleId":"643","severity":1,"message":"644","line":12,"column":25,"nodeType":"626","endLine":12,"endColumn":167},{"ruleId":"643","severity":1,"message":"644","line":45,"column":29,"nodeType":"626","endLine":45,"endColumn":149},{"ruleId":"629","severity":1,"message":"721","line":21,"column":8,"nodeType":"631","endLine":21,"endColumn":10,"suggestions":"722"},{"ruleId":"629","severity":1,"message":"635","line":38,"column":8,"nodeType":"631","endLine":38,"endColumn":34,"suggestions":"723"},{"ruleId":"643","severity":1,"message":"644","line":86,"column":57,"nodeType":"626","endLine":86,"endColumn":187},{"ruleId":"616","severity":1,"message":"678","line":46,"column":19,"nodeType":"618","messageId":"619","endLine":46,"endColumn":25},{"ruleId":"616","severity":1,"message":"724","line":2,"column":128,"nodeType":"618","messageId":"619","endLine":2,"endColumn":143},{"ruleId":"616","severity":1,"message":"648","line":5,"column":10,"nodeType":"618","messageId":"619","endLine":5,"endColumn":14},{"ruleId":"616","severity":1,"message":"656","line":14,"column":12,"nodeType":"618","messageId":"619","endLine":14,"endColumn":18},{"ruleId":"616","severity":1,"message":"725","line":15,"column":12,"nodeType":"618","messageId":"619","endLine":15,"endColumn":23},{"ruleId":"629","severity":1,"message":"635","line":22,"column":8,"nodeType":"631","endLine":22,"endColumn":10,"suggestions":"726"},{"ruleId":"629","severity":1,"message":"635","line":37,"column":8,"nodeType":"631","endLine":37,"endColumn":28,"suggestions":"727"},{"ruleId":"629","severity":1,"message":"661","line":43,"column":8,"nodeType":"631","endLine":43,"endColumn":23,"suggestions":"728"},{"ruleId":"624","severity":1,"message":"645","line":120,"column":25,"nodeType":"626","endLine":120,"endColumn":109},{"ruleId":"629","severity":1,"message":"729","line":9,"column":15,"nodeType":"730","endLine":12,"endColumn":6},{"ruleId":"629","severity":1,"message":"635","line":11,"column":8,"nodeType":"631","endLine":11,"endColumn":10,"suggestions":"731"},{"ruleId":"629","severity":1,"message":"732","line":14,"column":8,"nodeType":"631","endLine":14,"endColumn":35,"suggestions":"733"},{"ruleId":"629","severity":1,"message":"635","line":12,"column":8,"nodeType":"631","endLine":12,"endColumn":10,"suggestions":"734"},{"ruleId":"629","severity":1,"message":"735","line":16,"column":8,"nodeType":"631","endLine":16,"endColumn":35,"suggestions":"736"},{"ruleId":"616","severity":1,"message":"737","line":11,"column":10,"nodeType":"618","messageId":"619","endLine":11,"endColumn":19},{"ruleId":"616","severity":1,"message":"738","line":11,"column":21,"nodeType":"618","messageId":"619","endLine":11,"endColumn":24},{"ruleId":"616","severity":1,"message":"739","line":11,"column":26,"nodeType":"618","messageId":"619","endLine":11,"endColumn":29},{"ruleId":"616","severity":1,"message":"740","line":11,"column":31,"nodeType":"618","messageId":"619","endLine":11,"endColumn":37},{"ruleId":"616","severity":1,"message":"741","line":17,"column":64,"nodeType":"618","messageId":"619","endLine":17,"endColumn":83},{"ruleId":"616","severity":1,"message":"742","line":51,"column":5,"nodeType":"618","messageId":"619","endLine":51,"endColumn":9},{"ruleId":"639","severity":1,"message":"640","line":124,"column":18,"nodeType":"641","messageId":"642","endLine":124,"endColumn":20},{"ruleId":"639","severity":1,"message":"640","line":127,"column":18,"nodeType":"641","messageId":"642","endLine":127,"endColumn":20},{"ruleId":"639","severity":1,"message":"640","line":130,"column":18,"nodeType":"641","messageId":"642","endLine":130,"endColumn":20},{"ruleId":"639","severity":1,"message":"640","line":296,"column":49,"nodeType":"641","messageId":"642","endLine":296,"endColumn":51},{"ruleId":"616","severity":1,"message":"743","line":469,"column":26,"nodeType":"618","messageId":"619","endLine":469,"endColumn":35},{"ruleId":"616","severity":1,"message":"744","line":559,"column":70,"nodeType":"618","messageId":"619","endLine":559,"endColumn":74},{"ruleId":"616","severity":1,"message":"745","line":559,"column":76,"nodeType":"618","messageId":"619","endLine":559,"endColumn":82},{"ruleId":"643","severity":1,"message":"644","line":580,"column":57,"nodeType":"626","endLine":580,"endColumn":96},{"ruleId":"643","severity":1,"message":"644","line":684,"column":69,"nodeType":"626","endLine":684,"endColumn":211},{"ruleId":"643","severity":1,"message":"644","line":748,"column":73,"nodeType":"626","endLine":748,"endColumn":168},{"ruleId":"746","severity":1,"message":"747","line":832,"column":143,"nodeType":"748","messageId":"749","endLine":832,"endColumn":163},{"ruleId":"746","severity":1,"message":"747","line":832,"column":164,"nodeType":"748","messageId":"749","endLine":832,"endColumn":191},{"ruleId":"616","severity":1,"message":"750","line":2,"column":8,"nodeType":"618","messageId":"619","endLine":2,"endColumn":13},{"ruleId":"616","severity":1,"message":"751","line":3,"column":10,"nodeType":"618","messageId":"619","endLine":3,"endColumn":14},{"ruleId":"616","severity":1,"message":"752","line":6,"column":7,"nodeType":"618","messageId":"619","endLine":6,"endColumn":15},{"ruleId":"616","severity":1,"message":"680","line":3,"column":10,"nodeType":"618","messageId":"619","endLine":3,"endColumn":18},{"ruleId":"616","severity":1,"message":"753","line":5,"column":10,"nodeType":"618","messageId":"619","endLine":5,"endColumn":21},{"ruleId":"616","severity":1,"message":"754","line":6,"column":10,"nodeType":"618","messageId":"619","endLine":6,"endColumn":20},{"ruleId":"616","severity":1,"message":"755","line":7,"column":10,"nodeType":"618","messageId":"619","endLine":7,"endColumn":20},{"ruleId":"616","severity":1,"message":"756","line":7,"column":22,"nodeType":"618","messageId":"619","endLine":7,"endColumn":32},{"ruleId":"616","severity":1,"message":"757","line":7,"column":34,"nodeType":"618","messageId":"619","endLine":7,"endColumn":42},{"ruleId":"616","severity":1,"message":"758","line":7,"column":44,"nodeType":"618","messageId":"619","endLine":7,"endColumn":54},{"ruleId":"616","severity":1,"message":"759","line":7,"column":56,"nodeType":"618","messageId":"619","endLine":7,"endColumn":66},{"ruleId":"616","severity":1,"message":"760","line":7,"column":68,"nodeType":"618","messageId":"619","endLine":7,"endColumn":78},{"ruleId":"616","severity":1,"message":"761","line":42,"column":7,"nodeType":"618","messageId":"619","endLine":42,"endColumn":17},{"ruleId":"616","severity":1,"message":"762","line":3,"column":8,"nodeType":"618","messageId":"619","endLine":3,"endColumn":19},{"ruleId":"616","severity":1,"message":"763","line":7,"column":9,"nodeType":"618","messageId":"619","endLine":7,"endColumn":17},{"ruleId":"616","severity":1,"message":"764","line":8,"column":9,"nodeType":"618","messageId":"619","endLine":8,"endColumn":30},{"ruleId":"616","severity":1,"message":"680","line":10,"column":10,"nodeType":"618","messageId":"619","endLine":10,"endColumn":18},{"ruleId":"616","severity":1,"message":"765","line":59,"column":15,"nodeType":"618","messageId":"619","endLine":59,"endColumn":22},{"ruleId":"616","severity":1,"message":"765","line":78,"column":15,"nodeType":"618","messageId":"619","endLine":78,"endColumn":22},{"ruleId":"616","severity":1,"message":"766","line":131,"column":15,"nodeType":"618","messageId":"619","endLine":131,"endColumn":24},{"ruleId":"643","severity":1,"message":"644","line":9,"column":17,"nodeType":"626","endLine":9,"endColumn":133},{"ruleId":"670","severity":1,"message":"671","line":26,"column":51,"nodeType":"626","messageId":"672","endLine":26,"endColumn":117,"fix":"767"},{"ruleId":"670","severity":1,"message":"671","line":31,"column":50,"nodeType":"626","messageId":"672","endLine":31,"endColumn":114,"fix":"768"},{"ruleId":"670","severity":1,"message":"671","line":36,"column":48,"nodeType":"626","messageId":"672","endLine":36,"endColumn":114,"fix":"769"},{"ruleId":"670","severity":1,"message":"671","line":41,"column":47,"nodeType":"626","messageId":"672","endLine":41,"endColumn":105,"fix":"770"},{"ruleId":"624","severity":1,"message":"625","line":48,"column":25,"nodeType":"626","endLine":48,"endColumn":84},{"ruleId":"629","severity":1,"message":"635","line":12,"column":8,"nodeType":"631","endLine":12,"endColumn":10,"suggestions":"771"},{"ruleId":"629","severity":1,"message":"772","line":19,"column":8,"nodeType":"631","endLine":19,"endColumn":29,"suggestions":"773"},{"ruleId":"624","severity":1,"message":"625","line":37,"column":45,"nodeType":"626","endLine":37,"endColumn":57},{"ruleId":"624","severity":1,"message":"625","line":49,"column":37,"nodeType":"626","endLine":49,"endColumn":89},{"ruleId":"624","severity":1,"message":"625","line":60,"column":45,"nodeType":"626","endLine":60,"endColumn":78},{"ruleId":"616","severity":1,"message":"774","line":1,"column":8,"nodeType":"618","messageId":"619","endLine":1,"endColumn":13},{"ruleId":"639","severity":1,"message":"640","line":34,"column":143,"nodeType":"641","messageId":"642","endLine":34,"endColumn":145},{"ruleId":"624","severity":1,"message":"625","line":79,"column":41,"nodeType":"626","endLine":79,"endColumn":85},{"ruleId":"629","severity":1,"message":"635","line":21,"column":8,"nodeType":"631","endLine":21,"endColumn":10,"suggestions":"775"},{"ruleId":"629","severity":1,"message":"776","line":27,"column":8,"nodeType":"631","endLine":27,"endColumn":37,"suggestions":"777"},{"ruleId":"670","severity":1,"message":"671","line":47,"column":45,"nodeType":"626","messageId":"672","endLine":47,"endColumn":85,"fix":"778"},{"ruleId":"670","severity":1,"message":"671","line":55,"column":45,"nodeType":"626","messageId":"672","endLine":55,"endColumn":84,"fix":"779"},{"ruleId":"670","severity":1,"message":"671","line":63,"column":45,"nodeType":"626","messageId":"672","endLine":63,"endColumn":86,"fix":"780"},{"ruleId":"670","severity":1,"message":"671","line":71,"column":45,"nodeType":"626","messageId":"672","endLine":71,"endColumn":84,"fix":"781"},{"ruleId":"670","severity":1,"message":"671","line":79,"column":45,"nodeType":"626","messageId":"672","endLine":79,"endColumn":81,"fix":"782"},{"ruleId":"616","severity":1,"message":"656","line":13,"column":12,"nodeType":"618","messageId":"619","endLine":13,"endColumn":18},{"ruleId":"629","severity":1,"message":"729","line":16,"column":15,"nodeType":"730","endLine":35,"endColumn":6},{"ruleId":"629","severity":1,"message":"635","line":35,"column":8,"nodeType":"631","endLine":35,"endColumn":10,"suggestions":"783"},{"ruleId":"616","severity":1,"message":"784","line":51,"column":11,"nodeType":"618","messageId":"619","endLine":51,"endColumn":24},{"ruleId":"624","severity":1,"message":"645","line":75,"column":29,"nodeType":"626","endLine":75,"endColumn":53},{"ruleId":"624","severity":1,"message":"625","line":117,"column":29,"nodeType":"626","endLine":117,"endColumn":104},{"ruleId":"624","severity":1,"message":"625","line":125,"column":29,"nodeType":"626","endLine":125,"endColumn":102},{"ruleId":"616","severity":1,"message":"785","line":5,"column":9,"nodeType":"618","messageId":"619","endLine":5,"endColumn":20},{"ruleId":"616","severity":1,"message":"786","line":5,"column":22,"nodeType":"618","messageId":"619","endLine":5,"endColumn":36},{"ruleId":"616","severity":1,"message":"787","line":5,"column":9,"nodeType":"618","messageId":"619","endLine":5,"endColumn":25},{"ruleId":"616","severity":1,"message":"788","line":3,"column":9,"nodeType":"618","messageId":"619","endLine":3,"endColumn":12},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Table' is defined but never used.","'Pagination' is defined but never used.","'MyCollections' is defined but never used.","'Explore' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'beforeUser' is defined but never used.","'globalPlaceholderImage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getLiveAuctions' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["789"],"React Hook useEffect has a missing dependency: 'props.user.sellers'. Either include it or remove the dependency array. If 'setCreator' needs the current value of 'props.user.sellers', you can also switch to useReducer instead of useState and read 'props.user.sellers' in the reducer.",["790"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["791"],"React Hook useEffect has a missing dependency: 'auctions.length'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLoadMoreBtn' needs the current value of 'auctions.length'.",["792"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["793"],["794"],"'Link' is defined but never used.","'Accordion' is defined but never used.","'Dropdown' is defined but never used.","'Select' is defined but never used.","'FilterSearch' is defined but never used.","'collectionFeaturedImg' is assigned a value but never used.","'userDefaultImg' is assigned a value but never used.","'categoryDefaultImg' is assigned a value but never used.","'loader' is assigned a value but never used.","'nftsRef' is assigned a value but never used.",["795"],["796"],["797"],"React Hook useEffect has a missing dependency: 'nfts.length'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLoadMoreBtn' needs the current value of 'nfts.length'.",["798"],"'getNFTs' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filterNfts' and 'props.nft'. Either include them or remove the dependency array.",["799"],"'AuthorProfile' is defined but never used.","React Hook useEffect has missing dependencies: 'params.authorId' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["800"],["801"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"802","text":"803"},{"range":"804","text":"803"},{"range":"805","text":"803"},{"range":"806","text":"803"},"'getUser' is defined but never used.","'userId' is assigned a value but never used.","'Help' is defined but never used.","'Redirect' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'props.collection.collections'. Either include them or remove the dependency array.",["807"],"'SET_INDIVIDUAL_USER' is defined but never used.","'bannerUrl' is assigned a value but never used.","'_id' is assigned a value but never used.",["808"],["809"],["810"],"'ExploreItems' is defined but never used.","React Hook useEffect has missing dependencies: 'getNFTs', 'pathname', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["811"],["812"],"React Hook useEffect has a missing dependency: 'props.user.creators'. Either include it or remove the dependency array. If 'setCreator' needs the current value of 'props.user.creators', you can also switch to useReducer instead of useState and read 'props.user.creators' in the reducer.",["813"],["814"],["815"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-dupe-keys","Duplicate key 'featuredItems'.","ObjectExpression","'currencyIcon' is defined but never used.","'currencies' is assigned a value but never used.","'setReserveBuyer' is assigned a value but never used.","'setReservePrice' is assigned a value but never used.",["816"],["817"],["818"],"'RiArrowDropDownLine' is defined but never used.","'moment' is defined but never used.","'useTimer' is defined but never used.",["819"],["820"],"'pagination' is assigned a value but never used.",["821"],"'initData' is assigned a value but never used.","'viewAll' is assigned a value but never used.","'getViewAll' is assigned a value but never used.","'nfts' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCollections' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["822"],["823"],"'ALL_COLLECTIONS' is defined but never used.","'loadMoreBtn' is assigned a value but never used.",["824"],["825"],["826"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["827"],"React Hook useEffect has a missing dependency: 'props.user.sellers'. Either include it or remove the dependency array. If 'setSellers' needs the current value of 'props.user.sellers', you can also switch to useReducer instead of useState and read 'props.user.sellers' in the reducer.",["828"],["829"],"React Hook useEffect has a missing dependency: 'props.user.sellers'. Either include it or remove the dependency array. If 'setCreators' needs the current value of 'props.user.sellers', you can also switch to useReducer instead of useState and read 'props.user.sellers' in the reducer.",["830"],"'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","'objectToQueryString' is assigned a value but never used.","'nft1' is assigned a value but never used.","'nftConfig' is assigned a value but never used.","'bids' is assigned a value but never used.","'offers' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'axios' is defined but never used.","'init' is defined but never used.","'BASE_URL' is assigned a value but never used.","'useDispatch' is defined but never used.","'emptyError' is defined but never used.","'GET_ERRORS' is defined but never used.","'BEFORE_BID' is defined but never used.","'GET_BIDS' is defined but never used.","'DELETE_BID' is defined but never used.","'CREATE_BID' is defined but never used.","'ACCEPT_BID' is defined but never used.","'testingURl' is assigned a value but never used.","'contractAbi' is defined but never used.","'placeBid' is defined but never used.","'setFixedPriceNftTOken' is defined but never used.","'network' is assigned a value but never used.","'myNewData' is assigned a value but never used.",{"range":"831","text":"803"},{"range":"832","text":"803"},{"range":"833","text":"803"},{"range":"834","text":"803"},["835"],"React Hook useEffect has a missing dependency: 'props.faqs.faqs'. Either include it or remove the dependency array.",["836"],"'react' is defined but never used.",["837"],"React Hook useEffect has a missing dependency: 'props.settings.settings'. Either include it or remove the dependency array. If 'setData' needs the current value of 'props.settings.settings', you can also switch to useReducer instead of useState and read 'props.settings.settings' in the reducer.",["838"],{"range":"839","text":"803"},{"range":"840","text":"803"},{"range":"841","text":"803"},{"range":"842","text":"803"},{"range":"843","text":"803"},["844"],"'formatAddress' is assigned a value but never used.","'placeBidNft' is defined but never used.","'acceptNftOffer' is defined but never used.","'SellOnFixedPrice' is defined but never used.","'ENV' is defined but never used.",{"desc":"845","fix":"846"},{"desc":"847","fix":"848"},{"desc":"849","fix":"850"},{"desc":"851","fix":"852"},{"desc":"853","fix":"854"},{"desc":"855","fix":"856"},{"desc":"853","fix":"857"},{"desc":"858","fix":"859"},{"desc":"847","fix":"860"},{"desc":"861","fix":"862"},{"desc":"863","fix":"864"},{"desc":"865","fix":"866"},{"desc":"867","fix":"868"},[3239,3239]," rel=\"noreferrer\"",[3479,3479],[3716,3716],[3950,3950],{"desc":"869","fix":"870"},{"desc":"853","fix":"871"},{"desc":"872","fix":"873"},{"desc":"874","fix":"875"},{"desc":"876","fix":"877"},{"desc":"847","fix":"878"},{"desc":"879","fix":"880"},{"desc":"881","fix":"882"},{"desc":"861","fix":"883"},{"desc":"853","fix":"884"},{"desc":"881","fix":"885"},{"desc":"886","fix":"887"},{"desc":"853","fix":"888"},{"desc":"847","fix":"889"},{"desc":"849","fix":"890"},{"desc":"891","fix":"892"},{"desc":"858","fix":"893"},{"desc":"853","fix":"894"},{"desc":"881","fix":"895"},{"desc":"861","fix":"896"},{"desc":"853","fix":"897"},{"desc":"847","fix":"898"},{"desc":"853","fix":"899"},{"desc":"847","fix":"900"},[1337,1337],[1609,1609],[1878,1878],[2144,2144],{"desc":"853","fix":"901"},{"desc":"902","fix":"903"},{"desc":"853","fix":"904"},{"desc":"905","fix":"906"},[1644,1644],[2086,2086],[2526,2526],[2966,2966],[3396,3396],{"desc":"853","fix":"907"},"Update the dependencies array to be: [getLiveAuctions, props]",{"range":"908","text":"909"},"Update the dependencies array to be: [props.user.sellers, props.user.topSellersAuth]",{"range":"910","text":"911"},"Update the dependencies array to be: [props, props.auction.getAuth]",{"range":"912","text":"913"},"Update the dependencies array to be: [auctions.length, pagination]",{"range":"914","text":"915"},"Update the dependencies array to be: [props]",{"range":"916","text":"917"},"Update the dependencies array to be: [props, props.category.getAuth]",{"range":"918","text":"919"},{"range":"920","text":"917"},"Update the dependencies array to be: [props, props.collection.getAuth]",{"range":"921","text":"922"},{"range":"923","text":"911"},"Update the dependencies array to be: [nftPagination, nfts.length]",{"range":"924","text":"925"},"Update the dependencies array to be: [props.nft.nftsAuth, collection, limit, props.nft, filterNfts]",{"range":"926","text":"927"},"Update the dependencies array to be: [params.authorId, props]",{"range":"928","text":"929"},"Update the dependencies array to be: [props, props.user.individualUserAuth]",{"range":"930","text":"931"},"Update the dependencies array to be: [history, props.collection.collections, props.collection.getAuth]",{"range":"932","text":"933"},{"range":"934","text":"917"},"Update the dependencies array to be: [props, props.user.userAuth]",{"range":"935","text":"936"},"Update the dependencies array to be: [props, props.contact.contactAuth]",{"range":"937","text":"938"},"Update the dependencies array to be: [getNFTs, pathname, props]",{"range":"939","text":"940"},{"range":"941","text":"911"},"Update the dependencies array to be: [props.user.creators, props.user.creatorsAuth]",{"range":"942","text":"943"},"Update the dependencies array to be: [props, props.nft.nftsAuth]",{"range":"944","text":"945"},{"range":"946","text":"925"},{"range":"947","text":"917"},{"range":"948","text":"945"},"Update the dependencies array to be: [props, props.nft.upsertAuth]",{"range":"949","text":"950"},{"range":"951","text":"917"},{"range":"952","text":"911"},{"range":"953","text":"913"},"Update the dependencies array to be: [getCollections, props]",{"range":"954","text":"955"},{"range":"956","text":"922"},{"range":"957","text":"917"},{"range":"958","text":"945"},{"range":"959","text":"925"},{"range":"960","text":"917"},{"range":"961","text":"911"},{"range":"962","text":"917"},{"range":"963","text":"911"},{"range":"964","text":"917"},"Update the dependencies array to be: [props.faqs.faqs, props.faqs.faqsAuth]",{"range":"965","text":"966"},{"range":"967","text":"917"},"Update the dependencies array to be: [props.settings.settings, props.settings.settingsAuth]",{"range":"968","text":"969"},{"range":"970","text":"917"},[1116,1118],"[getLiveAuctions, props]",[1360,1387],"[props.user.sellers, props.user.topSellersAuth]",[1723,1746],"[props, props.auction.getAuth]",[1979,1991],"[auctions.length, pagination]",[854,856],"[props]",[1201,1225],"[props, props.category.getAuth]",[1635,1637],[1888,1914],"[props, props.collection.getAuth]",[2036,2063],[2287,2302],"[nftPagination, nfts.length]",[3218,3258],"[props.nft.nftsAuth, collection, limit, props.nft, filterNfts]",[611,613],"[params.authorId, props]",[771,802],"[props, props.user.individualUserAuth]",[2210,2236],"[history, props.collection.collections, props.collection.getAuth]",[2481,2483],[2621,2642],"[props, props.user.userAuth]",[956,983],"[props, props.contact.contactAuth]",[1276,1278],"[getNFTs, pathname, props]",[1465,1492],[1688,1713],"[props.user.creators, props.user.creatorsAuth]",[2333,2353],"[props, props.nft.nftsAuth]",[2587,2602],[2523,2525],[2737,2757],[3070,3092],"[props, props.nft.upsertAuth]",[1565,1567],[1758,1785],[2036,2059],[785,787],"[getCollections, props]",[1353,1379],[818,820],[1292,1312],[1527,1542],[389,391],[464,491],[414,416],[498,525],[275,277],[427,448],"[props.faqs.faqs, props.faqs.faqsAuth]",[513,515],[645,674],"[props.settings.settings, props.settings.settingsAuth]",[1276,1278]]